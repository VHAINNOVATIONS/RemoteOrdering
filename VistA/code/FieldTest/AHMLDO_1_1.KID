KIDS Distribution saved on Mar 06, 2017@17:13:20
replaced rpc
**KIDS**:AHMLDO*1.0*1^

**INSTALL NAME**
AHMLDO*1.0*1
"BLD",9642,0)
AHMLDO*1.0*1^MOBILE SCHEDULING APPLICATIONS^0^3170306^n
"BLD",9642,1,0)
^^1^1^3160906^
"BLD",9642,1,1,0)
Remote ordering Hub
"BLD",9642,4,0)
^9.64PA^^
"BLD",9642,6.3)
53
"BLD",9642,"INID")
^n
"BLD",9642,"INIT")

"BLD",9642,"KRN",0)
^9.67PA^779.2^20
"BLD",9642,"KRN",.4,0)
.4
"BLD",9642,"KRN",.401,0)
.401
"BLD",9642,"KRN",.402,0)
.402
"BLD",9642,"KRN",.403,0)
.403
"BLD",9642,"KRN",.5,0)
.5
"BLD",9642,"KRN",.84,0)
.84
"BLD",9642,"KRN",3.6,0)
3.6
"BLD",9642,"KRN",3.8,0)
3.8
"BLD",9642,"KRN",3.8,"NM",0)
^9.68A^1^1
"BLD",9642,"KRN",3.8,"NM",1,0)
AHMLDO^^0
"BLD",9642,"KRN",3.8,"NM","B","AHMLDO",1)

"BLD",9642,"KRN",9.2,0)
9.2
"BLD",9642,"KRN",9.8,0)
9.8
"BLD",9642,"KRN",9.8,"NM",0)
^9.68A^16^15
"BLD",9642,"KRN",9.8,"NM",1,0)
AHMLDOL^^0^B47867136
"BLD",9642,"KRN",9.8,"NM",2,0)
AHMLDOL1^^0^B55114152
"BLD",9642,"KRN",9.8,"NM",3,0)
AHMLDOL2^^0^B197039088
"BLD",9642,"KRN",9.8,"NM",4,0)
AHMLDOL3^^0^B52077647
"BLD",9642,"KRN",9.8,"NM",5,0)
AHMLDOL4^^0^B60042725
"BLD",9642,"KRN",9.8,"NM",6,0)
AHMLDOL5^^0^B59431050
"BLD",9642,"KRN",9.8,"NM",7,0)
AHMLDOL6^^0^B109432765
"BLD",9642,"KRN",9.8,"NM",9,0)
AHMLDOR^^0^B12658126
"BLD",9642,"KRN",9.8,"NM",10,0)
AHMLDOR1^^0^B203114033
"BLD",9642,"KRN",9.8,"NM",11,0)
AHMLDOR2^^0^B103855454
"BLD",9642,"KRN",9.8,"NM",12,0)
AHMLDOR3^^0^B194698454
"BLD",9642,"KRN",9.8,"NM",13,0)
AHMLDOLO^^0^B19789690
"BLD",9642,"KRN",9.8,"NM",14,0)
AHMLDOP1^^0^B121333209
"BLD",9642,"KRN",9.8,"NM",15,0)
AHMLDOP2^^0^B175490513
"BLD",9642,"KRN",9.8,"NM",16,0)
AHMLDOST^^0^B829370
"BLD",9642,"KRN",9.8,"NM","B","AHMLDOL",1)

"BLD",9642,"KRN",9.8,"NM","B","AHMLDOL1",2)

"BLD",9642,"KRN",9.8,"NM","B","AHMLDOL2",3)

"BLD",9642,"KRN",9.8,"NM","B","AHMLDOL3",4)

"BLD",9642,"KRN",9.8,"NM","B","AHMLDOL4",5)

"BLD",9642,"KRN",9.8,"NM","B","AHMLDOL5",6)

"BLD",9642,"KRN",9.8,"NM","B","AHMLDOL6",7)

"BLD",9642,"KRN",9.8,"NM","B","AHMLDOLO",13)

"BLD",9642,"KRN",9.8,"NM","B","AHMLDOP1",14)

"BLD",9642,"KRN",9.8,"NM","B","AHMLDOP2",15)

"BLD",9642,"KRN",9.8,"NM","B","AHMLDOR",9)

"BLD",9642,"KRN",9.8,"NM","B","AHMLDOR1",10)

"BLD",9642,"KRN",9.8,"NM","B","AHMLDOR2",11)

"BLD",9642,"KRN",9.8,"NM","B","AHMLDOR3",12)

"BLD",9642,"KRN",9.8,"NM","B","AHMLDOST",16)

"BLD",9642,"KRN",19,0)
19
"BLD",9642,"KRN",19,"NM",0)
^9.68A^^0
"BLD",9642,"KRN",19.1,0)
19.1
"BLD",9642,"KRN",101,0)
101
"BLD",9642,"KRN",101,"NM",0)
^9.68A^31^24
"BLD",9642,"KRN",101,"NM",1,0)
AHMLDOL 565 ORM-O01 EVENT^^0
"BLD",9642,"KRN",101,"NM",2,0)
AHMLDOL 565 ORM-O01 SUBS^^0
"BLD",9642,"KRN",101,"NM",3,0)
AHMLDOL 565 REMOTE ORU-R01 EVENT^^0
"BLD",9642,"KRN",101,"NM",4,0)
AHMLDOL 565 REMOTE ORU-R01 SUBS^^0
"BLD",9642,"KRN",101,"NM",5,0)
AHMLDOL 565 REMOTE ORM-O01 EVENT^^0
"BLD",9642,"KRN",101,"NM",6,0)
AHMLDOL 565 REMOTE ORM-O01 SUBS^^0
"BLD",9642,"KRN",101,"NM",9,0)
AHMLDOL EVSEND CPRS^^0
"BLD",9642,"KRN",101,"NM",10,0)
AHMLDOL EVSEND REMOTE^^0
"BLD",9642,"KRN",101,"NM",11,0)
AHMLDOR 565 ORM-O01 EVENT^^0
"BLD",9642,"KRN",101,"NM",12,0)
AHMLDOR 565 ORM-O01 SUBS^^0
"BLD",9642,"KRN",101,"NM",13,0)
AHMLDOR 565 REMOTE ORM-O01 EVENT^^0
"BLD",9642,"KRN",101,"NM",14,0)
AHMLDOR 565 REMOTE ORM-O01 SUBS^^0
"BLD",9642,"KRN",101,"NM",20,0)
AHMLDOR EVSEND REMOTE^^0
"BLD",9642,"KRN",101,"NM",21,0)
OR EVSEND LRCH^^2
"BLD",9642,"KRN",101,"NM",22,0)
OR EVSEND RA^^2
"BLD",9642,"KRN",101,"NM",23,0)
LR7O CH EVSEND OR^^2
"BLD",9642,"KRN",101,"NM",24,0)
AHMLDOL 699 ORM-O01 EVENT^^0
"BLD",9642,"KRN",101,"NM",25,0)
AHMLDOL 699 ORM-O01 SUBS^^0
"BLD",9642,"KRN",101,"NM",26,0)
AHMLDOL 699 REMOTE ORM-O01 EVENT^^0
"BLD",9642,"KRN",101,"NM",27,0)
AHMLDOL 699 REMOTE ORM-O01 SUBS^^0
"BLD",9642,"KRN",101,"NM",28,0)
AHMLDOR 699 ORM-O01 EVENT^^0
"BLD",9642,"KRN",101,"NM",29,0)
AHMLDOR 699 ORM-O01 SUBS^^0
"BLD",9642,"KRN",101,"NM",30,0)
AHMLDOR 699 REMOTE ORM-O01 EVENT^^0
"BLD",9642,"KRN",101,"NM",31,0)
AHMLDOR 699 REMOTE ORM-O01 SUBS^^0
"BLD",9642,"KRN",101,"NM","B","AHMLDOL 565 ORM-O01 EVENT",1)

"BLD",9642,"KRN",101,"NM","B","AHMLDOL 565 ORM-O01 SUBS",2)

"BLD",9642,"KRN",101,"NM","B","AHMLDOL 565 REMOTE ORM-O01 EVENT",5)

"BLD",9642,"KRN",101,"NM","B","AHMLDOL 565 REMOTE ORM-O01 SUBS",6)

"BLD",9642,"KRN",101,"NM","B","AHMLDOL 565 REMOTE ORU-R01 EVENT",3)

"BLD",9642,"KRN",101,"NM","B","AHMLDOL 565 REMOTE ORU-R01 SUBS",4)

"BLD",9642,"KRN",101,"NM","B","AHMLDOL 699 ORM-O01 EVENT",24)

"BLD",9642,"KRN",101,"NM","B","AHMLDOL 699 ORM-O01 SUBS",25)

"BLD",9642,"KRN",101,"NM","B","AHMLDOL 699 REMOTE ORM-O01 EVENT",26)

"BLD",9642,"KRN",101,"NM","B","AHMLDOL 699 REMOTE ORM-O01 SUBS",27)

"BLD",9642,"KRN",101,"NM","B","AHMLDOL EVSEND CPRS",9)

"BLD",9642,"KRN",101,"NM","B","AHMLDOL EVSEND REMOTE",10)

"BLD",9642,"KRN",101,"NM","B","AHMLDOR 565 ORM-O01 EVENT",11)

"BLD",9642,"KRN",101,"NM","B","AHMLDOR 565 ORM-O01 SUBS",12)

"BLD",9642,"KRN",101,"NM","B","AHMLDOR 565 REMOTE ORM-O01 EVENT",13)

"BLD",9642,"KRN",101,"NM","B","AHMLDOR 565 REMOTE ORM-O01 SUBS",14)

"BLD",9642,"KRN",101,"NM","B","AHMLDOR 699 ORM-O01 EVENT",28)

"BLD",9642,"KRN",101,"NM","B","AHMLDOR 699 ORM-O01 SUBS",29)

"BLD",9642,"KRN",101,"NM","B","AHMLDOR 699 REMOTE ORM-O01 EVENT",30)

"BLD",9642,"KRN",101,"NM","B","AHMLDOR 699 REMOTE ORM-O01 SUBS",31)

"BLD",9642,"KRN",101,"NM","B","AHMLDOR EVSEND REMOTE",20)

"BLD",9642,"KRN",101,"NM","B","LR7O CH EVSEND OR",23)

"BLD",9642,"KRN",101,"NM","B","OR EVSEND LRCH",21)

"BLD",9642,"KRN",101,"NM","B","OR EVSEND RA",22)

"BLD",9642,"KRN",409.61,0)
409.61
"BLD",9642,"KRN",409.61,"NM",0)
^9.68A^^
"BLD",9642,"KRN",771,0)
771
"BLD",9642,"KRN",771,"NM",0)
^9.68A^19^15
"BLD",9642,"KRN",771,"NM",1,0)
AHMLDOL 500 CLIENT^^0
"BLD",9642,"KRN",771,"NM",2,0)
AHMLDOL 565 CLIENT^^0
"BLD",9642,"KRN",771,"NM",4,0)
AHMLDOL HOST 565^^0
"BLD",9642,"KRN",771,"NM",6,0)
AHMLDOL REMOTE 500^^0
"BLD",9642,"KRN",771,"NM",7,0)
AHMLDOL REMOTE 565^^0
"BLD",9642,"KRN",771,"NM",9,0)
AHMLDOL REMOTE SERVER^^0
"BLD",9642,"KRN",771,"NM",10,0)
AHMLDOR 500 CLIENT^^0
"BLD",9642,"KRN",771,"NM",11,0)
AHMLDOR 565 CLIENT^^0
"BLD",9642,"KRN",771,"NM",13,0)
AHMLDOR HOST 500^^0
"BLD",9642,"KRN",771,"NM",14,0)
AHMLDOR HOST 565^^0
"BLD",9642,"KRN",771,"NM",15,0)
AHMLDOL HOST 500^^0
"BLD",9642,"KRN",771,"NM",16,0)
AHMLDOL HOST 699^^0
"BLD",9642,"KRN",771,"NM",17,0)
AHMLDOL 699 CLIENT^^0
"BLD",9642,"KRN",771,"NM",18,0)
AHMLDOR HOST 699^^0
"BLD",9642,"KRN",771,"NM",19,0)
AHMLDOR 699 CLIENT^^0
"BLD",9642,"KRN",771,"NM","B","AHMLDOL 500 CLIENT",1)

"BLD",9642,"KRN",771,"NM","B","AHMLDOL 565 CLIENT",2)

"BLD",9642,"KRN",771,"NM","B","AHMLDOL 699 CLIENT",17)

"BLD",9642,"KRN",771,"NM","B","AHMLDOL HOST 500",15)

"BLD",9642,"KRN",771,"NM","B","AHMLDOL HOST 565",4)

"BLD",9642,"KRN",771,"NM","B","AHMLDOL HOST 699",16)

"BLD",9642,"KRN",771,"NM","B","AHMLDOL REMOTE 500",6)

"BLD",9642,"KRN",771,"NM","B","AHMLDOL REMOTE 565",7)

"BLD",9642,"KRN",771,"NM","B","AHMLDOL REMOTE SERVER",9)

"BLD",9642,"KRN",771,"NM","B","AHMLDOR 500 CLIENT",10)

"BLD",9642,"KRN",771,"NM","B","AHMLDOR 565 CLIENT",11)

"BLD",9642,"KRN",771,"NM","B","AHMLDOR 699 CLIENT",19)

"BLD",9642,"KRN",771,"NM","B","AHMLDOR HOST 500",13)

"BLD",9642,"KRN",771,"NM","B","AHMLDOR HOST 565",14)

"BLD",9642,"KRN",771,"NM","B","AHMLDOR HOST 699",18)

"BLD",9642,"KRN",779.2,0)
779.2
"BLD",9642,"KRN",779.2,"NM",0)
^9.68A^^
"BLD",9642,"KRN",870,0)
870
"BLD",9642,"KRN",870,"NM",0)
^9.68A^5^4
"BLD",9642,"KRN",870,"NM",1,0)
AHMLDO1^^0
"BLD",9642,"KRN",870,"NM",2,0)
AHMLDO2^^0
"BLD",9642,"KRN",870,"NM",4,0)
AHMLDOH^^0
"BLD",9642,"KRN",870,"NM",5,0)
AHMLDO3^^0
"BLD",9642,"KRN",870,"NM","B","AHMLDO1",1)

"BLD",9642,"KRN",870,"NM","B","AHMLDO2",2)

"BLD",9642,"KRN",870,"NM","B","AHMLDO3",5)

"BLD",9642,"KRN",870,"NM","B","AHMLDOH",4)

"BLD",9642,"KRN",8989.51,0)
8989.51
"BLD",9642,"KRN",8989.51,"NM",0)
^9.68A^^
"BLD",9642,"KRN",8989.52,0)
8989.52
"BLD",9642,"KRN",8989.52,"NM",0)
^9.68A^^
"BLD",9642,"KRN",8994,0)
8994
"BLD",9642,"KRN",8994,"NM",0)
^9.68A^1^1
"BLD",9642,"KRN",8994,"NM",1,0)
AHMLDO GTDOM^^0
"BLD",9642,"KRN",8994,"NM","B","AHMLDO GTDOM",1)

"BLD",9642,"KRN","B",.4,.4)

"BLD",9642,"KRN","B",.401,.401)

"BLD",9642,"KRN","B",.402,.402)

"BLD",9642,"KRN","B",.403,.403)

"BLD",9642,"KRN","B",.5,.5)

"BLD",9642,"KRN","B",.84,.84)

"BLD",9642,"KRN","B",3.6,3.6)

"BLD",9642,"KRN","B",3.8,3.8)

"BLD",9642,"KRN","B",9.2,9.2)

"BLD",9642,"KRN","B",9.8,9.8)

"BLD",9642,"KRN","B",19,19)

"BLD",9642,"KRN","B",19.1,19.1)

"BLD",9642,"KRN","B",101,101)

"BLD",9642,"KRN","B",409.61,409.61)

"BLD",9642,"KRN","B",771,771)

"BLD",9642,"KRN","B",779.2,779.2)

"BLD",9642,"KRN","B",870,870)

"BLD",9642,"KRN","B",8989.51,8989.51)

"BLD",9642,"KRN","B",8989.52,8989.52)

"BLD",9642,"KRN","B",8994,8994)

"BLD",9642,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9642,"QUES",0)
^9.62^^
"BLD",9642,"REQB",0)
^9.611^^
"KRN",3.8,439,-1)
0^1
"KRN",3.8,439,0)
AHMLDO^PU^^^^^
"KRN",3.8,439,3)

"KRN",101,3336,-1)
2^23
"KRN",101,3336,0)
LR7O CH EVSEND OR^LAB => OE/RR ORDER MESSAGE EVENT^^X^1^^^^^^^
"KRN",101,3336,10,0)
^101.01PA^6^6
"KRN",101,3336,10,5,0)
6181^^^
"KRN",101,3336,10,5,"^")
AHMLDOL EVSEND CPRS
"KRN",101,3529,-1)
2^22
"KRN",101,3529,0)
OR EVSEND RA^OE/RR => RAD/NM MESSAGE EVENT^^X^1^^^^^^^
"KRN",101,3529,10,0)
^101.01PA^5^5
"KRN",101,3529,10,4,0)
6199^^^
"KRN",101,3529,10,4,"^")
AHMLDOR EVSEND REMOTE
"KRN",101,3530,-1)
2^21
"KRN",101,3530,0)
OR EVSEND LRCH^OE/RR => LAB MESSAGE EVENT^^X^1^^^^^^^
"KRN",101,3530,10,0)
^101.01PA^5^5
"KRN",101,3530,10,4,0)
6177^^^
"KRN",101,3530,10,4,"^")
AHMLDOL EVSEND REMOTE
"KRN",101,6177,-1)
0^10
"KRN",101,6177,0)
AHMLDOL EVSEND REMOTE^REMOTE ORDERING PROTOCOL^^A^^^^^^^^
"KRN",101,6177,15)
K HLA("HLS")
"KRN",101,6177,20)
I $G(REMOTE)'=1,$D(XQORMSG) D EN^AHMLDOLO(.XQORMSG)
"KRN",101,6177,99)
64236,62030
"KRN",101,6181,-1)
0^9
"KRN",101,6181,0)
AHMLDOL EVSEND CPRS^VISTA TO CPRS^^A^^^^^^^^
"KRN",101,6181,15)
K HLA("HLS")
"KRN",101,6181,20)
I $G(REMOTE)'=1,$D(XQORMSG) D EN^AHMLDOLO("",.XQORMSG)
"KRN",101,6181,99)
64236,62030
"KRN",101,6181,770)
^^^^^^^^^2.4^
"KRN",101,6187,-1)
0^1
"KRN",101,6187,0)
AHMLDOL 565 ORM-O01 EVENT^REMOTE SENDING PROTOCOL^^E^^^^^^^^
"KRN",101,6187,99)
64236,62030
"KRN",101,6187,770)
AHMLDOL HOST 500^^ORM^O01^^^^NE^NE^2.4^
"KRN",101,6187,773)
1^1^0
"KRN",101,6187,775,0)
^101.0775PA^1^1
"KRN",101,6187,775,1,0)
6188
"KRN",101,6187,775,1,"^")
AHMLDOL 565 ORM-O01 SUBS
"KRN",101,6188,-1)
0^2
"KRN",101,6188,0)
AHMLDOL 565 ORM-O01 SUBS^REMOTE SUBSCRIBER^^S^^^^^^^^
"KRN",101,6188,99)
64236,62030
"KRN",101,6188,770)
^AHMLDOL 565 CLIENT^^^^^AHMLDO1^NE^NE^2.4^
"KRN",101,6188,773)
1^1^0
"KRN",101,6193,-1)
0^5
"KRN",101,6193,0)
AHMLDOL 565 REMOTE ORM-O01 EVENT^Incoming messages from remote order spoke^^E^^^^^^^^
"KRN",101,6193,99)
64236,62030
"KRN",101,6193,770)
AHMLDOL HOST 565^^ORM^O01^49^^^AL^AL^2.4^
"KRN",101,6193,775,0)
^101.0775PA^1^1
"KRN",101,6193,775,1,0)
6194
"KRN",101,6193,775,1,"^")
AHMLDOL 565 REMOTE ORM-O01 SUBS
"KRN",101,6194,-1)
0^6
"KRN",101,6194,0)
AHMLDOL 565 REMOTE ORM-O01 SUBS^Incoming mesages from the remote spoke^^S^^^^^^^^
"KRN",101,6194,99)
64236,62030
"KRN",101,6194,770)
^AHMLDOL 500 CLIENT^^O01^^^^AL^AL^2.4^
"KRN",101,6194,771)
D EN^AHMLDOL
"KRN",101,6194,773)
0^0^0
"KRN",101,6199,-1)
0^20
"KRN",101,6199,0)
AHMLDOR EVSEND REMOTE^RAD OERR => VISTA^^A^^^^^^^^
"KRN",101,6199,15)
K HLA("HLS")
"KRN",101,6199,20)
I $G(REMOTE)'=1,$D(XQORMSG) D EN^AHMLDOLO(.XQORMSG)
"KRN",101,6199,99)
64236,62030
"KRN",101,6200,-1)
0^11
"KRN",101,6200,0)
AHMLDOR 565 ORM-O01 EVENT^REMOTE RAD SEND PROTOCOL^^E^^^^^^^^
"KRN",101,6200,99)
64236,62030
"KRN",101,6200,770)
AHMLDOR HOST 500^^ORM^O01^^^^NE^NE^2.4^
"KRN",101,6200,773)
1^1^0
"KRN",101,6200,775,0)
^101.0775PA^1^1
"KRN",101,6200,775,1,0)
6201
"KRN",101,6200,775,1,"^")
AHMLDOR 565 ORM-O01 SUBS
"KRN",101,6201,-1)
0^12
"KRN",101,6201,0)
AHMLDOR 565 ORM-O01 SUBS^RAD REMOTE SUBSCRIBER^^S^^^^^^^^
"KRN",101,6201,99)
64236,62030
"KRN",101,6201,770)
^AHMLDOR 565 CLIENT^^^^^AHMLDO1^NE^NE^2.4^
"KRN",101,6201,773)
1^1^0
"KRN",101,6206,-1)
0^13
"KRN",101,6206,0)
AHMLDOR 565 REMOTE ORM-O01 EVENT^RAD SPOKE1 TO HUB^^E^^^^^^^^
"KRN",101,6206,99)
64236,62030
"KRN",101,6206,770)
AHMLDOR HOST 565^^ORM^O01^49^^^NE^NE^2.4^
"KRN",101,6206,773)
0^0^0
"KRN",101,6206,775,0)
^101.0775PA^1^1
"KRN",101,6206,775,1,0)
6207
"KRN",101,6206,775,1,"^")
AHMLDOR 565 REMOTE ORM-O01 SUBS
"KRN",101,6207,-1)
0^14
"KRN",101,6207,0)
AHMLDOR 565 REMOTE ORM-O01 SUBS^RAD SPOKE1 TO HUB^^S^^^^^^^^
"KRN",101,6207,99)
64236,62030
"KRN",101,6207,770)
^AHMLDOR 500 CLIENT^^O01^^^^NE^NE^2.4^ACK
"KRN",101,6207,771)
D EN^AHMLDOR
"KRN",101,6207,773)
0^0^0
"KRN",101,6208,-1)
0^4
"KRN",101,6208,0)
AHMLDOL 565 REMOTE ORU-R01 SUBS^INCOMING LAB RESULTS^^S^^^^^^^^
"KRN",101,6208,99)
64065,35021
"KRN",101,6208,770)
^AHMLDOL 500 CLIENT^^R01^^^^NE^NE^2.4^
"KRN",101,6208,771)
D EN^LRHBIN
"KRN",101,6208,773)
0^0^0
"KRN",101,6209,-1)
0^3
"KRN",101,6209,0)
AHMLDOL 565 REMOTE ORU-R01 EVENT^INCOMING LAB RESULTS^^E^^^^^^^^
"KRN",101,6209,99)
64065,35152
"KRN",101,6209,770)
AHMLDOL HOST 565^^ORU^R01^53^^^NE^NE^^
"KRN",101,6209,775,0)
^101.0775PA^1^1
"KRN",101,6209,775,1,0)
6208
"KRN",101,6209,775,1,"^")
AHMLDOL 565 REMOTE ORU-R01 SUBS
"KRN",101,6267,-1)
0^24
"KRN",101,6267,0)
AHMLDOL 699 ORM-O01 EVENT^REMOTE SENDING PROTOCOL^^E^^^^^^^^
"KRN",101,6267,99)
64337,29091
"KRN",101,6267,770)
AHMLDOL HOST 500^^ORM^O01^^^^NE^NE^2.4^
"KRN",101,6267,773)
1^1^0
"KRN",101,6267,775,0)
^101.0775PA^1^1
"KRN",101,6267,775,1,0)
6271
"KRN",101,6267,775,1,"^")
AHMLDOL 699 ORM-O01 SUBS
"KRN",101,6268,-1)
0^26
"KRN",101,6268,0)
AHMLDOL 699 REMOTE ORM-O01 EVENT^INCOMING MESSAGES^^E^^^^^^^^
"KRN",101,6268,99)
64337,29161
"KRN",101,6268,770)
AHMLDOL HOST 699^^ORM^O01^^^^NE^NE^2.4^
"KRN",101,6268,775,0)
^101.0775PA^1^1
"KRN",101,6268,775,1,0)
6272
"KRN",101,6268,775,1,"^")
AHMLDOL 699 REMOTE ORM-O01 SUBS
"KRN",101,6269,-1)
0^28
"KRN",101,6269,0)
AHMLDOR 699 ORM-O01 EVENT^REMOTE RAD SEND^^E^^^^^^^^
"KRN",101,6269,99)
64337,29302
"KRN",101,6269,770)
AHMLDOR HOST 500^^ORM^O01^^^^NE^NE^2.4^
"KRN",101,6269,773)
1^1^0
"KRN",101,6269,775,0)
^101.0775PA^1^1
"KRN",101,6269,775,1,0)
6273
"KRN",101,6269,775,1,"^")
AHMLDOR 699 ORM-O01 SUBS
"KRN",101,6270,-1)
0^30
"KRN",101,6270,0)
AHMLDOR 699 REMOTE ORM-O01 EVENT^INCOMING RAD MESSAGES^^E^^^^^^^^
"KRN",101,6270,99)
64337,29350
"KRN",101,6270,770)
AHMLDOR HOST 699^^ORM^O01^^^^NE^NE^2.4^
"KRN",101,6270,775,0)
^101.0775PA^1^1
"KRN",101,6270,775,1,0)
6274
"KRN",101,6270,775,1,"^")
AHMLDOR 699 REMOTE ORM-O01 SUBS
"KRN",101,6271,-1)
0^25
"KRN",101,6271,0)
AHMLDOL 699 ORM-O01 SUBS^OUTGOING LAB^^S^^^^^^^^
"KRN",101,6271,99)
64337,29653
"KRN",101,6271,770)
^AHMLDOL 699 CLIENT^^^^^^NE^NE^2.4^
"KRN",101,6271,773)
1^1^0
"KRN",101,6272,-1)
0^27
"KRN",101,6272,0)
AHMLDOL 699 REMOTE ORM-O01 SUBS^INCOMING LAB MESSAGES^^S^^^^^^^^
"KRN",101,6272,99)
64337,29721
"KRN",101,6272,770)
^AHMLDOL 500 CLIENT^^^^^^AL^NE^2.4^
"KRN",101,6272,771)
D EN^AHMLDOL
"KRN",101,6273,-1)
0^29
"KRN",101,6273,0)
AHMLDOR 699 ORM-O01 SUBS^RAD OUT^^S^^^^^^^^
"KRN",101,6273,99)
64337,29807
"KRN",101,6273,770)
^AHMLDOR 699 CLIENT^^^^^^NE^NE^2.4^
"KRN",101,6273,773)
1^1^0
"KRN",101,6274,-1)
0^31
"KRN",101,6274,0)
AHMLDOR 699 REMOTE ORM-O01 SUBS^RAD INCOMING^^S^^^^^^^^
"KRN",101,6274,99)
64337,29870
"KRN",101,6274,770)
^AHMLDOR 500 CLIENT^^^^^^NE^NE^2.4^
"KRN",101,6274,771)
D EN^AHMLDOR
"KRN",771,36,-1)
0^15
"KRN",771,36,0)
AHMLDOL HOST 500^a^500^^^^USA
"KRN",771,36,"EC")
^~\&
"KRN",771,36,"FS")
|
"KRN",771,249,-1)
0^4
"KRN",771,249,0)
AHMLDOL HOST 565^a^565^^^^USA
"KRN",771,249,"EC")
^~\&
"KRN",771,249,"FS")
|
"KRN",771,250,-1)
0^6
"KRN",771,250,0)
AHMLDOL REMOTE 500^a
"KRN",771,250,"EC")
~^\&
"KRN",771,250,"FS")
|
"KRN",771,251,-1)
0^7
"KRN",771,251,0)
AHMLDOL REMOTE 565^a
"KRN",771,251,"EC")
~^\&
"KRN",771,251,"FS")
|
"KRN",771,254,-1)
0^9
"KRN",771,254,0)
AHMLDOL REMOTE SERVER^a^^^^^USA
"KRN",771,254,"EC")
^~\&
"KRN",771,254,"FS")
|
"KRN",771,256,-1)
0^2
"KRN",771,256,0)
AHMLDOL 565 CLIENT^a^565^^^^USA
"KRN",771,256,"EC")
^~\&
"KRN",771,256,"FS")
|
"KRN",771,258,-1)
0^1
"KRN",771,258,0)
AHMLDOL 500 CLIENT^a^500^^^^USA
"KRN",771,258,"EC")
^~\&
"KRN",771,258,"FS")
|
"KRN",771,259,-1)
0^13
"KRN",771,259,0)
AHMLDOR HOST 500^a^500^^^^USA
"KRN",771,259,"EC")
^~\&
"KRN",771,259,"FS")
|
"KRN",771,260,-1)
0^11
"KRN",771,260,0)
AHMLDOR 565 CLIENT^a^565^^^^USA
"KRN",771,260,"EC")
^~\&
"KRN",771,260,"FS")
|
"KRN",771,262,-1)
0^10
"KRN",771,262,0)
AHMLDOR 500 CLIENT^a^500^^^^USA
"KRN",771,262,"EC")
^~\&
"KRN",771,262,"FS")
|
"KRN",771,264,-1)
0^14
"KRN",771,264,0)
AHMLDOR HOST 565^a^565^^^^USA
"KRN",771,264,"EC")
^~\&
"KRN",771,264,"FS")
|
"KRN",771,268,-1)
0^16
"KRN",771,268,0)
AHMLDOL HOST 699^a^699^^^^USA
"KRN",771,268,"EC")
^~\&
"KRN",771,268,"FS")
|
"KRN",771,269,-1)
0^18
"KRN",771,269,0)
AHMLDOR HOST 699^a^699^^^^USA
"KRN",771,269,"EC")
^~\&
"KRN",771,269,"FS")
|
"KRN",771,270,-1)
0^17
"KRN",771,270,0)
AHMLDOL 699 CLIENT^a^699^^^^USA
"KRN",771,270,"EC")
^~\&
"KRN",771,270,"FS")
|
"KRN",771,271,-1)
0^19
"KRN",771,271,0)
AHMLDOR 699 CLIENT^a^699^^^^USA
"KRN",771,271,"EC")
^~\&
"KRN",771,271,"FS")
|
"KRN",870,148,-1)
0^1
"KRN",870,148,0)
AHMLDO1^^TCP^^^^^^^^^^^^^^^^^^10
"KRN",870,148,200)
^^^^^11^28
"KRN",870,148,400)
54.236.141.114^5026^C^N^^^^^
"KRN",870,149,-1)
0^2
"KRN",870,149,0)
AHMLDO2^^TCP^^^^^^^^^^^^^^^^^^10
"KRN",870,149,200)
^^^^^11^28
"KRN",870,149,400)
^5026^C^N^^^^^
"KRN",870,150,-1)
0^4
"KRN",870,150,0)
AHMLDOH^^TCP^^^^^^^^^^^^^^^^^^10
"KRN",870,150,200)
^5^245^40^120^^^^^I
"KRN",870,150,400)
54.196.197.70^5026^S^Y^^^^5027^
"KRN",870,153,-1)
0^5
"KRN",870,153,0)
AHMLDO3^^TCP^^^^^^^^^^^^^^^^^^10
"KRN",870,153,200)
^^^^^11^28
"KRN",870,153,400)
^5026^C^N^^^^^
"KRN",8994,3546,-1)
0^1
"KRN",8994,3546,0)
AHMLDO GTDOM^GTDOM^AHMLDOL^2^^0^^1^1^^1
"KRN",8994,3546,2,0)
^8994.02A^^0
"KRN",8994,3546,3,0)
^8994.03^1^1^3160224^^^^
"KRN",8994,3546,3,1,0)
AN ARRAY WILL BE PASSED BACK TO THE CALLING APPLICATION.
"MBREQ")
0
"ORD",11,3.8)
3.8;11;;;MAILG^XPDTA1;MAILGF1^XPDIA1;MAILGE1^XPDIA1;MAILGF2^XPDIA1;;MAILGDEL^XPDIA1(%)
"ORD",11,3.8,0)
MAIL GROUP
"ORD",13,870)
870;13;1;;HLLL^XPDTA1;;HLLLE^XPDIA1;;;HLLLDEL^XPDIA1(%)
"ORD",13,870,0)
HL LOGICAL LINK
"ORD",14,771)
771;14;;;HLAP^XPDTA1;HLAPF1^XPDIA1;HLAPE1^XPDIA1;HLAPF2^XPDIA1;;HLAPDEL^XPDIA1(%)
"ORD",14,771,0)
HL7 APPLICATION PARAMETER
"ORD",15,101)
101;15;;;PRO^XPDTA;PROF1^XPDIA;PROE1^XPDIA;PROF2^XPDIA;;PRODEL^XPDIA
"ORD",15,101,0)
PROTOCOL
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"PKG",576,-1)
1^1
"PKG",576,0)
MOBILE SCHEDULING APPLICATIONS^MBAA^MOBILE SCHEDULING APPLICATIONS SUITE
"PKG",576,22,0)
^9.49I^1^1
"PKG",576,22,1,0)
1.0^3161115^3161114^10000000232
"PKG",576,22,1,"PAH",1,0)
1^3170306
"PKG",576,22,1,"PAH",1,1,0)
^^1^1^3170306
"PKG",576,22,1,"PAH",1,1,1,0)
Remote ordering Hub
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
15
"RTN","AHMLDOL")
0^1^B47867136
"RTN","AHMLDOL",1,0)
AHMLDOL ;LEIDOS/TCK - REMOTE ORDER - INCOMING ; 2/23/17 9:06am
"RTN","AHMLDOL",2,0)
 ;;1.0;REMOTE ORDERS;**1**;OCT 1,2016;Build 53
"RTN","AHMLDOL",3,0)
 ; Reference to UNESC^ORHLESC supported by IA #4922
"RTN","AHMLDOL",4,0)
 ;
"RTN","AHMLDOL",5,0)
 Q
"RTN","AHMLDOL",6,0)
 ;
"RTN","AHMLDOL",7,0)
EN ;
"RTN","AHMLDOL",8,0)
 ; Entry point for INCOMING ORDERS FROM A HOST FACILITY
"RTN","AHMLDOL",9,0)
 N ACT,AHFDA,AHIENS,AHOUT,D1,D2,D3,D4,D5,II,STATUS,HL,HLA,HLP
"RTN","AHMLDOL",10,0)
 N CT,DOM,DR,DUZNAME,ES,FDA,FILE,INVDT,LIEN,LRCCOM,LRDATA,HLARY
"RTN","AHMLDOL",11,0)
 N LRDIE,LRDPF,LRNATURE,LRNOW,LRORD,LRTNM,LRTSTS,NDE,ORDNUM
"RTN","AHMLDOL",12,0)
 N ORIEN,ORWREC,PFMBY,PNM,PROC,PTYPE,RADFN,RAEID,RAIEN,RAOIFN
"RTN","AHMLDOL",13,0)
 N RAOREA,RAOSTS,REASIEN,REMOTE,REQSTATUS,TEST,TEXT,DUZNME,RESULT
"RTN","AHMLDOL",14,0)
 K ^TMP($J)
"RTN","AHMLDOL",15,0)
 S (D1,D2,D3,D4,D5,TYPE)="",CT=0  ;Initialize variables
"RTN","AHMLDOL",16,0)
 I $G(HLMTIEN)'>0 S AHOUT(1)="0^No Results Array Received" Q
"RTN","AHMLDOL",17,0)
 S HLMA="",HLMA=$O(^HLMA("B",HLMTIEN,HLMA))
"RTN","AHMLDOL",18,0)
 Q:$G(HLMA)'>0
"RTN","AHMLDOL",19,0)
 Q:'$D(^HLMA(HLMA,0))
"RTN","AHMLDOL",20,0)
 Q:'$D(^HLMA(HLMA,"MSH"))
"RTN","AHMLDOL",21,0)
 I $P(^HLMA(HLMA,"MSH",1,0),"|",3)["AHMLDOL" S TYPE="LAB"
"RTN","AHMLDOL",22,0)
 I $P(^HLMA(HLMA,"MSH",1,0),"|",3)["AHMLDOR" S TYPE="RAD"
"RTN","AHMLDOL",23,0)
 S LOC=+$P(^HLMA(HLMA,"MSH",1,0),"|",4)
"RTN","AHMLDOL",24,0)
 M ^TMP($J,"AHMLDO",1)=^HLMA(HLMA,"MSH",1,0)
"RTN","AHMLDOL",25,0)
 S II=0 F  S II=$O(^HL(772,HLMTIEN,"IN",II)) Q:II=""  D
"RTN","AHMLDOL",26,0)
 .S CT=$G(II)+1
"RTN","AHMLDOL",27,0)
 .S ^TMP($J,"AHMLDO",CT)=^HL(772,HLMTIEN,"IN",II,0)
"RTN","AHMLDOL",28,0)
 M REC=^TMP($J,"AHMLDO")
"RTN","AHMLDOL",29,0)
 Q:'$D(REC)
"RTN","AHMLDOL",30,0)
 D EN^AHMLDOL1(.REC,TYPE,LOC,HLMA,HLMTIEN)
"RTN","AHMLDOL",31,0)
 D END
"RTN","AHMLDOL",32,0)
 Q
"RTN","AHMLDOL",33,0)
 ;
"RTN","AHMLDOL",34,0)
TEST(AHOUT,HLMTIEN) ;
"RTN","AHMLDOL",35,0)
 D EN
"RTN","AHMLDOL",36,0)
 Q
"RTN","AHMLDOL",37,0)
 ;
"RTN","AHMLDOL",38,0)
ACK(HLMA,CODE,ERR,TYPE) ;This sub-routine will handle the Application Errors
"RTN","AHMLDOL",39,0)
 ;                   (AE) or Rejects (AR) or Accepts (AA) back to the
"RTN","AHMLDOL",40,0)
 ;                   Hub (Ordering Lab).
"RTN","AHMLDOL",41,0)
 ;
"RTN","AHMLDOL",42,0)
 ;    Input:    HLMA - ^HLMA IEN                        [required]
"RTN","AHMLDOL",43,0)
 ;           HLMTIEN - ^HL(772 IEN                      [required]
"RTN","AHMLDOL",44,0)
 ;              CODE - AA=Accept, AE=Error, AR=Reject   [optional]
"RTN","AHMLDOL",45,0)
 ;               ERR - Error Text to be returned.       [optional]
"RTN","AHMLDOL",46,0)
 ;
"RTN","AHMLDOL",47,0)
 ;   Output: None.
"RTN","AHMLDOL",48,0)
 ;
"RTN","AHMLDOL",49,0)
 N HLEID,HLEIDS,MSA1,PROT,SLOC
"RTN","AHMLDOL",50,0)
 ;
"RTN","AHMLDOL",51,0)
 S MSA1=$G(CODE) S:$G(ERR)="" MSA1="AA"
"RTN","AHMLDOL",52,0)
 I $D(^XTMP("AHMLD")) S SLOC=+^XTMP("AHMLD",1)
"RTN","AHMLDOL",53,0)
 Q:$G(SLOC)'>0
"RTN","AHMLDOL",54,0)
 I '$D(^HLMA(HLMA)),$D(REC),$G(SLOC)>0 D
"RTN","AHMLDOL",55,0)
 .S HL("MID")=$E(HLMA,4,99)
"RTN","AHMLDOL",56,0)
 .S MSA1=$G(CODE) S:$G(ERR)="" MSA1="AA"     ; acknowledgement code
"RTN","AHMLDOL",57,0)
 .I $G(TYPE)="LAB" S PROT="AHMLDOL "_SLOC_" ORM-O01 EVENT"  ; event protocol
"RTN","AHMLDOL",58,0)
 .I $G(TYPE)="RAD" S PROT="AHMLDOR "_SLOC_" ORM-O01 EVENT"  ;event protocol
"RTN","AHMLDOL",59,0)
 .S HLEID=$O(^ORD(101,"B",PROT,0))           ; event protocol IEN
"RTN","AHMLDOL",60,0)
 .S HLA("HLS",1)="MSA|"_MSA1_"|"_HL("MID")_$S($G(ERR)]"":"|"_ERR,1:"")
"RTN","AHMLDOL",61,0)
 .D GENERATE^HLMA(HLEID,"LM",1,.RESULT,"",.HLP)
"RTN","AHMLDOL",62,0)
 I $D(^HLMA(HLMA)) D
"RTN","AHMLDOL",63,0)
 .S SLOC=+$P(^HLMA(HLMA,"MSH",1,0),"|",4)    ;sending facility id
"RTN","AHMLDOL",64,0)
 .I $G(TYPE)="LAB" S PROT="AHMLDOL "_SLOC_" ORM-O01 EVENT"  ; event protocol
"RTN","AHMLDOL",65,0)
 .I $G(TYPE)="RAD" S PROT="AHMLDOR "_SLOC_" ORM-O01 EVENT"  ;event protocol
"RTN","AHMLDOL",66,0)
 .S HLEID=$O(^ORD(101,"B",PROT,0))           ; event protocol IEN
"RTN","AHMLDOL",67,0)
 .I $G(HLMA)>1 S HL("MID")=HLMA         ; Message Control ID
"RTN","AHMLDOL",68,0)
 .I $G(HLMA)>1 S HLEIDS=$P(^HLMA(HLMA,0),U,8)             ; Subscriber Protocol
"RTN","AHMLDOL",69,0)
 .S HLA("HLS",1)="MSA|"_MSA1_"|"_HL("MID")_$S($G(ERR)]"":"|"_ERR,1:"")
"RTN","AHMLDOL",70,0)
 .D GENERATE^HLMA(HLEID,"LM",1,.RESULT,"",.HLP)
"RTN","AHMLDOL",71,0)
 ;
"RTN","AHMLDOL",72,0)
 Q
"RTN","AHMLDOL",73,0)
 ;--------------------------------------------------------------------
"RTN","AHMLDOL",74,0)
GTDOM(RET) ;
"RTN","AHMLDOL",75,0)
 N NME,INST,CNT
"RTN","AHMLDOL",76,0)
 S NME="AHMLD"
"RTN","AHMLDOL",77,0)
 S (DOM,INST,RET)="",CNT=0
"RTN","AHMLDOL",78,0)
 Q:'$D(^XTMP(NME))
"RTN","AHMLDOL",79,0)
 F  S CNT=$O(^XTMP(NME,CNT)) Q:CNT=""  D
"RTN","AHMLDOL",80,0)
 .S INST=$G(^XTMP(NME,CNT))
"RTN","AHMLDOL",81,0)
 .S RET(CNT)=INST
"RTN","AHMLDOL",82,0)
 Q
"RTN","AHMLDOL",83,0)
 ;
"RTN","AHMLDOL",84,0)
DC(REC,ORID,ORVP,ORNP,ORL,REAS,DCORIG,ISNEWORD) ;
"RTN","AHMLDOL",85,0)
 N REQ,LIEN
"RTN","AHMLDOL",86,0)
 D PROXY^AHMLDOR2(.DUZ,.DUZNME)
"RTN","AHMLDOL",87,0)
 S ORNP=DUZ,REQ=""
"RTN","AHMLDOL",88,0)
 S REMOTE=1
"RTN","AHMLDOL",89,0)
 N FLG,FLAG,LRSEND,LRODT,LRSN,LRSEND,ORN,LRIEN,LRFILE,LRAA,LRAN,LRAD
"RTN","AHMLDOL",90,0)
 S (FLG,FLAG)=0,(LRAA,LRAN,LRAD)=""
"RTN","AHMLDOL",91,0)
 S (DCORIG,ISNEWORD)=0
"RTN","AHMLDOL",92,0)
 S ORDNUM=+ORID
"RTN","AHMLDOL",93,0)
 S FILE=100,ORIEN=ORDNUM_","
"RTN","AHMLDOL",94,0)
 I $$GET1^DIQ(FILE,ORIEN,31,"I") D  Q:FLG
"RTN","AHMLDOL",95,0)
 .I $$GET1^DIQ(FILE,ORIEN,5,"I")=1 S NDE=$O(^OR(100,ORDNUM,8,9999),-1),REC(1)=ORDNUM_";"_NDE_"^RS" S FLG=1 Q
"RTN","AHMLDOL",96,0)
 Q:FLG
"RTN","AHMLDOL",97,0)
 S STATUS=$$GET1^DIQ(100,ORDNUM_",",5,"I")
"RTN","AHMLDOL",98,0)
 S PTYPE=$$GET1^DIQ(100,ORDNUM_",",12),PTYPE=$E(PTYPE,1,3)
"RTN","AHMLDOL",99,0)
 I PTYPE'["RAD" D
"RTN","AHMLDOL",100,0)
 .I STATUS=2 D  Q
"RTN","AHMLDOL",101,0)
 ..S REC(1)="Warning: Not cancelled. Lab order is already completed."
"RTN","AHMLDOL",102,0)
 .I $G(ACT)="DC" D
"RTN","AHMLDOL",103,0)
 ..I $G(REAS)'="" S REASIEN="",REASIEN=$O(^ORD(100.03,"B",REAS,REASIEN))
"RTN","AHMLDOL",104,0)
 ..I $G(REASIEN)>0 S REAS=REASIEN
"RTN","AHMLDOL",105,0)
 .S LRFILE=100,LRIEN=ORDNUM_","
"RTN","AHMLDOL",106,0)
 .S LRDATA=$$GET1^DIQ(LRFILE,LRIEN,33,"I") I LRDATA="" Q
"RTN","AHMLDOL",107,0)
 .S LRORD=$P(LRDATA,";"),LRODT=$P(LRDATA,";",2),LRSND=$P(LRDATA,";",3)
"RTN","AHMLDOL",108,0)
 .Q:$G(LRORD)=""
"RTN","AHMLDOL",109,0)
 .Q:$G(LRODT)=""
"RTN","AHMLDOL",110,0)
 .Q:$G(LRSND)=""
"RTN","AHMLDOL",111,0)
 .I '$D(^LRO(69,LRODT,1,LRSND)) Q
"RTN","AHMLDOL",112,0)
 .I '$D(^LRO(69,LRODT,1,LRSND,2)) Q
"RTN","AHMLDOL",113,0)
 .S LRSEND=0 F  S LRSEND=$O(^LRO(69,LRODT,1,LRSND,2,LRSEND)) Q:LRSEND'?.N  D
"RTN","AHMLDOL",114,0)
 ..S LIEN=LRSEND_","_LRSND_","_LRODT_","
"RTN","AHMLDOL",115,0)
 ..S ORN=$$GET1^DIQ(69.03,LIEN,6,"I")
"RTN","AHMLDOL",116,0)
 ..I ORN=ORDNUM D
"RTN","AHMLDOL",117,0)
 ...S LRSN=LRSND,LRI=LRSEND,ORIFN=ORN
"RTN","AHMLDOL",118,0)
 ...S LRTEST=$$GET1^DIQ(69.03,LIEN,.01,"I")
"RTN","AHMLDOL",119,0)
 ...S LRSS=$$GET1^DIQ(60,LRTEST,4,"I")
"RTN","AHMLDOL",120,0)
 ...S LIEN=LRSN_","_LRODT_","
"RTN","AHMLDOL",121,0)
 ...S LRDFN=$$GET1^DIQ(69.01,LIEN,.01,"I")
"RTN","AHMLDOL",122,0)
 ...S PNM=$$GET1^DIQ(2,ORVP,.01,"I"),LRDPF=2
"RTN","AHMLDOL",123,0)
 ...S LIEN=LRSEND_","_LRSND_","_LRODT_","
"RTN","AHMLDOL",124,0)
 ...S LRAD=$$GET1^DIQ(69,LIEN,2,"I")
"RTN","AHMLDOL",125,0)
 ...S LRAA=$$GET1^DIQ(69,LIEN,3,"I")
"RTN","AHMLDOL",126,0)
 ...S LRAN=$$GET1^DIQ(69,LIEN,4,"I")
"RTN","AHMLDOL",127,0)
 .I ACT="OC" S FLAG=1
"RTN","AHMLDOL",128,0)
 .I LRAA'="",LRAD'="",LRAN'="" S FLAG=1
"RTN","AHMLDOL",129,0)
 I PTYPE["RAD" D
"RTN","AHMLDOL",130,0)
 .I STATUS=2 D  Q
"RTN","AHMLDOL",131,0)
 ..S REC(1)="Warning: Not cancelled. Rad order is already completed."
"RTN","AHMLDOL",132,0)
 .I $G(ACT)="DC" D
"RTN","AHMLDOL",133,0)
 ..I $G(REAS)'="" S REASIEN="",REASIEN=$O(^ORD(100.03,"B",REAS,REASIEN))
"RTN","AHMLDOL",134,0)
 ..I $G(REASIEN)>0 S REAS=REASIEN
"RTN","AHMLDOL",135,0)
 .I STATUS'=5 D  Q
"RTN","AHMLDOL",136,0)
 ..K RADFDA,ERRMSG,RAONUM,EXMSTA,NOW
"RTN","AHMLDOL",137,0)
 ..N RADTI,RACNI
"RTN","AHMLDOL",138,0)
 ..S FILE=100,RAIEN=ORDNUM_","
"RTN","AHMLDOL",139,0)
 ..S RAOIFN=$$GET1^DIQ(FILE,RAIEN,33,"I") I RAOIFN="" D
"RTN","AHMLDOL",140,0)
 ...S AHOUT(1)="-1^Error: Case number does not exist in the order file." Q
"RTN","AHMLDOL",141,0)
 ..S RAOSTS=1,RAOREA=25,RADFN=ORVP
"RTN","AHMLDOL",142,0)
 ..S RADTI=$O(^RADPT("AO",RAOIFN,RADFN,""))
"RTN","AHMLDOL",143,0)
 ..S RACNI=$O(^RADPT("AO",RAOIFN,RADFN,RADTI,""))
"RTN","AHMLDOL",144,0)
 ..D ^RAORDU
"RTN","AHMLDOL",145,0)
 ..;Ensure Rad Order file is updated to discontinue
"RTN","AHMLDOL",146,0)
 ..D NOW^%DTC S NOW=% K %
"RTN","AHMLDOL",147,0)
 ..S RADFDA(75.1,RAOIFN_",",5)=1  ;4076;0 was an invalid code, use 1=DC
"RTN","AHMLDOL",148,0)
 ..S RADFDA(75.1,RAOIFN_",",18)=NOW
"RTN","AHMLDOL",149,0)
 ..D UPDATE^DIE("S","RADFDA","","ERRMSG")
"RTN","AHMLDOL",150,0)
 ..S DIE="^OR(100,",DA=+ORID,DR="65////"_REAS_";" D ^DIE K DIE,DA
"RTN","AHMLDOL",151,0)
 ..;Must have proper status number for RADPT status
"RTN","AHMLDOL",152,0)
 ..S PROC=$$GET1^DIQ(75.1,RAOIFN,2,"I")
"RTN","AHMLDOL",153,0)
 ..S STATUS="CANCELLED"
"RTN","AHMLDOL",154,0)
 ..S EXMSTA=$$GETSTA^AHMLDOR2(PROC,STATUS)
"RTN","AHMLDOL",155,0)
 ..D X7005^RADD3(RADFN,RADTI,RACNI,1,"",EXMSTA,$G(ORNP))
"RTN","AHMLDOL",156,0)
 ..S LIEN=RACNI_","_RADTI_","_RADFN_","
"RTN","AHMLDOL",157,0)
 ..S RADFDA(1,70.03,LIEN,3)=EXMSTA
"RTN","AHMLDOL",158,0)
 ..D UPDATE^DIE("S","RADFDA(1)","","ERRMSG")
"RTN","AHMLDOL",159,0)
 ..S REC(1)=ORDNUM_"^RS",FLAG=1
"RTN","AHMLDOL",160,0)
 I 'FLAG D
"RTN","AHMLDOL",161,0)
 .D DC^ORWDXA(.REC,ORID,ORNP,ORL,REAS,DCORIG,ISNEWORD)
"RTN","AHMLDOL",162,0)
 .D BLDSND^AHMLDOL1(.REC,.ORWREC)
"RTN","AHMLDOL",163,0)
 .K REC S ES="AA",ORWLST=""
"RTN","AHMLDOL",164,0)
 .D SEND^ORWDX(.ORWLST,ORVP,ORNP,ORL,ES,.ORWREC)
"RTN","AHMLDOL",165,0)
 .M REC=ORWLST K ORWLST
"RTN","AHMLDOL",166,0)
 I PTYPE'="RAD",REAS'?.N D
"RTN","AHMLDOL",167,0)
 .N DEF,PKG,XX,OK
"RTN","AHMLDOL",168,0)
 .S PKG=$O(^DIC(9.4,"B","LAB SERVICE",0))
"RTN","AHMLDOL",169,0)
 .S DEF=$P($G(^LAB(69.9,1,"OR")),"^",2)
"RTN","AHMLDOL",170,0)
 .S XX=$$DC^ORX1(DEF,+$G(REQ),PKG,"Cancellation Reason"),LRNATURE=$S(XX:"^^^"_$P(XX,"^",1,2)_"^99ORR",1:-1)
"RTN","AHMLDOL",171,0)
 .S LRSN=LRSND
"RTN","AHMLDOL",172,0)
 .S LRTNM=$$GET1^DIQ(60,LRTEST,.01,"I")
"RTN","AHMLDOL",173,0)
 .S LRCCOM=$G(REAS)
"RTN","AHMLDOL",174,0)
 .S LRCCOM=$P(LRCCOM,"*",1,2)
"RTN","AHMLDOL",175,0)
 .S ORIFN=ORN,LRTSTS=LRTEST
"RTN","AHMLDOL",176,0)
 .D ^LRPARAM
"RTN","AHMLDOL",177,0)
 .;Call LRTSTOUT to update file 69, 68 and 63
"RTN","AHMLDOL",178,0)
 .D SET^LRTSTOUT
"RTN","AHMLDOL",179,0)
 I '$D(REC(1)) S REC(1)=ORID_"^RS"
"RTN","AHMLDOL",180,0)
 Q
"RTN","AHMLDOL",181,0)
 ;
"RTN","AHMLDOL",182,0)
END ;
"RTN","AHMLDOL",183,0)
 K LRDFN,LRI,LRSND,LRSS,LRTEST,ORIFN,HLMA,LOC,TYPE,^TMP($J)
"RTN","AHMLDOL1")
0^2^B55114152
"RTN","AHMLDOL1",1,0)
AHMLDOL1 ;LEIDOS/TCK; REMOTE ORDERING; 12/14/15 6:09pm ; 2/9/17 1:34pm
"RTN","AHMLDOL1",2,0)
 ;;1.0;Remote orders;**1**;JAN 1, 2016;Build 53
"RTN","AHMLDOL1",3,0)
 ;--------------------------------------------------------------------
"RTN","AHMLDOL1",4,0)
EN(REC,TYPE,LOC,HLMA,HLMTIEN) ;
"RTN","AHMLDOL1",5,0)
 ;
"RTN","AHMLDOL1",6,0)
 N LRSAMP,ACKERR,AHOUT,DOB,LIEN,ORDOB,ORSSN,SSN,URGENCY,ORNME
"RTN","AHMLDOL1",7,0)
 K ORD,OR,OLDOR,ORNUM,XMY
"RTN","AHMLDOL1",8,0)
 S ACKERR=0
"RTN","AHMLDOL1",9,0)
 Q:'$D(REC)
"RTN","AHMLDOL1",10,0)
 S ACT=""
"RTN","AHMLDOL1",11,0)
 D ACTION(.REC,.ACT,.ORN)
"RTN","AHMLDOL1",12,0)
 I ACT="AE" Q
"RTN","AHMLDOL1",13,0)
 D GTDATA(.REC,.ORVP,.ORNP,.ORL,.DLG,.ORDG,.ORIT,.ORIFN,.REAS,TYPE)
"RTN","AHMLDOL1",14,0)
 Q:ACKERR
"RTN","AHMLDOL1",15,0)
 I ACT="NW" Q
"RTN","AHMLDOL1",16,0)
 I (ACT["OC")!(ACT["CA")!(ACT["DC") D
"RTN","AHMLDOL1",17,0)
 .S ORID=$G(ORIFN),(DCORIG,ISNEWORD)=0
"RTN","AHMLDOL1",18,0)
 .I ORID'="" D
"RTN","AHMLDOL1",19,0)
 ..S ORL=+$$GET1^DIQ(100,ORID,6,"I")
"RTN","AHMLDOL1",20,0)
 ..I ORID'[";" S ORID=ORID_";1"
"RTN","AHMLDOL1",21,0)
 ..D DC^AHMLDOL(.REC,ORID,ORVP,ORNP,ORL,REAS,DCORIG,ISNEWORD)
"RTN","AHMLDOL1",22,0)
 I ACT["SC" D EN^AHMLDOL2(.AHOUT,.REC)
"RTN","AHMLDOL1",23,0)
 I ACT["RE" D EN^AHMLDOL2(.AHOUT,.REC)  ;FILE RESULTS FROM SPOKE
"RTN","AHMLDOL1",24,0)
 D END
"RTN","AHMLDOL1",25,0)
 ;
"RTN","AHMLDOL1",26,0)
 Q
"RTN","AHMLDOL1",27,0)
 ;--------------------------------------------------------------------
"RTN","AHMLDOL1",28,0)
BLDSND(REC,ORWREC,ORNUM) ;
"RTN","AHMLDOL1",29,0)
 Q:'$D(REC(1))
"RTN","AHMLDOL1",30,0)
 S ORNUM=$P(REC(1),"^")
"RTN","AHMLDOL1",31,0)
 S ORNUM=$E(ORNUM,2,99)
"RTN","AHMLDOL1",32,0)
 S ORWREC(1)=ORNUM_"^"_1_"^"_1_"^"_"E"
"RTN","AHMLDOL1",33,0)
 Q
"RTN","AHMLDOL1",34,0)
 ;
"RTN","AHMLDOL1",35,0)
ACTION(REC,ACT,ORN) ;
"RTN","AHMLDOL1",36,0)
 ;
"RTN","AHMLDOL1",37,0)
 N II,STOP
"RTN","AHMLDOL1",38,0)
 ;
"RTN","AHMLDOL1",39,0)
 S (ACT,II)="",STOP=0
"RTN","AHMLDOL1",40,0)
 ;
"RTN","AHMLDOL1",41,0)
 F  S II=$O(REC(II)) Q:II=""  S MSGTYP=$P(REC(II),"|") D  Q:STOP
"RTN","AHMLDOL1",42,0)
 .;
"RTN","AHMLDOL1",43,0)
 .I MSGTYP="ORC" D  Q
"RTN","AHMLDOL1",44,0)
 ..S ORN=+$P(REC(II),"|",3),ACT=$P(REC(II),"|",2),STOP=1
"RTN","AHMLDOL1",45,0)
 .;
"RTN","AHMLDOL1",46,0)
 .I MSGTYP="MSA" D  Q
"RTN","AHMLDOL1",47,0)
 ..S ORN="",ACT=$P(REC(II),"|",2),STOP=1   ;[not sure about ORN???]
"RTN","AHMLDOL1",48,0)
 ;
"RTN","AHMLDOL1",49,0)
 Q
"RTN","AHMLDOL1",50,0)
 ;-----------------------------------------------------------------------
"RTN","AHMLDOL1",51,0)
GTDATA(REC,ORVP,ORNP,ORL,DLG,ORDG,ORIT,ORIFN,REAS,TYPE) ;
"RTN","AHMLDOL1",52,0)
 ;
"RTN","AHMLDOL1",53,0)
 N II,CNT,QUIT
"RTN","AHMLDOL1",54,0)
 S (ORVP,ORNP,ORL,DLG,ORDG,ORIT,ORIFN)="",QUIT=0
"RTN","AHMLDOL1",55,0)
 I TYPE="LAB" S DLG="LR OTHER LAB TESTS"
"RTN","AHMLDOL1",56,0)
 I TYPE="RAD" S DLG="RA OERR EXAM"
"RTN","AHMLDOL1",57,0)
 S ORIT=$O(^ORD(101.41,"AB",DLG,0))
"RTN","AHMLDOL1",58,0)
 S ORDG=$O(^ORD(100.98,"B",TYPE,0))
"RTN","AHMLDOL1",59,0)
 S II="" F  S II=$O(REC(II)) Q:II=""  D  Q:ACKERR
"RTN","AHMLDOL1",60,0)
 .S MSGNDE=REC(II),MSGTYP=$P($G(MSGNDE),"|")
"RTN","AHMLDOL1",61,0)
 .Q:MSGTYP=""
"RTN","AHMLDOL1",62,0)
 .Q:MSGTYP["BHS"
"RTN","AHMLDOL1",63,0)
 .I MSGTYP["MSH" D
"RTN","AHMLDOL1",64,0)
 ..I $P(MSGNDE,"|",9)="ORR" Q
"RTN","AHMLDOL1",65,0)
 ..S LOC=$P(MSGNDE,"|",4)
"RTN","AHMLDOL1",66,0)
 ..S LOCNME=$$GET1^DIQ(4,LOC,.01,"E")
"RTN","AHMLDOL1",67,0)
 .I MSGTYP["PID" D
"RTN","AHMLDOL1",68,0)
 ..I TYPE="LAB" D
"RTN","AHMLDOL1",69,0)
 ...S DOB=$P(MSGNDE,"|",5),ORVPNME=$P(MSGNDE,"|",6),SSN=$P(MSGNDE,"|",7)
"RTN","AHMLDOL1",70,0)
 ..I TYPE="RAD",ACT="OC"!(ACT="DC") D
"RTN","AHMLDOL1",71,0)
 ...S DOB=$P(MSGNDE,"|",5),ORVPNME=$P(MSGNDE,"|",6),SSN=$P(MSGNDE,"|",7)
"RTN","AHMLDOL1",72,0)
 ..I TYPE="RAD",ACT'="OC"&(ACT'="DC") D
"RTN","AHMLDOL1",73,0)
 ...S DOB=$P(MSGNDE,"|",8),ORVPNME=$P(MSGNDE,"|",6),SSN=+$P(MSGNDE,"|",4)
"RTN","AHMLDOL1",74,0)
 ...I ORVPNME["^" S ORVPNME=$TR(ORVPNME,"^",",")
"RTN","AHMLDOL1",75,0)
 ..I $G(ORVPNME)="" S ACKERR=1 D  Q
"RTN","AHMLDOL1",76,0)
 ...D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOL1",77,0)
 ..I $G(DOB)'>0 S ACKERR=1 D  Q
"RTN","AHMLDOL1",78,0)
 ...D ACK^AHMLDOL(HLMA,"AE","Patient DOB not found",TYPE)
"RTN","AHMLDOL1",79,0)
 ..I $G(SSN)'>0 S ACKERR=1 D  Q
"RTN","AHMLDOL1",80,0)
 ...D ACK^AHMLDOL(HLMA,"AE","Patient SSN not found",TYPE)
"RTN","AHMLDOL1",81,0)
 ..I '$D(^DPT("SSN",SSN)) S ACKERR=1 D  Q
"RTN","AHMLDOL1",82,0)
 ...D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOL1",83,0)
 ..S ORVP="",ORVP=$O(^DPT("SSN",SSN,ORVP))
"RTN","AHMLDOL1",84,0)
 ..I $G(ORVP)'>0 S ACKERR=1 D  Q
"RTN","AHMLDOL1",85,0)
 ...D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOL1",86,0)
 ..S ORNME=$$GET1^DIQ(2,ORVP,.01,"I")
"RTN","AHMLDOL1",87,0)
 ..I ORNME'=ORVPNME S ACKERR=1 D  Q
"RTN","AHMLDOL1",88,0)
 ...D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOL1",89,0)
 ..S ORDOB=$$GET1^DIQ(2,ORVP,.03,"I")
"RTN","AHMLDOL1",90,0)
 ..I $G(ORDOB)'>0 S ACKERR=1 D  Q
"RTN","AHMLDOL1",91,0)
 ...D ACK^AHMLDOL(HLMA,"AE","Patient DOB not found",TYPE)
"RTN","AHMLDOL1",92,0)
 ..I ORDOB'=DOB S ACKERR=1 D  Q
"RTN","AHMLDOL1",93,0)
 ...D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOL1",94,0)
 ..S ORSSN=$$GET1^DIQ(2,ORVP,.09,"I")
"RTN","AHMLDOL1",95,0)
 ..I ORSSN'=SSN S ACKERR=1 D  Q:$G(ACKERR)
"RTN","AHMLDOL1",96,0)
 ...D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOL1",97,0)
 .Q:ACKERR
"RTN","AHMLDOL1",98,0)
 .I MSGTYP["PV1" D
"RTN","AHMLDOL1",99,0)
 ..S ORL=$P(REC(II),"|",4)
"RTN","AHMLDOL1",100,0)
 .I TYPE="LAB" D
"RTN","AHMLDOL1",101,0)
 ..I MSGTYP["ORC" D
"RTN","AHMLDOL1",102,0)
 ...S ST=$P(REC(II),"|",2)
"RTN","AHMLDOL1",103,0)
 ...S ORIFN=+$P(MSGNDE,"|",3)
"RTN","AHMLDOL1",104,0)
 ...S ORNP=$P(MSGNDE,"|",13)
"RTN","AHMLDOL1",105,0)
 ...D PROXY^AHMLDOR2(.ORNP,.ORNPNME)
"RTN","AHMLDOL1",106,0)
 ...S COL=$P($P(MSGNDE,"|",8),"^",4)
"RTN","AHMLDOL1",107,0)
 ...S COL=$$HL7TFM^XLFDT(COL,"L")
"RTN","AHMLDOL1",108,0)
 ...I $P(COL,".",2)="" S COL="TODAY"
"RTN","AHMLDOL1",109,0)
 ...S COLDTTM=COL
"RTN","AHMLDOL1",110,0)
 ...S START=COLDTTM
"RTN","AHMLDOL1",111,0)
 ...I $G(ST)="CA" S REAS=$P($P(MSGNDE,"|",17),"^",4),ST=""
"RTN","AHMLDOL1",112,0)
 ..I MSGTYP["NTE",ST="OC" S ST="" D
"RTN","AHMLDOL1",113,0)
 ...S LRCCOM=$P(REC(II),"|",4),LRCCOM=$P(LRCCOM,":",2,4)
"RTN","AHMLDOL1",114,0)
 ...S REAS=LRCCOM
"RTN","AHMLDOL1",115,0)
 ..I MSGTYP["OBR" D  Q:QUIT
"RTN","AHMLDOL1",116,0)
 ...S OBRNDE=REC(II)
"RTN","AHMLDOL1",117,0)
 ...S TSTNDE=$P(OBRNDE,"|",5)
"RTN","AHMLDOL1",118,0)
 ...I TSTNDE'="" S TSTNME=$P(TSTNDE,"^",5)
"RTN","AHMLDOL1",119,0)
 ...I TSTNME="" S REC(1)="-1^ERR: LAB TEST NOT FOUND",QUIT=1 Q
"RTN","AHMLDOL1",120,0)
 ...I '$D(^LAB(60,"B",TSTNME)) S REC(1)="-1^ERR: LAB TEST NOT FOUND",QUIT=1 Q
"RTN","AHMLDOL1",121,0)
 ...S LABTEST="",LABTEST=$O(^LAB(60,"B",TSTNME,LABTEST))
"RTN","AHMLDOL1",122,0)
 ...I LABTEST="" S REC(1)="-1^ERR: LAB TEST NOT FOUND",QUIT=1 Q
"RTN","AHMLDOL1",123,0)
 ...S SAMPLE=$P(OBRNDE,"|",16),SAMPLE=+$P(SAMPLE,"^",4),LRSAMP=SAMPLE
"RTN","AHMLDOL1",124,0)
 ...S SPECIMEN=$P(OBRNDE,"|",16),SPECIMEN=$P(SPECIMEN,";",4)
"RTN","AHMLDOL1",125,0)
 ...S COLLECTEDBY="SP",HOWOFTEN=28
"RTN","AHMLDOL1",126,0)
 ...S URG=$P($P(OBRNDE,"|",28),"^",6),URGENCY=$P(URG,";",2)
"RTN","AHMLDOL1",127,0)
 ...S LOCNME=$$GET1^DIQ(4,LOC,.01,"E")
"RTN","AHMLDOL1",128,0)
 .I TYPE="RAD" D
"RTN","AHMLDOL1",129,0)
 ..I MSGTYP["ORC" D
"RTN","AHMLDOL1",130,0)
 ...S ORIFN=$P(MSGNDE,"|",3)
"RTN","AHMLDOL1",131,0)
 ...S USR="" D PROXY^AHMLDOR2(.USR,.USRNME)
"RTN","AHMLDOL1",132,0)
 ...I $G(USR)>0 S $P(REC(II),"|",11)=USR_"^"_USRNME
"RTN","AHMLDOL1",133,0)
 ...S ORNP=$P(MSGNDE,"|",13) D PROXY^AHMLDOR2(.ORNP,.ORNPNME)
"RTN","AHMLDOL1",134,0)
 ...S $P(REC(II),"|",13)=ORNP_"^"_ORNPNME
"RTN","AHMLDOL1",135,0)
 ...S REAS=$P($P(MSGNDE,"|",17),"^",4)
"RTN","AHMLDOL1",136,0)
 ...I REAS="" S REAS=$P($P(MSGNDE,"|",17),"^",5)
"RTN","AHMLDOL1",137,0)
 ...I REAS?.N S REAS=$$GET1^DIQ(75.2,REAS,.01,"E")
"RTN","AHMLDOL1",138,0)
 Q
"RTN","AHMLDOL1",139,0)
 ;--------------------------------------------------------------------
"RTN","AHMLDOL1",140,0)
LAB ;
"RTN","AHMLDOL1",141,0)
 N DA,NDE,TMP,CTYP,CTYPE,OI,JVORD,UR,HL,HO
"RTN","AHMLDOL1",142,0)
 S ERR=0,(OI,OR)=""
"RTN","AHMLDOL1",143,0)
 Q:$G(ORIT)'>0
"RTN","AHMLDOL1",144,0)
 K ORDIALOG D BLDARY(ORIT,.OR,.ORT)
"RTN","AHMLDOL1",145,0)
 K ORDIALOG
"RTN","AHMLDOL1",146,0)
 S VAL="" F  S VAL=$O(ORT(VAL)) Q:VAL=""!(ERR)  D
"RTN","AHMLDOL1",147,0)
 .S (CTYP,CTYPE)=""
"RTN","AHMLDOL1",148,0)
 .S STRG=VAL
"RTN","AHMLDOL1",149,0)
 .I $TR(STRG," ")="LABTEST" S NN="",NN=$O(ORT(STRG,"")),ORDIALOG(NN,1)="" D
"RTN","AHMLDOL1",150,0)
 ..Q:$G(LABTEST)'>0
"RTN","AHMLDOL1",151,0)
 ..S TST=LABTEST_";99LRT"
"RTN","AHMLDOL1",152,0)
 ..D GETOINUM^ORWDCN32(.OI,TST)
"RTN","AHMLDOL1",153,0)
 ..I $G(OI)="" S ERR=1,LSTN=LSTN+1,REC(LSTN)="Error: Laboratory order number is missing or invalid." Q
"RTN","AHMLDOL1",154,0)
 ..S ORDIALOG(NN,1)=$G(OI)
"RTN","AHMLDOL1",155,0)
 ..K ORT(STRG)
"RTN","AHMLDOL1",156,0)
 .I $TR(STRG," ")="COLLECTIONDATE/TIME" S NN="",NN=$O(ORT(STRG,"")),ORDIALOG(NN,1)="" D
"RTN","AHMLDOL1",157,0)
 ..S ORDIALOG(NN,1)=$G(START)
"RTN","AHMLDOL1",158,0)
 ..K ORT(STRG)
"RTN","AHMLDOL1",159,0)
 .I $TR(STRG," ")="COLLECTEDBY" S NN="",NN=$O(ORT(STRG,"")),ORDIALOG(NN,1)="" D
"RTN","AHMLDOL1",160,0)
 ..S ORDIALOG(NN,1)="SP"
"RTN","AHMLDOL1",161,0)
 .I $TR(STRG," ")="HOWOFTEN" S NN="",NN=$O(ORT(STRG,"")),ORDIALOG(NN,1)="" D
"RTN","AHMLDOL1",162,0)
 ..S ORDIALOG(NN,1)=28
"RTN","AHMLDOL1",163,0)
 ..K ORT(STRG)
"RTN","AHMLDOL1",164,0)
 .I $TR(STRG," ")="SPECIMEN" S NN="",NN=$O(ORT(STRG,"")),ORDIALOG(NN,1)="" D
"RTN","AHMLDOL1",165,0)
 ..S ORDIALOG(NN,1)=SAMPLE
"RTN","AHMLDOL1",166,0)
 ..K ORT(STRG)
"RTN","AHMLDOL1",167,0)
 .I $TR(STRG," ")="COLLECTIONSAMPLE" S NN="",NN=$O(ORT(STRG,"")),ORDIALOG(NN,1)="" D
"RTN","AHMLDOL1",168,0)
 ..S ORDIALOG(NN,1)=SPECIMEN
"RTN","AHMLDOL1",169,0)
 ..K ORT(STRG)
"RTN","AHMLDOL1",170,0)
 .I $TR(STRG," ")="URGENCY" S NN="",NN=$O(ORT(STRG,"")),ORDIALOG(NN,1)="" D
"RTN","AHMLDOL1",171,0)
 ..S ORDIALOG(NN,1)=$G(URGENCY)
"RTN","AHMLDOL1",172,0)
 ..K ORT(STRG)
"RTN","AHMLDOL1",173,0)
 .I $TR(STRG," ")="LOCATION" S NN="",NN=$O(ORT(STRG,"")),ORDIALOG(NN,1)="" D
"RTN","AHMLDOL1",174,0)
 ..S ORDIALOG(NN,1)=$G(LOCNME)
"RTN","AHMLDOL1",175,0)
 ;
"RTN","AHMLDOL1",176,0)
 Q
"RTN","AHMLDOL1",177,0)
 ;----------------------------------------------------------------------
"RTN","AHMLDOL1",178,0)
BLDWP(NN,COMMENT) ;
"RTN","AHMLDOL1",179,0)
 N II
"RTN","AHMLDOL1",180,0)
 F II=1:1:$L(COMMENT,$C(10)) D
"RTN","AHMLDOL1",181,0)
 .S ORDIALOG("WP",NDE,1,II,0)=$P(COMMENT,$C(10),II)
"RTN","AHMLDOL1",182,0)
 .S ORDIALOG(NDE,1)="ORDIALOG(""WP"","_NDE_",1)"
"RTN","AHMLDOL1",183,0)
 Q
"RTN","AHMLDOL1",184,0)
 ;--------------------------------------------------------------------
"RTN","AHMLDOL1",185,0)
BLDARY(ORIT,OR,ORT) ;
"RTN","AHMLDOL1",186,0)
 Q:$G(ORIT)'>0
"RTN","AHMLDOL1",187,0)
 N TXT,TMP,NM
"RTN","AHMLDOL1",188,0)
 D GETDLG^ORCD(ORIT)
"RTN","AHMLDOL1",189,0)
 S TXT="" F  S TXT=$O(ORDIALOG("B",TXT)) Q:TXT=""  D
"RTN","AHMLDOL1",190,0)
 .S TMP=$TR(TXT," "),ORDT("B",TMP)=ORDIALOG("B",TXT)
"RTN","AHMLDOL1",191,0)
 S TXT="" F  S TXT=$O(ORDT("B",TXT)) Q:TXT=""  D
"RTN","AHMLDOL1",192,0)
 .I $D(ORDT("B",$TR(TXT," "))) S NM=$P($G(ORDT("B",$TR(TXT," "))),U,2)
"RTN","AHMLDOL1",193,0)
 .S ORD(NM,1)="" S ORD(NM,1)=ORDT("B",TXT) S ORT(TXT,NM)="" S ORT(TXT,NM)=ORD(NM,1)
"RTN","AHMLDOL1",194,0)
 ;
"RTN","AHMLDOL1",195,0)
 Q
"RTN","AHMLDOL1",196,0)
 ;----------------------------------------------------------------------
"RTN","AHMLDOL1",197,0)
END      ;
"RTN","AHMLDOL1",198,0)
 ;
"RTN","AHMLDOL1",199,0)
 K %,COL,COLLECTEDBY,COLDTTM,DCORIG,ERR,HOWOFTEN,HLMA,HLMTIEN
"RTN","AHMLDOL1",200,0)
 K ISNEWORD,MVOROUT,LABTEST,LOCNME,LRCCOM,LRFDA,LRIEND,LSTN
"RTN","AHMLDOL1",201,0)
 K MSG,MSGNDE,MSGTYP,OBRNDE,ORDT,ORID,ORNPNME,OROUT,ORVPNME
"RTN","AHMLDOL1",202,0)
 K SAMPLE,SPECIMEN,ST,START,STRG,TEST,TST,TSTNDE,TSTNME,URG
"RTN","AHMLDOL1",203,0)
 K USR,USRNME,VAL,X1,X2,XMSUB,XMTEXT,XMY,Y
"RTN","AHMLDOL1",204,0)
 ;
"RTN","AHMLDOL1",205,0)
 Q
"RTN","AHMLDOL1",206,0)
 ;
"RTN","AHMLDOL2")
0^3^B197039088
"RTN","AHMLDOL2",1,0)
AHMLDOL2 ;LEIDOS/TCK- Remote Ordering - Accession ; 2/26/17 5:15pm
"RTN","AHMLDOL2",2,0)
 ;;1.0;Orders Portability;**1**;March 1, 2010;Build 53
"RTN","AHMLDOL2",3,0)
 ;
"RTN","AHMLDOL2",4,0)
 Q
"RTN","AHMLDOL2",5,0)
 ;
"RTN","AHMLDOL2",6,0)
EN(AHOUT,REC) ;
"RTN","AHMLDOL2",7,0)
 K AHOUT
"RTN","AHMLDOL2",8,0)
 S D1="|",D2="^"
"RTN","AHMLDOL2",9,0)
 N HLARY,ORC1,ORC5,XMT,XME
"RTN","AHMLDOL2",10,0)
 N AHCNT S AHCNT=1 ; counter for AHOUT
"RTN","AHMLDOL2",11,0)
 D PARSE
"RTN","AHMLDOL2",12,0)
 ;
"RTN","AHMLDOL2",13,0)
MAIN ;  main driver for laboratory results
"RTN","AHMLDOL2",14,0)
 ;
"RTN","AHMLDOL2",15,0)
 N DD,Y,X,XX,YY,ZZ
"RTN","AHMLDOL2",16,0)
 ; Cancellation
"RTN","AHMLDOL2",17,0)
 ; Accession
"RTN","AHMLDOL2",18,0)
 I ORC1="SC",ORC5="SC" D
"RTN","AHMLDOL2",19,0)
 . D ACC ; Tom's Stuff
"RTN","AHMLDOL2",20,0)
 ; Results
"RTN","AHMLDOL2",21,0)
 I ORC1="RE",ORC5="CM" D
"RTN","AHMLDOL2",22,0)
 . N OK S OK=1
"RTN","AHMLDOL2",23,0)
 . D RSLT^AHMLDOL6 Q:'OK  ; parse HL7 message and set variable file results
"RTN","AHMLDOL2",24,0)
 ;
"RTN","AHMLDOL2",25,0)
 D END
"RTN","AHMLDOL2",26,0)
 QUIT
"RTN","AHMLDOL2",27,0)
 K AHOUT
"RTN","AHMLDOL2",28,0)
 ;
"RTN","AHMLDOL2",29,0)
PARSE ;
"RTN","AHMLDOL2",30,0)
 N AHCNT,FLG,XX,XT,XC,OBRCT,OBXCT
"RTN","AHMLDOL2",31,0)
 ;
"RTN","AHMLDOL2",32,0)
 S JVCNT="",FLG=0
"RTN","AHMLDOL2",33,0)
 F  S JVCNT=$O(REC(JVCNT)) Q:JVCNT=""  D  Q:FLG=2
"RTN","AHMLDOL2",34,0)
 . S XT=$P(REC(JVCNT),D1,1) Q:XT=""
"RTN","AHMLDOL2",35,0)
 . S XC=$G(HLARY(XT))+1,HLARY(XT)=XC
"RTN","AHMLDOL2",36,0)
 . S HLARY(XT,XC)=$P(REC(JVCNT),D1,2,999)
"RTN","AHMLDOL2",37,0)
 ;   set some basic variables:
"RTN","AHMLDOL2",38,0)
 ; Next line looks like dead code.
"RTN","AHMLDOL2",39,0)
 S ORC1=$P(HLARY("ORC",1),D1,1),ORC5=$P(HLARY("ORC",1),D1,5)
"RTN","AHMLDOL2",40,0)
 ;  create array HLOBX of ordered OBR and OBX segments.
"RTN","AHMLDOL2",41,0)
 S JVCNT="",FLG=0,OBRCT=0,OBXCT=0
"RTN","AHMLDOL2",42,0)
 F  S JVCNT=$O(REC(JVCNT)) Q:JVCNT=""  D  ;
"RTN","AHMLDOL2",43,0)
 . S XT=$P(REC(JVCNT),D1,1) Q:XT=""
"RTN","AHMLDOL2",44,0)
 . S XC=$G(HLARY(XT))+1,HLARY(XT)=XC
"RTN","AHMLDOL2",45,0)
 . I XT="OBR" S OBRCT=OBRCT+1,OBXCT=0
"RTN","AHMLDOL2",46,0)
 . I XT="OBR" S HLOBX(OBRCT)=$P(REC(JVCNT),D1,2,999)
"RTN","AHMLDOL2",47,0)
 . I XT="OBX" S OBXCT=OBXCT+1,HLOBX(OBRCT,OBXCT)=$P(REC(JVCNT),D1,2,999)
"RTN","AHMLDOL2",48,0)
 Q
"RTN","AHMLDOL2",49,0)
 ;
"RTN","AHMLDOL2",50,0)
CHKORID(ID) ;Checks to see if order number sent exists in VistA.
"RTN","AHMLDOL2",51,0)
 I '$D(ID) S ID=0 Q ID
"RTN","AHMLDOL2",52,0)
 S LRFILE=100,LRIEN=ID_","
"RTN","AHMLDOL2",53,0)
 S ID=$$GET1^DIQ(LRFILE,LRIEN,.01,"I") I ID="" S ID=0
"RTN","AHMLDOL2",54,0)
 Q ID
"RTN","AHMLDOL2",55,0)
 ;
"RTN","AHMLDOL2",56,0)
ACC ;
"RTN","AHMLDOL2",57,0)
 N LRADD,ORNM,ID,ORVP
"RTN","AHMLDOL2",58,0)
 S PNLTST=0
"RTN","AHMLDOL2",59,0)
 S (LRADD,ORNM,LRURG,IFN,II,ACCN)=""
"RTN","AHMLDOL2",60,0)
 K DIR,AHOUT,LRACC
"RTN","AHMLDOL2",61,0)
 S LRPARAM="^^^",(ST,LRACC)=0
"RTN","AHMLDOL2",62,0)
 I $D(LROESTAT) D:$P(LRPARAM,D1,14) ^LRCAPV I $G(LREND) K LRLONG,LRPANEL Q
"RTN","AHMLDOL2",63,0)
 S (LRODT,XX,DT)=$$DT^XLFDT(),LRODT0=$$FMTE^XLFDT(DT,5)
"RTN","AHMLDOL2",64,0)
 I '$D(^LRO(69,DT,1,0)) S ^LRO(69,DT,0)=DT,^LRO(69,DT,1,0)="^69.01PA^^",^LRO(69,"B",DT,DT)=""
"RTN","AHMLDOL2",65,0)
 S X="T-7",%DT="" D ^%DT S LRTM7=+Y
"RTN","AHMLDOL2",66,0)
 ; Capture DMIS number from HL7 message
"RTN","AHMLDOL2",67,0)
 S ORNP="" D PROXY^AHMLDOR2(.ORNP,.ORNPNME)
"RTN","AHMLDOL2",68,0)
 S ORDNM=""
"RTN","AHMLDOL2",69,0)
 S ORDNM=$P(HLARY("ORC",1),D1,2),ORDNM=+ORDNM
"RTN","AHMLDOL2",70,0)
 ; Remote site RSITE from ORC-13
"RTN","AHMLDOL2",71,0)
 S XX=HLARY("ORC",1),RSITE=$P($G(XX),D1,13) K XX
"RTN","AHMLDOL2",72,0)
 I RSITE="" S RSITE=0
"RTN","AHMLDOL2",73,0)
 I RSITE S SITE=$$GET1^DIQ(4,RSITE,.01,"E")
"RTN","AHMLDOL2",74,0)
 ; Local site SITE taken from current user
"RTN","AHMLDOL2",75,0)
 I ORDNM="" S AHOUT(1)="-1^Error: No Lab order number not found in HL7 message" Q
"RTN","AHMLDOL2",76,0)
 S LRFILE=100,LRIEN=ORDNM_","
"RTN","AHMLDOL2",77,0)
 S REAS=5
"RTN","AHMLDOL2",78,0)
 S ORVP=+$$GET1^DIQ(LRFILE,LRIEN,.02,"I")
"RTN","AHMLDOL2",79,0)
 S ORL=+$$GET1^DIQ(LRFILE,LRIEN,6,"I")
"RTN","AHMLDOL2",80,0)
 S ORNP=$$GET1^DIQ(LRFILE,LRIEN,1,"I")
"RTN","AHMLDOL2",81,0)
 D PROXY^AHMLDOR2(.ORNP,.ORNPNME)
"RTN","AHMLDOL2",82,0)
 ; Node 4 of record in Order file (100) has three pieces:
"RTN","AHMLDOL2",83,0)
 ; Lab Order number LRORD, Order date LRODT, Accession send number LRSND
"RTN","AHMLDOL2",84,0)
 ; LRODT and LRSND access entry in Lab Order file (69)
"RTN","AHMLDOL2",85,0)
 S LRFILE=100,LRIEN=ORDNM_",",FOUND=0
"RTN","AHMLDOL2",86,0)
 S LRDATA=$$GET1^DIQ(LRFILE,LRIEN,33,"I")
"RTN","AHMLDOL2",87,0)
 I LRDATA'[";" S AHOUT(1)="-1^Error: Node 4 of ^OR(100,ORDNM) does not exist" Q
"RTN","AHMLDOL2",88,0)
 S LRORD=$P(LRDATA,";"),LRODT=$P(LRDATA,";",2),LRSND=$P(LRDATA,";",3)
"RTN","AHMLDOL2",89,0)
 S D="C",DIC="^LRO(69,",DIC(0)="D",X=LRORD D IX^DIC
"RTN","AHMLDOL2",90,0)
 I Y<0 S AHOUT(1)="-1^Error: Order number not found in VistA" Q
"RTN","AHMLDOL2",91,0)
 S XX=HLARY("OBR",1) D
"RTN","AHMLDOL2",92,0)
 .S LRTST=$P($P(XX,D1,4),D2)
"RTN","AHMLDOL2",93,0)
 .I LRTST["."!(LRTST="") S LRTST=$P($P(XX,D1,4),D2,4)
"RTN","AHMLDOL2",94,0)
 .S REMUID=$P(XX,D1,21)
"RTN","AHMLDOL2",95,0)
 .S JVTST=LRTST
"RTN","AHMLDOL2",96,0)
 .S LBARR=$P(XX,D1,7)
"RTN","AHMLDOL2",97,0)
 .S LBARR=$$HL7TFM^XLFDT(LBARR,"L","")
"RTN","AHMLDOL2",98,0)
 I $P(XX,D1,46)'="" S JVTST=$P($P(XX,D1,46),D2),PNLTST=LRTST
"RTN","AHMLDOL2",99,0)
 ; Lab test number LRTST from OBR.4.1
"RTN","AHMLDOL2",100,0)
 ; Accesses entry in Lab Test file (60)
"RTN","AHMLDOL2",101,0)
 S %DT="EP",X=$E(DT,2,3) D ^%DT S LRAD=Y
"RTN","AHMLDOL2",102,0)
 K %DT,X
"RTN","AHMLDOL2",103,0)
 S P2="L"
"RTN","AHMLDOL2",104,0)
 S LRSTATUS="C",%DT("B")=""
"RTN","AHMLDOL2",105,0)
 ; Collection date/time LRCDT from OBR-7
"RTN","AHMLDOL2",106,0)
 ;S LRCDT="",LRCDT=$P(HLARY("OBR",1),D1,7)
"RTN","AHMLDOL2",107,0)
 S LRCDT="",LRCDT=$$NOW^XLFDT,LRNT=LRCDT
"RTN","AHMLDOL2",108,0)
 ;S LRNT="",LRNT=$$NOW^XLFDT
"RTN","AHMLDOL2",109,0)
 I LRCDT="" S AHOUT(1)="-1^Error: Collection DATE/TIME is not in HL7 message" Q
"RTN","AHMLDOL2",110,0)
 ;I LRCDT["-" D
"RTN","AHMLDOL2",111,0)
 ;.I $E(LRCDT,9,12)="0000" S LRCDT=$E(LRCDT,1,8)
"RTN","AHMLDOL2",112,0)
 ;S P3="",LRCDT=$$HL7TFM^XLFDT(LRCDT,P2,P3)
"RTN","AHMLDOL2",113,0)
 I $G(LRCDT)<1 S AHOUT(1)="-1^Error: Collection Date/Time missing or invalid" Q
"RTN","AHMLDOL2",114,0)
 ; Update Collection Date and Time in the Order file, (#100)
"RTN","AHMLDOL2",115,0)
 S LRFILE=100,LRIEN=ORDNM_",",LRFDA(1,LRFILE,LRIEN,21)=LRCDT
"RTN","AHMLDOL2",116,0)
 D UPDATE^DIE("","LRFDA(1)","LRIENS","LRMSG")
"RTN","AHMLDOL2",117,0)
 S LRTIM=$P($P(HLARY("ORC",1),D1,7),D2,4),LRUN=$P($G(LRCDT),D1,2)
"RTN","AHMLDOL2",118,0)
 S P2="L",P3="",LRTIM=$$HL7TFM^XLFDT(LRTIM,P2,P3)
"RTN","AHMLDOL2",119,0)
 S LRSN(LRSND)=LRSND,LRSN=LRSND
"RTN","AHMLDOL2",120,0)
 I '$D(^LRO(69,LRODT,1,LRSN,1)) S ^LRO(69,LRODT,1,LRSN,1)="^^^^^^^^^^"
"RTN","AHMLDOL2",121,0)
 ; GETACC entry point finds matching Accession
"RTN","AHMLDOL2",122,0)
 S LRFILE=69.01,LRIEN=LRSND_","_LRODT_","
"RTN","AHMLDOL2",123,0)
 S COLST=$$GET1^DIQ(LRFILE,LRIEN,13,"I")
"RTN","AHMLDOL2",124,0)
 ; Check if this is an ATA
"RTN","AHMLDOL2",125,0)
 S JVODT=LRODT
"RTN","AHMLDOL2",126,0)
 ; Accession the order on the VA side
"RTN","AHMLDOL2",127,0)
 S DA=LRSND D LROE2
"RTN","AHMLDOL2",128,0)
 K LRAA D Q15 S LRSND=LRSN K LRSN
"RTN","AHMLDOL2",129,0)
 S LRACC=0,LRSEND=""
"RTN","AHMLDOL2",130,0)
 I JVTST S LRTST=JVTST
"RTN","AHMLDOL2",131,0)
 S LRACC=$$GETACC(ORDNM,LRODT,LRORD,.LRSND,LRTST) I LRACC=0 S AHOUT(1)="1^Error: This order did not accession properly" Q
"RTN","AHMLDOL2",132,0)
 ;add code to stop overwriting the UID with the Vista accession #
"RTN","AHMLDOL2",133,0)
 I $D(REMUID) D REMUID(RSITE,LRODT,LRSND,.LRSEND,REMUID)
"RTN","AHMLDOL2",134,0)
 ;FILE THE LAB TECH
"RTN","AHMLDOL2",135,0)
 I $G(LBTECH)>0,$G(LRORD)>0 D
"RTN","AHMLDOL2",136,0)
 .S LRFILE=69.03,LRIEN=LRSEND_","_LRSND_","_LRODT_","
"RTN","AHMLDOL2",137,0)
 .S LRAD=$$GET1^DIQ(LRFILE,LRIEN,2,"I")
"RTN","AHMLDOL2",138,0)
 .S LRAA=$$GET1^DIQ(LRFILE,LRIEN,3,"I")
"RTN","AHMLDOL2",139,0)
 .S LRAN=$$GET1^DIQ(LRFILE,LRIEN,4,"I")
"RTN","AHMLDOL2",140,0)
 .S LRFILE=68.04,LRIEN=LRTST_","_LRAN_","_LRAD_","_LRAA_","
"RTN","AHMLDOL2",141,0)
 .S LRFDA(4,LRFILE,LRIEN,3)=$G(LBTECH)
"RTN","AHMLDOL2",142,0)
 .D UPDATE^DIE("","LRFDA(4)","LRIENS","LRMSG")
"RTN","AHMLDOL2",143,0)
 ;S AHOUT(1)=ORDNM_";1^"_LRACC_"^"_LRUID_"^RS"
"RTN","AHMLDOL2",144,0)
 ;S AHOUT(2)=""
"RTN","AHMLDOL2",145,0)
 K LRSND,DA,LRODT,LRORD,LRDATA,HLARY,REC
"RTN","AHMLDOL2",146,0)
 Q
"RTN","AHMLDOL2",147,0)
 ;
"RTN","AHMLDOL2",148,0)
CHKATA(DODID,LBORD,LRADD) ;
"RTN","AHMLDOL2",149,0)
 N LRAA,LRAD,LRAN,LRIEN,LRORD
"RTN","AHMLDOL2",150,0)
 S (LRAA,LRAD,LRAN,LRADD)=""
"RTN","AHMLDOL2",151,0)
 I '$D(^LRO(68,"C",DODID)) Q
"RTN","AHMLDOL2",152,0)
 S LRAA=$O(^LRO(68,"C",DODID,LRAA)) I LRAA="" Q
"RTN","AHMLDOL2",153,0)
 S LRAD=$O(^LRO(68,"C",DODID,LRAA,LRAD)) I LRAD="" Q
"RTN","AHMLDOL2",154,0)
 S LRAN=$O(^LRO(68,"C",DODID,LRAA,LRAD,LRAN)) I LRAN="" Q
"RTN","AHMLDOL2",155,0)
 S LRIEN=LRAN_","_LRAD_","_LRAA_","
"RTN","AHMLDOL2",156,0)
 S LRORD=$$GET1^DIQ(68.02,LRIEN,14,"I")
"RTN","AHMLDOL2",157,0)
 I LRORD'=LBORD S LRADD="A"
"RTN","AHMLDOL2",158,0)
 Q
"RTN","AHMLDOL2",159,0)
 ;
"RTN","AHMLDOL2",160,0)
REMUID(RSITE,LRODT,LRSND,LRSEND,REMUID) ;STORE CHCS ACCESSION NUMBER
"RTN","AHMLDOL2",161,0)
 S FLAG=0
"RTN","AHMLDOL2",162,0)
 ; Type of test LRSS from Lab Test file (60).  Expect SP, CY, AP, or AU.
"RTN","AHMLDOL2",163,0)
 S LRFILE=60,LRIEN=LRTST_",",LRSS=$$GET1^DIQ(LRFILE,LRIEN,4,"I")
"RTN","AHMLDOL2",164,0)
 S SITE=DUZ(2)
"RTN","AHMLDOL2",165,0)
 I SITE="" S AHOUT="-1^Error: Could not find accession number." Q
"RTN","AHMLDOL2",166,0)
 ; Accession area LRAA taken from Lab Test file (60)
"RTN","AHMLDOL2",167,0)
 I LRAA="" S LRFILE=60.11,LRIEN=SITE_","_LRTST_",",LRAA=$$GET1^DIQ(LRFILE,LRIEN,1,"I")
"RTN","AHMLDOL2",168,0)
 ;GET LRAD, LRAN FROM ACCESSION FILE (68) entry matching Lab Test
"RTN","AHMLDOL2",169,0)
 S LRSEND=0 F  S LRSEND=$O(^LRO(69,LRODT,1,LRSND,2,LRSEND)) Q:LRSEND'?.N  D  Q:FLAG
"RTN","AHMLDOL2",170,0)
 .S LRFILE=69.03,LRIEN=LRSEND_","_LRSND_","_LRODT_","
"RTN","AHMLDOL2",171,0)
 .S LT=$$GET1^DIQ(LRFILE,LRIEN,.01,"I")
"RTN","AHMLDOL2",172,0)
 .Q:LT'=LRTST
"RTN","AHMLDOL2",173,0)
 .S LRAD=$$GET1^DIQ(LRFILE,LRIEN,2,"I")
"RTN","AHMLDOL2",174,0)
 .S LRAN=$$GET1^DIQ(LRFILE,LRIEN,4,"I")
"RTN","AHMLDOL2",175,0)
 .S LRUID=$$LRUID^LRX(LRAA,LRAD,LRAN),FLAG=1
"RTN","AHMLDOL2",176,0)
 ; Update Accession file (68)
"RTN","AHMLDOL2",177,0)
 I $G(LRUID)'="" D
"RTN","AHMLDOL2",178,0)
 .S LRRSITE("RSITE")=RSITE,LRRSITE("RPSITE")=+$$SITE^VASITE
"RTN","AHMLDOL2",179,0)
 .S DR="16////"_$G(LRUID)_";16.1////"_+$G(LRRSITE("RSITE"))_";16.2////"_+$G(LRRSITE("RPSITE"))_";16.4////"_$G(REMUID)
"RTN","AHMLDOL2",180,0)
 .S DA=LRAN,DA(1)=LRAD,DA(2)=LRAA,DIE="^LRO(68,"_DA(2)_",1,"_DA(1)_",1,",DLAYGO=68
"RTN","AHMLDOL2",181,0)
 .D ^DIE
"RTN","AHMLDOL2",182,0)
 .; Update Lab Order file (69)
"RTN","AHMLDOL2",183,0)
 .S DLAYGO=69
"RTN","AHMLDOL2",184,0)
 .S DA=LRSEND,DA(1)=LRSND,DA(2)=LRODT,DIC="^LRO(69,"_DA(2)_",1,"_DA(1)_",2,"
"RTN","AHMLDOL2",185,0)
 .S DIE=DIC,DR="13////"_$G(LRUID)_";14////"_$G(LRRSITE("RSITE"))_";15////"_$G(LRRSITE("RPSITE"))_";17////"_$G(REMUID)
"RTN","AHMLDOL2",186,0)
 .D ^DIE
"RTN","AHMLDOL2",187,0)
 .; Update Lab data file (63)
"RTN","AHMLDOL2",188,0)
 .S LRFILE=69.01,LRIEN=LRSND_","_LRODT_","
"RTN","AHMLDOL2",189,0)
 .S LRDFN=$$GET1^DIQ(LRFILE,LRIEN,.01,"I")
"RTN","AHMLDOL2",190,0)
 .S LRFILE=68.02,LRIEN=LRAN_","_LRAD_","_LRAA_","
"RTN","AHMLDOL2",191,0)
 .S LRIDT=$$GET1^DIQ(LRFILE,LRIEN,13.5,"I")
"RTN","AHMLDOL2",192,0)
 .S LRFILE=63.04
"RTN","AHMLDOL2",193,0)
 .I LRSS="MI" S LRFILE=63.05
"RTN","AHMLDOL2",194,0)
 .S LRIEN=LRIDT_","_LRDFN_","
"RTN","AHMLDOL2",195,0)
 .S LRFDA(LRFILE,LRIEN,.31)=$G(LRSD("RUID"))
"RTN","AHMLDOL2",196,0)
 .S LRFDA(LRFILE,LRIEN,.32)=$G(LRRSITE("RSITE"))
"RTN","AHMLDOL2",197,0)
 .S LRFDA(LRFILE,LRIEN,.33)=$G(LRRSITE("RPSITE"))
"RTN","AHMLDOL2",198,0)
 .S LRFDA(LRFILE,LRIEN,.34)=$G(LRUID)
"RTN","AHMLDOL2",199,0)
 .S LRFDA(LRFILE,LRIEN,.342)=$G(LRSD("LRUID"))
"RTN","AHMLDOL2",200,0)
 .D FILE^DIE("","LRFDA") K LRFDA,LRFILE,LRIEN
"RTN","AHMLDOL2",201,0)
 Q
"RTN","AHMLDOL2",202,0)
 ;
"RTN","AHMLDOL2",203,0)
GETACC(ORDNM,LRODT,LRORD,LRSND,LRTST) ; Get Accession
"RTN","AHMLDOL2",204,0)
 N FLG
"RTN","AHMLDOL2",205,0)
 S (FLG,LRACC)=0
"RTN","AHMLDOL2",206,0)
 S LRFILE=69.01,LRIEN=LRSND_","_LRODT_","
"RTN","AHMLDOL2",207,0)
 I $$GET1^DIQ(LRFILE,LRIEN,.001,"I")'=LRSND S AHOUT(1)="-1^Error: Laborder does not exist." Q LRACC
"RTN","AHMLDOL2",208,0)
 S COMB=$$GET1^DIQ(LRFILE,LRIEN,22,"I")
"RTN","AHMLDOL2",209,0)
 ; If this order was merged into another Lab Order, get new LRSND and LRSEND
"RTN","AHMLDOL2",210,0)
 S COMB=$P(COMB,"/",1)
"RTN","AHMLDOL2",211,0)
 I COMB D GETLRSND(ORDNM,LRODT,COMB,.LRSND,.LRSEND,.FLG)
"RTN","AHMLDOL2",212,0)
 ; Loop over Lab Order entries to match Clinical Order number
"RTN","AHMLDOL2",213,0)
 I '$G(LRSEND) D
"RTN","AHMLDOL2",214,0)
 .S LRFILE=69.03
"RTN","AHMLDOL2",215,0)
 .S LRSEND="",LRSEND=$O(^LRO(69,LRODT,1,LRSND,2,"B",LRTST,LRSEND))
"RTN","AHMLDOL2",216,0)
 .Q:$D(LRSEND)
"RTN","AHMLDOL2",217,0)
 .S LRSEND=0 F  S LRSEND=$O(^LRO(69,LRODT,1,LRSND,2,LRSEND)) Q:'LRSEND  D  Q:FLG
"RTN","AHMLDOL2",218,0)
 ..S LRIEN=LRSEND_","_LRSND_","_LRODT_","
"RTN","AHMLDOL2",219,0)
 ..S ORN=$$GET1^DIQ(LRFILE,LRIEN,6,"I") I ORN=ORDNM S FLG=1 Q
"RTN","AHMLDOL2",220,0)
 I COMB="" S FLG=1
"RTN","AHMLDOL2",221,0)
 I 'FLG S AHOUT(1)="-1^Error: Lab test could not be found for this order." Q
"RTN","AHMLDOL2",222,0)
 ; Accession area LRAA taken from matching entry if test has been accessioned
"RTN","AHMLDOL2",223,0)
 S LRFILE=69.03,LRIEN=LRSEND_","_LRSND_","_LRODT_","
"RTN","AHMLDOL2",224,0)
 S LRURG=$$GET1^DIQ(LRFILE,LRIEN,1,"I")
"RTN","AHMLDOL2",225,0)
 S LRAD=$$GET1^DIQ(LRFILE,LRIEN,2,"I")
"RTN","AHMLDOL2",226,0)
 S LRAN=$$GET1^DIQ(LRFILE,LRIEN,4,"I")
"RTN","AHMLDOL2",227,0)
 S LRAA=$$GET1^DIQ(LRFILE,LRIEN,3,"I")
"RTN","AHMLDOL2",228,0)
 I LRAA="" D
"RTN","AHMLDOL2",229,0)
 .S SITE=DUZ(2)
"RTN","AHMLDOL2",230,0)
 .I SITE="" S AHOUT="-1^Error: Could not find accession number." Q
"RTN","AHMLDOL2",231,0)
 .; If  Accession Area not in File 69 entry, take from File 60
"RTN","AHMLDOL2",232,0)
 .S LRFILE=60.11,LRIEN=SITE_","_LRTST_",",LRAA=$$GET1^DIQ(LRFILE,LRIEN,1,"I")
"RTN","AHMLDOL2",233,0)
 ; Get Accession date LRAD from File 69 entry, subnode 0 or 2
"RTN","AHMLDOL2",234,0)
 I LRAD="" D
"RTN","AHMLDOL2",235,0)
 .S LRFILE=69.03,LRIEN=LRSEND_","_LRSND_","_LRODT_",",LRAD=$$GET1^DIQ(LRFILE,LRIEN,2,"I")
"RTN","AHMLDOL2",236,0)
 ; Get Accession number LRAN
"RTN","AHMLDOL2",237,0)
 ; First try from File 69 entry, subnode 0
"RTN","AHMLDOL2",238,0)
 I LRAD="" Q LRACC
"RTN","AHMLDOL2",239,0)
 I LRAN="" D
"RTN","AHMLDOL2",240,0)
 .S LRORD=$P(LRDATA,";"),LRFILE=68.02,LRIEN=LRAN_","_LRAD_","_LRAA_","
"RTN","AHMLDOL2",241,0)
 . ; Second try:  Search File 68 for entry matching Lab Order
"RTN","AHMLDOL2",242,0)
 .S LRAN=0 F  S LRAN=$O(^LRO(68,LRAA,1,LRAD,1,LRAN)) Q:LRAN'?.N  D  Q:$P(LRACC," ",3)>0
"RTN","AHMLDOL2",243,0)
 ..S LRORN=$$GET1^DIQ(LRFILE,LRIEN,14,"I") I LRORN=LRORD S LRACC=$$GET1^DIQ(LRFILE,LRIEN,15,"I")
"RTN","AHMLDOL2",244,0)
 I $P(LRACC," ",3)>0 Q LRACC
"RTN","AHMLDOL2",245,0)
 ; Get Accession from Accession file (68)
"RTN","AHMLDOL2",246,0)
 S LRFILE=68.02,LRIEN=LRAN_","_LRAD_","_LRAA_","
"RTN","AHMLDOL2",247,0)
 S LRACC=$$GET1^DIQ(LRFILE,LRIEN,15,"I") I LRACC="" S LRACC=0
"RTN","AHMLDOL2",248,0)
 Q LRACC
"RTN","AHMLDOL2",249,0)
 ;
"RTN","AHMLDOL2",250,0)
GETLRSND(ORDNM,LRODT,COMB,LRSND,LRSEND,FLG) ;
"RTN","AHMLDOL2",251,0)
 S LRSND="" F  S LRSND=$O(^LRO(69,"C",+COMB,LRODT,LRSND)) Q:LRSND=""  D  Q:FLG
"RTN","AHMLDOL2",252,0)
 .S LRFILE=69.01,LRIEN=LRSND_","_LRODT_",",COMB=$$GET1^DIQ(LRFILE,LRIEN,22,"I")
"RTN","AHMLDOL2",253,0)
 .Q:COMB
"RTN","AHMLDOL2",254,0)
 .S LRSEND=0 F  S LRSEND=$O(^LRO(69,LRODT,1,LRSND,2,LRSEND)) Q:LRSEND=""  D  Q:FLG
"RTN","AHMLDOL2",255,0)
 ..S LRFILE=69.03,LRIEN=LRSEND_","_LRSND_","_LRODT_",",ORN=$$GET1^DIQ(LRFILE,LRIEN,6,"I")
"RTN","AHMLDOL2",256,0)
 ..I ORN=ORDNM S FLG=1
"RTN","AHMLDOL2",257,0)
 Q
"RTN","AHMLDOL2",258,0)
 ;
"RTN","AHMLDOL2",259,0)
Q15 ;from LROE1
"RTN","AHMLDOL2",260,0)
 N X,Y
"RTN","AHMLDOL2",261,0)
 S LRFILE=69.01,LRIEN=LRSND_","_LRODT_","
"RTN","AHMLDOL2",262,0)
 I '$$GET1^DIQ(LRFILE,LRIEN,.01,"I") Q
"RTN","AHMLDOL2",263,0)
 D LRSPEC^LROE1
"RTN","AHMLDOL2",264,0)
 I M9>1 D
"RTN","AHMLDOL2",265,0)
 .D LRSPEC^LROE1
"RTN","AHMLDOL2",266,0)
 .S LRFILE=61,S1=$$GET1^DIQ(LRFILE,+LRSPEC,.01,"I")
"RTN","AHMLDOL2",267,0)
 .S LRFILE=62,S2=$$GET1^DIQ(LRFILE,LRSAMP,.01,"I"),S4=$$GET1^DIQ(LRFILE,LRSAMP,3,"I")
"RTN","AHMLDOL2",268,0)
 .S S3=S1_$S(S1'=S2:"  "_S2,1:"")
"RTN","AHMLDOL2",269,0)
 ; LRDPF is the Parent file that the .03 field of the Lab data file (#63) is a pointer to
"RTN","AHMLDOL2",270,0)
 S LRFILE=69.01,LRIEN=LRSND_","_LRODT_",",LRDFN=$$GET1^DIQ(LRFILE,LRIEN,.01,"I")
"RTN","AHMLDOL2",271,0)
 S LRFILE=63,LRDPF=$$GET1^DIQ(LRFILE,LRDFN,.02,"I")
"RTN","AHMLDOL2",272,0)
 S LRFILE=69.01,LRIEN=LRSND_","_LRODT_","
"RTN","AHMLDOL2",273,0)
 I '$$GET1^DIQ(LRFILE,LRIEN,10,"I") S LRSTATUS="C",DA=LRODT I '$D(LRSND) D P15^LROE1 Q:LRCDT<1
"RTN","AHMLDOL2",274,0)
 ; Checks to see if collection method is a scheduled Lab Collect
"RTN","AHMLDOL2",275,0)
 ; LRLLOC = Report Routing Location, LROLLOC = Ordering Location
"RTN","AHMLDOL2",276,0)
 I $D(LRSND),$$GET1^DIQ(LRFILE,LRIEN,4,"I")="LC",$$GET1^DIQ(LRFILE,LRIEN,10,"I") D
"RTN","AHMLDOL2",277,0)
 .S LRLLOC=$$GET1^DIQ(LRFILE,LRIEN,8,"I"),LROLLOC=$$GET1^DIQ(LRFILE,LRIEN,23,"I"),LRNT=$S($D(LRNT):LRNT,$D(LRTIM):LRTIM,$D(LRCDT):+LRCDT,1:"") D P15^LRPHITEM G Q16
"RTN","AHMLDOL2",278,0)
 ; If COMB is defined, this order was combined with other tests on a different Lab Order entry in file (#69)
"RTN","AHMLDOL2",279,0)
 ; Add parameter to the GTSPACC call and pass DMIS number
"RTN","AHMLDOL2",280,0)
 I $D(LRSND) D
"RTN","AHMLDOL2",281,0)
 .N COMB
"RTN","AHMLDOL2",282,0)
 .S COMB=$$GET1^DIQ(LRFILE,LRIEN,22,"I")
"RTN","AHMLDOL2",283,0)
 .S LRFDA(LRFILE,LRIEN,10)=$G(LRCDT)
"RTN","AHMLDOL2",284,0)
 .S LRFDA(LRFILE,LRIEN,11)=$G(LRUN)
"RTN","AHMLDOL2",285,0)
 .S LRFDA(LRFILE,LRIEN,12)=$G(ORNP)
"RTN","AHMLDOL2",286,0)
 .S LRFDA(LRFILE,LRIEN,13)=$G(LRSTATUS)
"RTN","AHMLDOL2",287,0)
 .S LRFDA(LRFILE,LRIEN,15)=""
"RTN","AHMLDOL2",288,0)
 .S LRFDA(LRFILE,LRIEN,20)=$G(LBARR)
"RTN","AHMLDOL2",289,0)
 .S LRFDA(LRFILE,LRIEN,22)=$G(COMB)
"RTN","AHMLDOL2",290,0)
 .S LRFDA(LRFILE,LRIEN,25)=$G(DUZ(2))
"RTN","AHMLDOL2",291,0)
 .D FILE^DIE("","LRFDA")
"RTN","AHMLDOL2",292,0)
 .S:LRSTATUS="C" ^LRO(69,"AA",+$$GET1^DIQ(LRFILE,LRIEN,9.5,"I"),LRODT_"|"_LRSND)=""
"RTN","AHMLDOL2",293,0)
 ;
"RTN","AHMLDOL2",294,0)
Q16 ;
"RTN","AHMLDOL2",295,0)
 N J
"RTN","AHMLDOL2",296,0)
 ; Checks to see if LRDFN matches the LRDFN found when going through "C" cross reference in file (#69)
"RTN","AHMLDOL2",297,0)
 S J=0 D CHECK^LROW2 I J D BAD^LROW2
"RTN","AHMLDOL2",298,0)
 ;
"RTN","AHMLDOL2",299,0)
Q16A ;
"RTN","AHMLDOL2",300,0)
 I $D(LRLONG),$D(LRSND) S LRSN=LRSND,^TMP("LROE",$J,"LRORD")=LRORD_U_LRODT_U_LRTIM_U_PNM_U_SSN
"RTN","AHMLDOL2",301,0)
 K DR S LRTSTS=0
"RTN","AHMLDOL2",302,0)
 S LRSND=0 F  S LRSND=$O(LRSN(LRSND)) Q:'LRSND  D Q17
"RTN","AHMLDOL2",303,0)
 ; I LRLONG, this will set the performing lab
"RTN","AHMLDOL2",304,0)
 I $D(LRLONG),$D(LRSND) S LRSN=LRSND D LROE^LRFAST S XX=^TMP("LROE",$J,"LRORD"),LRORD=+XX,LRODT=$P(XX,D1,2),LRTIM=$P(XX,D1,3),LRLONG="",PNM=$P(XX,D1,4),SSN=$P(XX,D1,5)
"RTN","AHMLDOL2",305,0)
 Q
"RTN","AHMLDOL2",306,0)
 ;
"RTN","AHMLDOL2",307,0)
Q17 ;
"RTN","AHMLDOL2",308,0)
 N II,JJ
"RTN","AHMLDOL2",309,0)
 ; Checks for Ward comments on specimen and will never be found on orders coming from CHCS.
"RTN","AHMLDOL2",310,0)
 ;S II=$O(^LRO(69,LRODT,1,LRSND,6,0)),JJ=$O(^(1)) S:'$D(IOM) IOM=80 K LRSPCDSC S:JJ LRSPCDSC=^(JJ,0) S:II DA=LRSND,DA(1)=LRODT,DR=6,DIC="^LRO(69,"_LRODT_",1," D EN^DIQ:II D LRSPEC^LROE1
"RTN","AHMLDOL2",311,0)
 ; Accessions the Lab order
"RTN","AHMLDOL2",312,0)
 D OLD(.LRUID) K ^TMP("LR",$J,"TMP")
"RTN","AHMLDOL2",313,0)
 S LRFILE=69.01,LRIEN=LRSND_","_LRODT_","
"RTN","AHMLDOL2",314,0)
 ; Sets the Lab order collection status to "collected"
"RTN","AHMLDOL2",315,0)
 S LRFDA(1,LRFILE,LRIEN,13)="C"
"RTN","AHMLDOL2",316,0)
 S LRFDA(1,LRFILE,LRIEN,12)=$G(ORNP)
"RTN","AHMLDOL2",317,0)
 ; Sets the site number in piece 8 of the Lab order file (#69)
"RTN","AHMLDOL2",318,0)
 S LRFDA(1,LRFILE,LRIEN,25)=+$$SITE^VASITE
"RTN","AHMLDOL2",319,0)
 D FILE^DIE("","LRFDA(1)")
"RTN","AHMLDOL2",320,0)
 ; Gets the Lab order Number
"RTN","AHMLDOL2",321,0)
 S ORNUM=$$GET1^DIQ(LRFILE,LRIEN,9.5,"I")
"RTN","AHMLDOL2",322,0)
 ; Builds the "AA" cross reference and sets it to the Urgency of the test ordered
"RTN","AHMLDOL2",323,0)
 S ^LRO(69,"AA",+ORNUM,LRODT_"|"_LRSND)=$G(LRURG)
"RTN","AHMLDOL2",324,0)
 Q
"RTN","AHMLDOL2",325,0)
 ;
"RTN","AHMLDOL2",326,0)
LROE2 ;
"RTN","AHMLDOL2",327,0)
 ; Initialize Collection info in Node 1 under Order date and accession send number in File 69
"RTN","AHMLDOL2",328,0)
 S LRFILE=69.01,LRIEN=DA_","_LRODT_","
"RTN","AHMLDOL2",329,0)
 I '$$GET1^DIQ(LRFILE,LRIEN,.01,"I") S ^LRO(69,LRODT,1,DA,1)="^^^^^^^^^^^^^^^^"
"RTN","AHMLDOL2",330,0)
 K LRSND
"RTN","AHMLDOL2",331,0)
 S (LRSND,LRSND(DA))=+DA
"RTN","AHMLDOL2",332,0)
 ; LRDFN points into Lab Results file (63).
"RTN","AHMLDOL2",333,0)
 ; LRDPF identifies parent file; DFN points to patient in this file.
"RTN","AHMLDOL2",334,0)
 S M9=$G(M9)+1
"RTN","AHMLDOL2",335,0)
 S LRIEN=LRSND_","_LRODT_",",LRDFN=$$GET1^DIQ(LRFILE,LRIEN,.01,"I")
"RTN","AHMLDOL2",336,0)
 S LRFILE=63,LRIEN=LRDFN_","
"RTN","AHMLDOL2",337,0)
 S LRDPF=$$GET1^DIQ(LRFILE,LRIEN,.02,"I"),DFN=$$GET1^DIQ(LRFILE,LRIEN,.03,"I")
"RTN","AHMLDOL2",338,0)
 S LRSVSN=LRSND D ORDER S LRSND=LRSVSN
"RTN","AHMLDOL2",339,0)
 Q
"RTN","AHMLDOL2",340,0)
 ;
"RTN","AHMLDOL2",341,0)
ORDER ;call with LRSND, from L4ROE, LROE1, LRORD1, LROW2, LROR1
"RTN","AHMLDOL2",342,0)
 N XX
"RTN","AHMLDOL2",343,0)
 K DD,LRTT S LREND=0
"RTN","AHMLDOL2",344,0)
 S LRFILE=69.01,LRIEN=LRSND_","_LRODT_","
"RTN","AHMLDOL2",345,0)
 S XX=$$GET1^DIQ(LRFILE,LRIEN,3,"I")
"RTN","AHMLDOL2",346,0)
 S LRFILE=62,LRIEN=XX,XX=$$GET1^DIQ(LRFILE,LRIEN,.01,"I") I XX="" S X4=""
"RTN","AHMLDOL2",347,0)
 S LRSEND=1,LRFILE=69.02,LRIEN=LRSEND_","_LRSND_","_LRODT_","
"RTN","AHMLDOL2",348,0)
 S XX=$$GET1^DIQ(LRFILE,LRIEN,.01,"I") I XX="" S X4=""
"RTN","AHMLDOL2",349,0)
 I XX'="" S LRFILE=61,LRIEN=XX,X4=$$GET1^DIQ(LRFILE,LRIEN,.01,"I")
"RTN","AHMLDOL2",350,0)
 S LRACN=0 F  S LRACN=$O(^LRO(69,LRODT,1,LRSND,2,LRACN)) Q:LRACN<1!($G(LREND))  I $D(^(LRACN,0))#2 S LRACN0=^(0)
"RTN","AHMLDOL2",351,0)
 Q
"RTN","AHMLDOL2",352,0)
 ;
"RTN","AHMLDOL2",353,0)
GTSPACC(LRTEST,ST,DMIS) ;
"RTN","AHMLDOL2",354,0)
 ;Add third parameter to GTSPACC line tag for DMIS number passed in.
"RTN","AHMLDOL2",355,0)
 S ST=0,(AREA,TDMIS,DIV,ENT)=""
"RTN","AHMLDOL2",356,0)
 I '$D(^LAB(60,LRTEST,8)) Q
"RTN","AHMLDOL2",357,0)
 S DIV=0 F  S DIV=$O(^LAB(60,LRTEST,8,DIV)) Q:DIV=""  D
"RTN","AHMLDOL2",358,0)
 .I DIV="" Q
"RTN","AHMLDOL2",359,0)
 .S ENT=DIV_";DIC(4,"
"RTN","AHMLDOL2",360,0)
 .S TDMIS=$$GET^XPAR(ENT,"JV SPECIAL ACCESSION AREA",1,"E")
"RTN","AHMLDOL2",361,0)
 .I TDMIS="" Q
"RTN","AHMLDOL2",362,0)
 .I DMIS="" Q
"RTN","AHMLDOL2",363,0)
 .I DMIS'=TDMIS Q
"RTN","AHMLDOL2",364,0)
 .S AREA=$P($G(^LAB(60,LRTEST,8,DIV,0)),D1,2)
"RTN","AHMLDOL2",365,0)
 .I AREA="" Q
"RTN","AHMLDOL2",366,0)
 .I '$D(^LRO(68,AREA)) Q
"RTN","AHMLDOL2",367,0)
 .S ST=DIV
"RTN","AHMLDOL2",368,0)
 Q
"RTN","AHMLDOL2",369,0)
 ;
"RTN","AHMLDOL2",370,0)
OLD(LRUID) ;
"RTN","AHMLDOL2",371,0)
 I LRNT="" D
"RTN","AHMLDOL2",372,0)
 .N LRNT
"RTN","AHMLDOL2",373,0)
 .S DT=$$DT^XLFDT()
"RTN","AHMLDOL2",374,0)
 .D NOW^%DTC
"RTN","AHMLDOL2",375,0)
 .S LRNT=%
"RTN","AHMLDOL2",376,0)
 I $P(LRPARAM,U,4),'$D(LRNOLABL),'$D(LRTJ) D ^LRLABLIO
"RTN","AHMLDOL2",377,0)
 D EN^AHMLDOL4(.LRUID,LRTST)
"RTN","AHMLDOL2",378,0)
 Q
"RTN","AHMLDOL2",379,0)
 ;
"RTN","AHMLDOL2",380,0)
RSORST(LRORD) ;
"RTN","AHMLDOL2",381,0)
 N JVSN,JVSND,FLG
"RTN","AHMLDOL2",382,0)
 S JVSN="",(FLG,JVSND)=0
"RTN","AHMLDOL2",383,0)
 S JVSN=$O(^LRO(69,"C",LRORD,LRODT,JVSN)) Q:JVSN=""  D
"RTN","AHMLDOL2",384,0)
 .S JVSND=0
"RTN","AHMLDOL2",385,0)
 .F  S JVSND=$O(^LRO(69,LRODT,1,JVSN,2,JVSND)) Q:JVSND<1  D
"RTN","AHMLDOL2",386,0)
 ..S JVX=^LRO(69,LRODT,1,JVSN,2,JVSND,0)
"RTN","AHMLDOL2",387,0)
 ..I $P(JVX,U,4)="" D  Q:FLG
"RTN","AHMLDOL2",388,0)
 ...;CHECK IF THIS TEST IS A PANEL TEST
"RTN","AHMLDOL2",389,0)
 ...S JVT=$P(JVX,U)
"RTN","AHMLDOL2",390,0)
 ...I $P($G(^LAB(60,JVT,2,0)),"^",3)>1 S FLG=1
"RTN","AHMLDOL2",391,0)
 ..I $P(JVX,U,4)'="" Q
"RTN","AHMLDOL2",392,0)
 ..S JVORN=$P(JVX,U,7)
"RTN","AHMLDOL2",393,0)
 ..I $P(^OR(100,JVORN,3),U,3)=6 S $P(^OR(100,JVORN,3),U,3)=5
"RTN","AHMLDOL2",394,0)
 K JVORN,JVSN,JVSND,JVX
"RTN","AHMLDOL2",395,0)
 Q
"RTN","AHMLDOL2",396,0)
 ;
"RTN","AHMLDOL2",397,0)
END ;
"RTN","AHMLDOL2",398,0)
 K AREA,CNT,COLST,D,D1,D2,DD,DFN,DIC,DIE,DIV,DMIS,DLAYGO,DIR,DIRUT,ENT,FLAG,GOT,HLOBX,II,INST,JJ,LRACC,LRACN,LRACN0,LRAD,ARIV
"RTN","AHMLDOL2",399,0)
 K LRAN,LRCDT,LRDA1,LRDFN,LRDPF,LRDT,LREND,LRLABLIO,LRLLOC,LRNT,LRCNT,LRIDT,LRNT,LRORN,LROD0,%,LRNOLABL,LRTJ
"RTN","AHMLDOL2",400,0)
 K LROD1,LROD3,LROESTAT,LRORU3,LRPARAM,LRRSITE,LRSD,LRSND,LRSEND,LRSPED,LRSS,LRSTATUS,LRODT0,LROLLOC
"RTN","AHMLDOL2",401,0)
 K DMIS,LRSPEC,LRSVSN,LRTIM,LRTM7,LRTS,LRTST,LRTSTS,LRUID,LRUN,LRURG,LRX,LRZX,LT,M9,MSHSEG,ORCSEG,ORN,ORNUM
"RTN","AHMLDOL2",402,0)
 K ORDNM,P2,P3,PIDSEG,PNM,RSITE,S1,S2,S3,S4,SITE,ST,STE,SUB,SSN,TDMIS,TMPDUZ,X4,ZTDESC,ZTDTH,ZTIO,ZTRTN,ZTSAVE
"RTN","AHMLDOL2",403,0)
 K DCORIG,IFN,ISNEWORD,JVTST,ORL,ORNP,REAS,JVT,JVCDT,PNLTST,UID,ORNPNME
"RTN","AHMLDOL2",404,0)
 K ACCN,COM,ORDATA,SIEN,TEST,TST,FOUND,JVODT,LBTECH,LRSAMP,JVCNT,LBARR
"RTN","AHMLDOL3")
0^4^B52077647
"RTN","AHMLDOL3",1,0)
AHMLDOL3 ;LEIDOS/TCK- Remote Order ; 2/9/17 1:39pm
"RTN","AHMLDOL3",2,0)
 ;;1.0;Orders Portability;**1**;March 1, 2010;Build 53
"RTN","AHMLDOL3",3,0)
 Q
"RTN","AHMLDOL3",4,0)
ADD ;
"RTN","AHMLDOL3",5,0)
 Q
"RTN","AHMLDOL3",6,0)
 ;
"RTN","AHMLDOL3",7,0)
 ;
"RTN","AHMLDOL3",8,0)
EN(CHUID,JVTST,JVAA,JVAD,JVAN,ORNM) ;
"RTN","AHMLDOL3",9,0)
 N LRACC,LRADL,LRTSAD,LRNATURE,LRORDTYP
"RTN","AHMLDOL3",10,0)
 K LRPARAM D EN^LRPARAM
"RTN","AHMLDOL3",11,0)
 I '$D(LRPARAM) D END Q
"RTN","AHMLDOL3",12,0)
 ; Initialize flag for test added for auto download
"RTN","AHMLDOL3",13,0)
 S LRADL=0
"RTN","AHMLDOL3",14,0)
 ; If test added then check for automatic downloading
"RTN","AHMLDOL3",15,0)
 I LRADL D EN^LA7ADL($P($G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3),0),"^")) S LRADL=0
"RTN","AHMLDOL3",16,0)
 S (LRAA,LRAD,LRAN,LRSS)=""
"RTN","AHMLDOL3",17,0)
 S LRACC=1
"RTN","AHMLDOL3",18,0)
 I '$D(^LRO(68,"C",CHUID)) S AHOUT(1)="-1^Error: No UID in HL7 MESSAGE" Q
"RTN","AHMLDOL3",19,0)
 ;Populate LRAA,LRAD and LRAN with data from merge-to accession.
"RTN","AHMLDOL3",20,0)
 K LRACC,LRTSAD,LRNATURE
"RTN","AHMLDOL3",21,0)
 S LRAA=$O(^LRO(68,"C",CHUID,LRAA)),JVAA=LRAA
"RTN","AHMLDOL3",22,0)
 S LRSS=$$GET1^DIQ(68,LRAA,.02,"I")
"RTN","AHMLDOL3",23,0)
 S LRAD=$O(^LRO(68,"C",CHUID,LRAA,LRAD)),JVAD=LRAD
"RTN","AHMLDOL3",24,0)
 S LRAN=$O(^LRO(68,"C",CHUID,LRAA,LRAD,LRAN)),JVAN=LRAN
"RTN","AHMLDOL3",25,0)
 I LRAN<1 D END Q
"RTN","AHMLDOL3",26,0)
 ;
"RTN","AHMLDOL3",27,0)
 S XX=^LRO(68,LRAA,1,LRAD,1,LRAN,0),LRDFN=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,XX),U),LRAODT=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,XX),U,3)
"RTN","AHMLDOL3",28,0)
 S LRODT=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,XX),U,4),LRSN=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,XX),U,5)
"RTN","AHMLDOL3",29,0)
 S LRDPF=$P(^LR(LRDFN,0),U,2),DFN=$P(^LR(LRDFN,0),U,3) D PT^LRX
"RTN","AHMLDOL3",30,0)
 S LRNATURE="4^SERVICE CORRECTION^99ORN",LRDPF=2
"RTN","AHMLDOL3",31,0)
 ;
"RTN","AHMLDOL3",32,0)
 S II=0
"RTN","AHMLDOL3",33,0)
 F  S II=$O(^LRO(68,LRAA,1,LRAD,1,LRAN,4,II)) Q:II<1  W !,?5,$$GET1^DIQ(60,II,1,"E") S LRTSAD(1,II)=""
"RTN","AHMLDOL3",34,0)
 ;
"RTN","AHMLDOL3",35,0)
LRTSP ;
"RTN","AHMLDOL3",36,0)
 S II="",II=$O(LRTSAD(1,II))
"RTN","AHMLDOL3",37,0)
 S LRTSP=II
"RTN","AHMLDOL3",38,0)
 ;
"RTN","AHMLDOL3",39,0)
ADDTST ;
"RTN","AHMLDOL3",40,0)
 S (LRTS,II)=JVTST I $D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,II,0)) W !,"The accession already has this test."
"RTN","AHMLDOL3",41,0)
 S LRTSUB=1 D EXPLD^LRTSTJM1 I $D(LRTSAD(1,LRTS)) W !,"The accession already has this test."
"RTN","AHMLDOL3",42,0)
 S LRFLG=1 S (LRURG,YY)=6
"RTN","AHMLDOL3",43,0)
 I LRURG'="" G SETTST
"RTN","AHMLDOL3",44,0)
 ;
"RTN","AHMLDOL3",45,0)
 ;
"RTN","AHMLDOL3",46,0)
SETTST ;
"RTN","AHMLDOL3",47,0)
 ; LRORDTYP=1(add)/2(reflex)^file #64.061 ien for code^if reflex parent test^if reflex parent NLT^
"RTN","AHMLDOL3",48,0)
 S LRORDTYP="1^432"
"RTN","AHMLDOL3",49,0)
 I $P(LRORDTYP,"^")=2 S $P(LRORDTYP,"^",3)=LRTSP,$P(LRORDTYP,"^",4)=$$NLT^LRVER1(LRTSP)
"RTN","AHMLDOL3",50,0)
 I +LRDPF=2,$G(LRSS)'="BB",'$$CHKINP^LRBEBA4(LRDFN,LRODT) S LRBERF=$S(LRORDTYP>0:LRORDTYP-1,1:-1) ;CIDC
"RTN","AHMLDOL3",51,0)
 D EN1
"RTN","AHMLDOL3",52,0)
 Q
"RTN","AHMLDOL3",53,0)
 ;
"RTN","AHMLDOL3",54,0)
EN1 ;
"RTN","AHMLDOL3",55,0)
 S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTS,0)=LRTS_"^"_LRURG,$P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,LRTS,0),U,9)=$G(LRTSP)
"RTN","AHMLDOL3",56,0)
 S ^LRO(68,LRAA,1,LRAD,1,LRAN,4,"B",LRTS,LRTS)="",$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),U,4)=""
"RTN","AHMLDOL3",57,0)
 S $P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0),U,3)=LRTS,$P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0),U,4)=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,4,0),U,4)+1
"RTN","AHMLDOL3",58,0)
 I $P(LRPARAM,U,14),$P(^LRO(68,LRAA,0),U,16) D CAP^LRWLST12
"RTN","AHMLDOL3",59,0)
 S LRACD=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),"^",3),LRTSAD(1,LRTS)=""
"RTN","AHMLDOL3",60,0)
 I LRACD,LRACD'=LRAD D
"RTN","AHMLDOL3",61,0)
 .S ^LRO(68,LRAA,1,LRACD,1,LRAN,4,LRTS,0)=LRTS_"^"_LRURG,$P(^LRO(68,LRAA,1,LRACD,1,LRAN,4,LRTS,0),U,9)=+LRTS
"RTN","AHMLDOL3",62,0)
 .S ^LRO(68,LRAA,1,LRACD,1,LRAN,4,"B",LRTS,LRTS)="",$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),"^",4)=""
"RTN","AHMLDOL3",63,0)
 .I $P(LRPARAM,U,14),$P(^LRO(68,LRAA,0),U,16) D CAP^LRWLST12
"RTN","AHMLDOL3",64,0)
 D ORUT^LRTSTJM1(LRDFN,LRAA,LRAD,LRAN,LRTS,LRORDTYP,LRURG,LRODT,LRSN)
"RTN","AHMLDOL3",65,0)
 S LRADL=1
"RTN","AHMLDOL3",66,0)
 S DIC="^LRO(69,"_LRODT_",1,"_LRSN_",2,",DA(2)=LRODT,DA(1)=LRSN
"RTN","AHMLDOL3",67,0)
 S DIC(0)="LOX",DLAYGO=69,XX=$P(^LAB(60,LRTS,0),"^")
"RTN","AHMLDOL3",68,0)
 D ^DIC
"RTN","AHMLDOL3",69,0)
 ;
"RTN","AHMLDOL3",70,0)
FILE69 ;
"RTN","AHMLDOL3",71,0)
 I Y>0 D
"RTN","AHMLDOL3",72,0)
 .N LRDIE,LRFDA,LRIENS,II
"RTN","AHMLDOL3",73,0)
 .S LRXDA=+Y,LRIENS=LRXDA_","_LRSN_","_LRODT_","
"RTN","AHMLDOL3",74,0)
 .S LRXDA(3)=$G(^LRO(68,LRAA,1,LRAD,1,LRAN,.3))
"RTN","AHMLDOL3",75,0)
 .S LRFDA(1,69.03,LRIENS,1)=$G(LRURG)
"RTN","AHMLDOL3",76,0)
 .S LRFDA(1,69.03,LRIENS,2)=$G(LRAODT)
"RTN","AHMLDOL3",77,0)
 .S LRFDA(1,69.03,LRIENS,3)=$G(LRAA)
"RTN","AHMLDOL3",78,0)
 .S LRFDA(1,69.03,LRIENS,4)=$G(LRAN)
"RTN","AHMLDOL3",79,0)
 .S LRFDA(1,69.03,LRIENS,8)="IP"
"RTN","AHMLDOL3",80,0)
 .S LRFDA(1,69.03,LRIENS,9)="L"
"RTN","AHMLDOL3",81,0)
 .I $P(LRXDA(3),"^")'="" D
"RTN","AHMLDOL3",82,0)
 ..S LRFDA(1,69.03,LRIENS,13)=$P(LRXDA(3),"^")
"RTN","AHMLDOL3",83,0)
 ..I $P(LRXDA(3),"^",2) F II=2:1:5 S LRFDA(1,69.03,LRIENS,II+12)=$P(LRXDA(3),"^",II)
"RTN","AHMLDOL3",84,0)
 .D FILE^DIE("","LRFDA(1)","LRDIE(1)")
"RTN","AHMLDOL3",85,0)
 .D:$G(LRTSP)
"RTN","AHMLDOL3",86,0)
 ..S LRBETN=$O(^LRO(69,LRODT,1,LRSN,2,"B",LRTSP,""))
"RTN","AHMLDOL3",87,0)
 ..I LRBETN D DADD^LRBEBA31(LRODT,LRSN,LRBETN,LRXDA,LRTS,$G(LRBERF))
"RTN","AHMLDOL3",88,0)
 .K LRBETN,LRBERF
"RTN","AHMLDOL3",89,0)
 ;
"RTN","AHMLDOL3",90,0)
 I $G(LRXDA) D
"RTN","AHMLDOL3",91,0)
 .N XX
"RTN","AHMLDOL3",92,0)
 .S XX=1+$S($D(^LRO(69,LRODT,1,LRSN,2,LRXDA,1,0)):$P(^LRO(69,LRODT,1,LRSN,2,LRXDA,1,0),"^",3),1:0),^LRO(69,LRODT,1,LRSN,2,LRXDA,1,0)="^^"_XX_"^"_DT,^LRO(69,LRODT,1,LRSN,2,LRXDA,1,XX,0)=" Added by "_$G(DUZ)_" on "_$$HTE^XLFDT($H,"M")
"RTN","AHMLDOL3",93,0)
 .S ^LRO(69,"AA",+$G(^LRO(69,LRODT,1,LRSN,.1)),LRODT_"|"_LRSN)=""
"RTN","AHMLDOL3",94,0)
 ;
"RTN","AHMLDOL3",95,0)
 ;
"RTN","AHMLDOL3",96,0)
SETOR ;
"RTN","AHMLDOL3",97,0)
 N LTS S LTS(LRTS)=""
"RTN","AHMLDOL3",98,0)
 D NEW^LR7OB1(LRODT,LRSN,"SN",$G(LRNATURE),.LTS,6)
"RTN","AHMLDOL3",99,0)
 K DLAYGO,DA,DIC,DIE,DR,LRBERF,LRBEFN,LRBEX
"RTN","AHMLDOL3",100,0)
 Q
"RTN","AHMLDOL3",101,0)
 ;
"RTN","AHMLDOL3",102,0)
END ;
"RTN","AHMLDOL3",103,0)
 I $G(LRAA),$G(LRAD),$G(LRAN) L -^LRO(68,LRAA,1,LRAD,1,LRAN)
"RTN","AHMLDOL3",104,0)
 K %,AGE,DD,DFN,DIC,DIE,DO,DOB,DR,II,LRAA,LRAD,LRACD,LRAN,LRCCOM,LRDFN,LRDPF,LREND,LRIDT,LRODT,LRSN,LRSS,LRTNM,LRTS,LRWRD,PNM,SEX,SSN,XX,YY,LRUSNM
"RTN","AHMLDOL3",105,0)
 K %DT,%H,%X,%Y,DA,JJ,LRBED,LRCS,LRCSS,LRDTM,LRDTO,LRGVP,LRIDENT,LRIOZERO,LRLLOC,LRLWC,LRNOP,LRONE,LRORD,LRORDTIM,LROWLE,LRPR,LRTST,LRTP,LRTSN,LRUR,LRUSNM,LRWDT1,LRWL1,LRXD,POP
"RTN","AHMLDOL3",106,0)
 K LRTSAD,LRTSUB,LRDATE,D0,D1,DN,LRAODT,LRFLG,LRRB,LRTREA,LRTSP,LUID
"RTN","AHMLDOL3",107,0)
 K LRURG,VA,LRX,LRBERF,LRBETN,AHOUT,YY,JVIEN
"RTN","AHMLDOL3",108,0)
 Q
"RTN","AHMLDOL3",109,0)
 ;
"RTN","AHMLDOL3",110,0)
CHK1 ;
"RTN","AHMLDOL3",111,0)
 I $D(^LRO(68,LRWL1,1,LRWDT1,1,LRAN,3)),$P(^LRO(68,LRWL1,1,LRWDT1,1,LRAN,3),U,4) S LREND=1 Q
"RTN","AHMLDOL3",112,0)
 I $D(^LRO(69,LRODT,1,LRSN,3)),$P(^LRO(69,LRODT,1,LRSN,3),U,2) S LREND=1 Q
"RTN","AHMLDOL3",113,0)
 S LRTST=0 F  S LRTST=$O(^LRO(68,LRWL1,1,LRWDT1,1,LRAN,4,LRTST)) Q:LRTST<1  I $D(^LRO(68,LRWL1,1,LRWDT1,1,LRAN,4,LRTST,0)),$P(^LRO(68,LRWL1,1,LRWDT1,1,LRAN,4,LRTST,0),U,5) S LREND=1 Q
"RTN","AHMLDOL3",114,0)
 Q
"RTN","AHMLDOL3",115,0)
 ;
"RTN","AHMLDOL3",116,0)
CHKUID(ACCN,UID) ;
"RTN","AHMLDOL3",117,0)
 N FLG
"RTN","AHMLDOL3",118,0)
 S FLG=0
"RTN","AHMLDOL3",119,0)
 I $G(UID)'[" " S LUID=UID
"RTN","AHMLDOL3",120,0)
 I '$D(^LRO(68,"B",JVLAA1)),ACCN'="" D GTVAUID(ACCN,.UID)
"RTN","AHMLDOL3",121,0)
 Q:'UID
"RTN","AHMLDOL3",122,0)
 S JVLAD=$P(UID," ",2),JVYR=$E(DT,1,3),JVLAD=JVYR_JVLAD
"RTN","AHMLDOL3",123,0)
 S JVLAN=$P(UID," ",3)
"RTN","AHMLDOL3",124,0)
 S JVIEN=JVLAN_","_JVLAD_","_JVLAA_","
"RTN","AHMLDOL3",125,0)
 S JVACC=$$GET1^DIQ(68.02,JVIEN,15,"I")
"RTN","AHMLDOL3",126,0)
 I JVACC'=UID S AHOUT(1)="-1^ERROR: Accession number does not exist" Q
"RTN","AHMLDOL3",127,0)
 S UID=$$GET1^DIQ(68.02,JVIEN,16,"I")
"RTN","AHMLDOL3",128,0)
 Q
"RTN","AHMLDOL3",129,0)
 ;
"RTN","AHMLDOL3",130,0)
GTVAUID(ACCN,UID) ;
"RTN","AHMLDOL3",131,0)
 N SUB,JVDT,JVN
"RTN","AHMLDOL3",132,0)
 S (UID,SUB,JVDT,JVN)=0
"RTN","AHMLDOL3",133,0)
 Q:ACCN=""
"RTN","AHMLDOL3",134,0)
 S SUB=$P(ACCN," ")
"RTN","AHMLDOL3",135,0)
 S JVDT=$P(ACCN," ",2)
"RTN","AHMLDOL3",136,0)
 S JVN=$P(ACCN," ",3)
"RTN","AHMLDOL3",137,0)
 Q:SUB=""
"RTN","AHMLDOL3",138,0)
 I $D(^LRO(68,"B",SUB)) S JVA=$O(^LRO(68,"B",SUB,""))
"RTN","AHMLDOL3",139,0)
 I $L((JVDT)'>2) S JVYR=$E(DT,1,3),JVD=JVYR_"0000"
"RTN","AHMLDOL3",140,0)
 I $L((JVDT)>2) S JVYR=$E(DT,1,3),JVDT=JVYR_JVDT
"RTN","AHMLDOL3",141,0)
 Q:'$D(^LRO(68,JVA,1,JVDT,1,JVN))
"RTN","AHMLDOL3",142,0)
 S IEN=JVN_","_JVDT_","_JVA_","
"RTN","AHMLDOL3",143,0)
 S UID=$$GET1^DIQ(68.02,IEN,16,"I")
"RTN","AHMLDOL3",144,0)
 Q
"RTN","AHMLDOL3",145,0)
 ;
"RTN","AHMLDOL3",146,0)
GTACC(RUID,JORD,JVACC,JVOLAD) ;
"RTN","AHMLDOL3",147,0)
 N ARAA,ARAD,ARAN,ARORD,LIEN
"RTN","AHMLDOL3",148,0)
 S JVACC=0
"RTN","AHMLDOL3",149,0)
 S ARAA="",ARAA=$O(^LRO(68,"C",RUID,ARAA))
"RTN","AHMLDOL3",150,0)
 I ARAA'="" S ARAD="",ARAD=$O(^LRO(68,"C",RUID,ARAA,ARAD))
"RTN","AHMLDOL3",151,0)
 I ARAD'="" S ARAN="",ARAN=$O(^LRO(68,"C",RUID,ARAA,ARAD,ARAN))
"RTN","AHMLDOL3",152,0)
 Q:ARAN=""
"RTN","AHMLDOL3",153,0)
 S LIEN=ARAN_","_ARAD_","_ARAA_","
"RTN","AHMLDOL3",154,0)
 S JVACC=$$GET1^DIQ(68.02,LIEN,15,"E")
"RTN","AHMLDOL3",155,0)
 S ARORD=$$GET1^DIQ(68.02,LIEN,14,"E")
"RTN","AHMLDOL3",156,0)
 I ARORD=JORD S JVACC=0
"RTN","AHMLDOL3",157,0)
 S JVOLAD=$O(^LRO(69,"C",ARORD,JVOLAD))
"RTN","AHMLDOL3",158,0)
 Q
"RTN","AHMLDOL3",159,0)
 ;
"RTN","AHMLDOL3",160,0)
GETEXEC(EXEC) ;
"RTN","AHMLDOL3",161,0)
 I EXEC=22 S EXEC=7
"RTN","AHMLDOL3",162,0)
 I EXEC=25 S EXEC=7
"RTN","AHMLDOL3",163,0)
 I EXEC=26 S EXEC=10
"RTN","AHMLDOL3",164,0)
 I EXEC=27 S EXEC=9
"RTN","AHMLDOL3",165,0)
 I EXEC=28 S EXEC=8
"RTN","AHMLDOL3",166,0)
 I EXEC=59 S EXEC=8
"RTN","AHMLDOL3",167,0)
 I EXEC=60 S EXEC=7
"RTN","AHMLDOL3",168,0)
 I EXEC=61 S EXEC=23
"RTN","AHMLDOL3",169,0)
 I EXEC=62 S EXEC=9
"RTN","AHMLDOL3",170,0)
 I EXEC=63 S EXEC=10
"RTN","AHMLDOL3",171,0)
 I EXEC=83 S EXEC=8
"RTN","AHMLDOL3",172,0)
 Q
"RTN","AHMLDOL3",173,0)
 ;
"RTN","AHMLDOL3",174,0)
QUIT ;
"RTN","AHMLDOL3",175,0)
 K AA,AN,AD,ARAY,COMP,D1,D2,DA,DFN,EXEC,HLARY,LVACC,JVLAA,JVLAA1,LVLAD
"RTN","AHMLDOL3",176,0)
 K JVDATA,JVNDE,JVLAN,JVYR,JVTSP,LR1ODT,LR1SN,LRAODT,LRBERF,LRCCOM,LRDPT
"RTN","AHMLDOL3",177,0)
 K LRDPF,LR1AA,LR1AD,LR1AN,LRAA,LRAD,LRAN,LRBETN,LRDATA,LRDFN,LRIDT1,LRIDT
"RTN","AHMLDOL3",178,0)
 K LRLABKY,LRMSTATI,LRNATURE,JVACC,JVLAD,IEN,JVA,JVD
"RTN","AHMLDOL3",179,0)
 K LRODT,LRORD,LRSEND,LRSN,LRT1SAD,LRTEST,LRTNM,LRTOACC,LRTS,LRSS,LRTSAD
"RTN","AHMLDOL3",180,0)
 K LRTSN,LRTSP,LRURG,LRX1,LRXDA,Y,ARAA,ARAD,ARAN
"RTN","AHMLDOL3",181,0)
 K ORDNM,OREND,ORGY,ORNATR,ORNDO,ORPK,ORSTS,SPEC,SPEC1,SS,SUBSC,XX,YY
"RTN","AHMLDOL3",182,0)
 Q
"RTN","AHMLDOL3",183,0)
 ;
"RTN","AHMLDOL4")
0^5^B60042725
"RTN","AHMLDOL4",1,0)
AHMLDOL4 ;LEIDOS/TCK- REMOTE ORDERING- Laboratory Accessioning process - main driver ; 2/9/17 1:44pm
"RTN","AHMLDOL4",2,0)
 ;;1.0;Orders Portability;**1**;March 1, 2010;Build 53
"RTN","AHMLDOL4",3,0)
 ;
"RTN","AHMLDOL4",4,0)
 Q
"RTN","AHMLDOL4",5,0)
 ;
"RTN","AHMLDOL4",6,0)
EN(LRID,JVTST) ;
"RTN","AHMLDOL4",7,0)
 N LIEN,LRPWL,LRPWDT,LRPWLE,XX
"RTN","AHMLDOL4",8,0)
 S (FLG,FLG1,DTIM)=0
"RTN","AHMLDOL4",9,0)
 D DT^LRX
"RTN","AHMLDOL4",10,0)
 S LRTST=JVTST
"RTN","AHMLDOL4",11,0)
 Q:$G(LRKIL)
"RTN","AHMLDOL4",12,0)
 D:$D(XRTL) T0^%ZOSV ; START RESPONSE TIME LOGGING
"RTN","AHMLDOL4",13,0)
 ;CHECK IF LRSN POINTS TO A COMBINED ORDER
"RTN","AHMLDOL4",14,0)
 S LIEN=LRSN_","_LRODT_","
"RTN","AHMLDOL4",15,0)
 S LRCDT=$$GET1^DIQ(69.01,LIEN,10,"I")
"RTN","AHMLDOL4",16,0)
 S LREAL=$$GET1^DIQ(69.01,LIEN,11,"I")
"RTN","AHMLDOL4",17,0)
 S XX=^LRO(69,LRODT,1,LRSN,0)
"RTN","AHMLDOL4",18,0)
 S LRLLOC=$P(XX,U,7),LROLLOC=$P(XX,U,9),LRORIFN=$P(XX,"^",11)
"RTN","AHMLDOL4",19,0)
 S JVOD=1
"RTN","AHMLDOL4",20,0)
 I '$D(^LRO(69,LRODT,1,LRSN,2,"B",JVTST)) D
"RTN","AHMLDOL4",21,0)
 .I PNLTST S FLG1=1
"RTN","AHMLDOL4",22,0)
 I FLG1 D FWL,FL69
"RTN","AHMLDOL4",23,0)
 S LRSEND="",LRSEND=$O(^LRO(69,LRODT,1,LRSN,2,"B",JVTST,LRSEND))
"RTN","AHMLDOL4",24,0)
 I $P(^LRO(69,LRODT,1,LRSN,2,LRSEND,0),U,6)'="" D
"RTN","AHMLDOL4",25,0)
 .S LRTSN=""
"RTN","AHMLDOL4",26,0)
 .F  S LRTSN=$O(^LRO(69,"C",LRORD,LRODT,LRTSN)) Q:LRTSN<1  D  Q:FLG
"RTN","AHMLDOL4",27,0)
 ..S LBORY(LRORD,LRTSN)=""
"RTN","AHMLDOL4",28,0)
 .S LRTSN="" F  S LRTSN=$O(LBORY(LRORD,LRTSN)) Q:LRTSN<1  D  Q:FLG
"RTN","AHMLDOL4",29,0)
 ..I '$D(^LRO(69,LRODT,1,LRTSN,2,"B",JVTST)) S FLG=1 Q
"RTN","AHMLDOL4",30,0)
 ..S LRSEND="",LRSEND=$O(^LRO(69,LRODT,1,LRTSN,2,"B",JVTST,LRSEND))
"RTN","AHMLDOL4",31,0)
 ..S LRBACK=$P(^LRO(69,LRODT,1,LRTSN,2,LRSEND,0),U,14) I LRBACK="" Q
"RTN","AHMLDOL4",32,0)
 ..S LRSN=LRTSN,FLG=1
"RTN","AHMLDOL4",33,0)
 I $P(^LRO(69,LRODT,1,LRSN,2,0),U,3)>1 D
"RTN","AHMLDOL4",34,0)
 .S FLG=0,LRSEND=0
"RTN","AHMLDOL4",35,0)
 .F  S LRSEND=$O(^LRO(69,LRODT,1,LRSN,2,LRSEND)) Q:LRSEND<1  D  Q:FLG
"RTN","AHMLDOL4",36,0)
 ..S LTACC=$G(^LRO(69,LRODT,1,LRSN,2,LRSEND,.3)) I LTACC="" Q
"RTN","AHMLDOL4",37,0)
 ..;S CHACC=$P(^LRO(69,LRODT,1,LRSN,2,LRSEND,.3),U)
"RTN","AHMLDOL4",38,0)
 ..;I CHACC'=LRID Q
"RTN","AHMLDOL4",39,0)
 ..S LTX=^LRO(69,LRODT,1,LRSN,2,LRSEND,0)
"RTN","AHMLDOL4",40,0)
 ..S TEST=$P(LTX,U),LRURG=$P(LTX,U,2),LRAD=$P(LTX,U,3),LRAA=$P(LTX,U,4),LRAN=$P(LTX,U,5),FLG=1
"RTN","AHMLDOL4",41,0)
 ..I $D(^LAB(60,JVTST,8,DUZ(2))) S LRAA1=$P(^LAB(60,JVTST,8,DUZ(2),0),U,2)
"RTN","AHMLDOL4",42,0)
 ..I LRAA="" S FLG=0 Q
"RTN","AHMLDOL4",43,0)
 ..I LRAA1'=LRAA S FLG=0
"RTN","AHMLDOL4",44,0)
 I FLG D
"RTN","AHMLDOL4",45,0)
 .S LRACC=^LRO(68,LRAA,1,LRAD,1,LRAN,.2)
"RTN","AHMLDOL4",46,0)
 .D LRAA
"RTN","AHMLDOL4",47,0)
 .I LRAA="" S LRAA=0,LRAA=$O(LRTSTS(LRWLC,0,LRAA))
"RTN","AHMLDOL4",48,0)
 .S LRIDT=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,3),U,5)
"RTN","AHMLDOL4",49,0)
 .S LRPRAC=$P(^LRO(69,LRODT,1,LRSN,0),U,6)
"RTN","AHMLDOL4",50,0)
 .S LRLBLBP=""
"RTN","AHMLDOL4",51,0)
 .D:$G(LRTSTS)>0 ^LRWLST11
"RTN","AHMLDOL4",52,0)
 .D EN^LA7ADL(.LRID)
"RTN","AHMLDOL4",53,0)
 I 'FLG D
"RTN","AHMLDOL4",54,0)
 .D LRAA,EN^AHMLDOL5(.LRID)
"RTN","AHMLDOL4",55,0)
 S LRCDT=(+LRCDT)_"^"_LREAL
"RTN","AHMLDOL4",56,0)
 I '$L($P($G(^LRO(69,LRODT,1,LRSN,1)),"^",7)) S CONTROL=$S($L(LRORIFN):"SC",1:"SN") D NEW^LR7OB1(LRODT,LRSN,CONTROL,,,6)
"RTN","AHMLDOL4",57,0)
 K LRTSTS,^TMP("LR",$J,"TMP"),LRNM,DIC,I,LRORIFN,LRBACK
"RTN","AHMLDOL4",58,0)
 I $D(XRT0) S XRTN=$T(+0) D T1^%ZOSV ; STOP RESPONSE TIME LOGGING
"RTN","AHMLDOL4",59,0)
 Q
"RTN","AHMLDOL4",60,0)
 ;
"RTN","AHMLDOL4",61,0)
GTTST() ;
"RTN","AHMLDOL4",62,0)
 N ORN,FND,TST1,LRSND
"RTN","AHMLDOL4",63,0)
 S (FND,TST,ORN,LRSND)=0
"RTN","AHMLDOL4",64,0)
 I '$D(^LRO(69,LRODT,1,LRSN,2)) Q TST
"RTN","AHMLDOL4",65,0)
 F  S LRSND=$O(^LRO(69,LRODT,1,LRSN,2,LRSND)) Q:LRSND=""!(FND)  D
"RTN","AHMLDOL4",66,0)
 .S TST1=$P($G(^LRO(69,LRODT,1,LRSN,2,LRSND,0)),"^")
"RTN","AHMLDOL4",67,0)
 .S ORN=$P($G(^LRO(69,LRODT,1,LRSN,2,LRSND,0)),"^",7)
"RTN","AHMLDOL4",68,0)
 .I ORN=ORDNM S TST=TST1,FND=1
"RTN","AHMLDOL4",69,0)
 Q TST
"RTN","AHMLDOL4",70,0)
 ;
"RTN","AHMLDOL4",71,0)
LRAA ;
"RTN","AHMLDOL4",72,0)
 K LRTSTS,^TMP("LR",$J,"TMP")
"RTN","AHMLDOL4",73,0)
 S LRTSTS=0,LRIX=0,S5=0,LRTN=0
"RTN","AHMLDOL4",74,0)
 S LRTN="",LRTN=$O(^LRO(69,LRODT,1,LRSN,2,"B",JVTST,LRTN))
"RTN","AHMLDOL4",75,0)
 I LRTN="" S LRTN=$G(LRSND)
"RTN","AHMLDOL4",76,0)
 S LRX=^LRO(69,LRODT,1,LRSN,2,LRTN,0)
"RTN","AHMLDOL4",77,0)
 I '$P(LRX,U,3),'$P(LRX,U,6),'$P(LRX,U,11) S LRORIFN=$P(LRX,"^",7),LRBACK=$P(LRX,"^",14) D SET
"RTN","AHMLDOL4",78,0)
 ;
"RTN","AHMLDOL4",79,0)
WL1 ;
"RTN","AHMLDOL4",80,0)
 ; LRDAA is used by POC interface to specify the POC accession area.
"RTN","AHMLDOL4",81,0)
 S LRIX=0
"RTN","AHMLDOL4",82,0)
 F  S LRIX=$O(^TMP("LR",$J,"TMP",LRIX)) Q:LRIX<1  D
"RTN","AHMLDOL4",83,0)
 .S XX=^TMP("LR",$J,"TMP",LRIX)
"RTN","AHMLDOL4",84,0)
 .S LRTSTS=+XX,LRURG=$P(XX,"^",2)
"RTN","AHMLDOL4",85,0)
 .S LRORIFN=$P(XX,"^",4),LRBACK=$P(XX,"^",5)
"RTN","AHMLDOL4",86,0)
 .S LRST=^LAB(60,LRTSTS,0)
"RTN","AHMLDOL4",87,0)
 .S LRAA=$S($G(LRDAA)>0:LRDAA,$D(^LAB(60,LRTSTS,8,$S($G(LRDUZ(2))>0:LRDUZ(2),1:DUZ(2)),0)):$P(^(0),U,2),1:"")
"RTN","AHMLDOL4",88,0)
 .S LRNM=$P(LRST,U),LRUNQ=+$P(LRST,U,7)
"RTN","AHMLDOL4",89,0)
 .D WL2
"RTN","AHMLDOL4",90,0)
 Q
"RTN","AHMLDOL4",91,0)
 ;
"RTN","AHMLDOL4",92,0)
WL2 ;
"RTN","AHMLDOL4",93,0)
 I 'PNLTST,LRAA="" D GTLRAA(JVTST,.LRAA)
"RTN","AHMLDOL4",94,0)
 D FWL:$G(LRAA)="" Q:LRAA=""
"RTN","AHMLDOL4",95,0)
 S LRWL0=^LRO(68,LRAA,0),LRSS=$P(LRWL0,U,2),LRIDIV=$S($L($P(LRWL0,U,19)):$P(LRWL0,U,19),1:"CP")
"RTN","AHMLDOL4",96,0)
 S LRPWL=$P($G(^LRO(68,LRAA,0)),U,4)
"RTN","AHMLDOL4",97,0)
 S LRWLC=$P(LRWL0,U,4)
"RTN","AHMLDOL4",98,0)
 S:'LRWLC LRWLC=LRAA
"RTN","AHMLDOL4",99,0)
 S LRTSTS(LRWLC,LRUNQ,LRAA)=LRSS_U_$P(LRWL0,U,12),LRTSTS(LRWLC,LRUNQ,LRAA,LRIX)=^TMP("LR",$J,"TMP",LRIX)
"RTN","AHMLDOL4",100,0)
 Q
"RTN","AHMLDOL4",101,0)
 ;
"RTN","AHMLDOL4",102,0)
GTLRAA(JVTST,LRAA) ;
"RTN","AHMLDOL4",103,0)
 N CMPTST
"RTN","AHMLDOL4",104,0)
 S CMPTST=0,LRAA=""
"RTN","AHMLDOL4",105,0)
 I $O(^LAB(60,JVTST,2,0))>0 D
"RTN","AHMLDOL4",106,0)
 .S I=0,I=$O(^LAB(60,JVTST,2,I)) Q:I=""
"RTN","AHMLDOL4",107,0)
 .;GET ACCESSION AREA FROM 8 NODE OF FILE 60
"RTN","AHMLDOL4",108,0)
 .S CMPTST=^LAB(60,JVTST,2,I,0)
"RTN","AHMLDOL4",109,0)
 .Q:CMPTST=""
"RTN","AHMLDOL4",110,0)
 .S LRAA=$P($G(^LAB(60,CMPTST,8,DUZ(2),0)),"^",2)
"RTN","AHMLDOL4",111,0)
 Q
"RTN","AHMLDOL4",112,0)
 ;
"RTN","AHMLDOL4",113,0)
SET ;
"RTN","AHMLDOL4",114,0)
 I $G(LRORDRR)="R" S LRTEST(LRTN)=$G(^LRO(69,LRODT,1,LRSN,2,LRTN,0))
"RTN","AHMLDOL4",115,0)
 S S5=S5+1,I5=$G(^LRO(69,LRODT,1,LRSN,2,LRTN,0))
"RTN","AHMLDOL4",116,0)
 I I5 S ^TMP("LR",$J,"TMP",S5)=$P(I5,U)_U_$P(I5,U,2)_U_LRTN_U_LRORIFN_U_LRBACK_U_$S($G(LRTSP):LRTSP,1:$P(I5,U)),I5=LRTN
"RTN","AHMLDOL4",117,0)
 Q
"RTN","AHMLDOL4",118,0)
 ;
"RTN","AHMLDOL4",119,0)
FWL ;
"RTN","AHMLDOL4",120,0)
 ;Get panel IEN from order number
"RTN","AHMLDOL4",121,0)
 S LRIX=1
"RTN","AHMLDOL4",122,0)
 I $O(^LAB(60,PNLTST,2,0))>0 D EXP S $P(^LRO(69,LRODT,1,LRSN,2,$P(^TMP("LR",$J,"TMP",LRIX),U,3),0),U,8)=1 Q
"RTN","AHMLDOL4",123,0)
 Q
"RTN","AHMLDOL4",124,0)
 ;
"RTN","AHMLDOL4",125,0)
EXP ;
"RTN","AHMLDOL4",126,0)
 N LRSEN
"RTN","AHMLDOL4",127,0)
 S (I,I5,S5)=0,LRSEN=""
"RTN","AHMLDOL4",128,0)
 F  S I=$O(^LAB(60,PNLTST,2,I)) Q:I<1!(S5)  D
"RTN","AHMLDOL4",129,0)
 .S J=+^LAB(60,PNLTST,2,I,0)
"RTN","AHMLDOL4",130,0)
 .Q:J'=JVTST
"RTN","AHMLDOL4",131,0)
 .S S5=S5+1,I5=I5+1
"RTN","AHMLDOL4",132,0)
 .S ^TMP("LR",$J,"TMP",S5)=J_"^"_LRURG_"^"_I5_"^"_ORDNM_"^^"_PNLTST
"RTN","AHMLDOL4",133,0)
 .;Get panel test comment date and comments to add to component
"RTN","AHMLDOL4",134,0)
 .I $D(^LRO(69,LRODT,1,LRSN,2,"B",PNLTST)) D
"RTN","AHMLDOL4",135,0)
 ..S LRSEN="",LRSEN=$O(^LRO(69,LRODT,1,LRSN,2,"B",PNLTST,LRSEN))
"RTN","AHMLDOL4",136,0)
 ..Q:$G(LRSEN)=""
"RTN","AHMLDOL4",137,0)
 ..Q:'$D(^LRO(69,LRODT,1,LRSN,2,LRSEN,1.1))
"RTN","AHMLDOL4",138,0)
 ..S CMTDT=$P(^LRO(69,LRODT,1,LRSN,2,LRSEN,1.1,0),"^",5)
"RTN","AHMLDOL4",139,0)
 ..S CNT=0 F  S CNT=$O(^LRO(69,LRODT,1,LRSN,2,LRSEN,1.1,CNT)) Q:CNT<1  D
"RTN","AHMLDOL4",140,0)
 ...Q:'$D(^LRO(69,LRODT,1,LRSN,2,LRSEN,1.1,CNT))
"RTN","AHMLDOL4",141,0)
 ...S CMT(CNT)=^LRO(69,LRODT,1,LRSN,2,LRSEN,1.1,CNT,0)
"RTN","AHMLDOL4",142,0)
 S LRIX=1
"RTN","AHMLDOL4",143,0)
 Q
"RTN","AHMLDOL4",144,0)
 ;
"RTN","AHMLDOL4",145,0)
PRESET ;
"RTN","AHMLDOL4",146,0)
 I '($D(^LRO(68,LRAA,1,LRAD,1,LRAN,0))#2) K ^LRO(68,LRAA,1,LRAD,1,LRAN) Q
"RTN","AHMLDOL4",147,0)
 S LROLRDFN=+^LRO(68,LRAA,1,LRAD,1,LRAN,0)
"RTN","AHMLDOL4",148,0)
 I $L($P(^LRO(68,LRAA,1,LRAD,1,LRAN,0),U,5)) S LRDPF=$P(^LR(LROLRDFN,0),U,2),DFN=$P(^LR(LROLRDFN,0),U,3) D PT^LRX
"RTN","AHMLDOL4",149,0)
 S LRIDT=9999999-^LRO(68,LRAA,1,LRAD,1,LRAN,3)
"RTN","AHMLDOL4",150,0)
 Q:'$D(^LR(LRO,LRDFN,LRSS,LRIDT,0))
"RTN","AHMLDOL4",151,0)
 ;
"RTN","AHMLDOL4",152,0)
PR2 ;
"RTN","AHMLDOL4",153,0)
 S LRNIDT=9999999-LRCDT
"RTN","AHMLDOL4",154,0)
 F  Q:'$D(^LR(LRDFN,LRSS,LRNIDT,0))  D
"RTN","AHMLDOL4",155,0)
 . S LRCDT=$$FMADD^XLFDT(LRCDT,,,,1)
"RTN","AHMLDOL4",156,0)
 . S LRNIDT=9999999-LRCDT
"RTN","AHMLDOL4",157,0)
 I $P(^LR(LRO,LRDFN,LRSS,LRIDT,0),U,3) S LREND=1 W !,$C(7),"CAN'T DO IT. The data has been verified for that log number." Q
"RTN","AHMLDOL4",158,0)
 S ^LR(LRDFN,LRSS,LRNIDT,0)=LRCDT_U_LREAL_U_$P(^LR(LROLRDFN,LRSS,LRIDT,0),U,3,4)_U_U_$P(^LR(LROLRDFN,LRSS,LRIDT,0),U,6,99)
"RTN","AHMLDOL4",159,0)
 S J=0 F  S J=$O(^LR(LROLRDFN,LRSS,LRIDT,J)) Q:J<1  S ^LR(LRDFN,LRSS,LRNIDT,J)=^LR(LROLRDFN,LRSS,LRIDT,J)
"RTN","AHMLDOL4",160,0)
 S X=^LRO(68,LRAA,1,LRAD,1,LRAN,0),LROSN=$P(X,U,5),LROID=$P(X,U,6),LROCN=$S($D(^LRO(68,LRAA,1,LRAD,1,LRAN,.1)):$P(^LRO(68,LRAA,1,LRAD,1,LRAN,.1),U),1:"")
"RTN","AHMLDOL4",161,0)
 K:$L(LROID) ^LRO(68,LRAA,1,LRAD,1,"C",LROID,LRAN)
"RTN","AHMLDOL4",162,0)
 K:$L(LROCN) ^LRO(68,LRAA,1,LRAD,1,"D",LROCN,LRAN)
"RTN","AHMLDOL4",163,0)
 K ^LRO(68,LRAA,1,LRAD,1,LRAN),^LR(LROLRDFN,LRSS,LRIDT)
"RTN","AHMLDOL4",164,0)
 Q
"RTN","AHMLDOL4",165,0)
 ;
"RTN","AHMLDOL4",166,0)
OR ;from LRPHITEM
"RTN","AHMLDOL4",167,0)
 I $G(LRORDRR)="R" S LRTEST(LRTN)=$G(^LRO(69,LRODT,1,LRSN,2,LRTN,0)) Q
"RTN","AHMLDOL4",168,0)
 Q
"RTN","AHMLDOL4",169,0)
 ;
"RTN","AHMLDOL4",170,0)
FL69 ;
"RTN","AHMLDOL4",171,0)
 N Y
"RTN","AHMLDOL4",172,0)
 S (CNT,Y)=""
"RTN","AHMLDOL4",173,0)
 F  S Y=$O(^TMP("LR",$J,"TMP",Y)) Q:Y=""  D
"RTN","AHMLDOL4",174,0)
 .K LRIENS,LRMSG
"RTN","AHMLDOL4",175,0)
 .S TST=$P($G(^TMP("LR",$J,"TMP",Y)),"^")
"RTN","AHMLDOL4",176,0)
 .S LRURG=6
"RTN","AHMLDOL4",177,0)
 .S IEN="?+1,"_LRSN_","_LRODT_","
"RTN","AHMLDOL4",178,0)
 .S LRFDA(2,69.03,IEN,.01)=TST
"RTN","AHMLDOL4",179,0)
 .S LRFDA(2,69.03,IEN,1)=$G(LRURG)
"RTN","AHMLDOL4",180,0)
 .S LRFDA(2,69.03,IEN,6)=+ORDNM
"RTN","AHMLDOL4",181,0)
 .D UPDATE^DIE("","LRFDA(2)","LRIENS","LRMSG")
"RTN","AHMLDOL4",182,0)
 .;Set panel test comments into new component test nodes
"RTN","AHMLDOL4",183,0)
 .I $G(LRIENS(1)) S LRIENS=LRIENS(1) D
"RTN","AHMLDOL4",184,0)
 ..S ^LRO(69,LRODT,1,LRSN,2,LRIENS,1,0)=$G(CMTDT)
"RTN","AHMLDOL4",185,0)
 ..Q:'$D(CMT)
"RTN","AHMLDOL4",186,0)
 ..S CNT="" F  S CNT=$O(CMT(CNT)) Q:CNT<1  D
"RTN","AHMLDOL4",187,0)
 ...S ^LRO(69,LRODT,1,LRSN,2,LRIENS,1,CNT,0)=$G(CMT(CNT))
"RTN","AHMLDOL4",188,0)
 Q
"RTN","AHMLDOL4",189,0)
 K JVOD
"RTN","AHMLDOL4",190,0)
 ;
"RTN","AHMLDOL4",191,0)
EXIT ;
"RTN","AHMLDOL4",192,0)
 K CHACC,CONTROL,DFN,DTOUT,DUOUT,FLG,I5,J,LBORY,LRAA,LRACC,LRAA1,LRAN,LRDAA,LRDFN,LRCDT,LRAD
"RTN","AHMLDOL4",193,0)
 K IEN,CMT,CNT,FLG1,IEN,LRDUZ,LREAL,LREND,LRIDIV,LRIDT,LRIEN,LRIFN,LRDPF,LRIX,LRKILL,LRKIL
"RTN","AHMLDOL4",194,0)
 K JVCDT,LRFDA,ORDNM,PNLTST,TST,LRNIDT,LRNCWL,LRLLOC,LROCN,LRODT,LROID,LROLLOC,LROLRDFN,LRPHSET,LRPRAC
"RTN","AHMLDOL4",195,0)
 K LRQUIET,LRORD,LRORDRR,LROSN,LRSEND,LRSN,LRSS,LRST,LRTEST,LRTN,LRTSN,LRTSP,LRX,LTACC,LTX,LRTST
"RTN","AHMLDOL4",196,0)
 K CMTDT,LRUNQ,LRURG,LRWLC,LRWL0,LRWO,PNM,SSN,S5,TEST,X,XRT0,XRTL,XRTN,XRTO,Y,DTIM,LRLBLBP,LRO
"RTN","AHMLDOL4",197,0)
 Q
"RTN","AHMLDOL4",198,0)
 ;
"RTN","AHMLDOL5")
0^6^B59431050
"RTN","AHMLDOL5",1,0)
AHMLDOL5 ;LEIDOS/TCK- Remote Order - Laboratory Process ; 2/9/17 3:47pm
"RTN","AHMLDOL5",2,0)
 ;;1.0;Orders Portability;**1**;March 1, 2010;Build 53
"RTN","AHMLDOL5",3,0)
 ;
"RTN","AHMLDOL5",4,0)
 Q
"RTN","AHMLDOL5",5,0)
 ;
"RTN","AHMLDOL5",6,0)
EN(LRID) ;
"RTN","AHMLDOL5",7,0)
 N LIEN,SBC
"RTN","AHMLDOL5",8,0)
 S (DTIME,LRWLC)=0
"RTN","AHMLDOL5",9,0)
 F  S LRWLC=$O(LRTSTS(LRWLC)) Q:LRWLC<1  S LRAD=DT D SPLIT
"RTN","AHMLDOL5",10,0)
 ;
"RTN","AHMLDOL5",11,0)
 ;If LEDI and comments came with order then copy to order in #69
"RTN","AHMLDOL5",12,0)
 I $G(LRORDRR)="R",$G(LR696),$D(^LRO(69.6,LR696,99)) D
"RTN","AHMLDOL5",13,0)
 . N LRDIE
"RTN","AHMLDOL5",14,0)
 . D WP^DIE(69.01,LRSN_","_LRODT_",",16,"A","^LRO(69.6,LR696,99)","LRDIE(16)")
"RTN","AHMLDOL5",15,0)
 ;
"RTN","AHMLDOL5",16,0)
 K DIC,DLAYGO,DR,DA,DIE,LRIXX
"RTN","AHMLDOL5",17,0)
 Q:$G(LRORDR)="P"
"RTN","AHMLDOL5",18,0)
 K LRNM,LRTSTS
"RTN","AHMLDOL5",19,0)
 K ^TMP("AHMLDO",$J,"TMP")
"RTN","AHMLDOL5",20,0)
 Q
"RTN","AHMLDOL5",21,0)
 ;
"RTN","AHMLDOL5",22,0)
SPLIT ;
"RTN","AHMLDOL5",23,0)
 N LRAA,LRX
"RTN","AHMLDOL5",24,0)
 ; Setup regular accessions (LRUNQ=0)
"RTN","AHMLDOL5",25,0)
 S LRUNQ=0,LREND=0
"RTN","AHMLDOL5",26,0)
 I $D(LRTSTS(LRWLC,0)) D
"RTN","AHMLDOL5",27,0)
 . D GTWLN
"RTN","AHMLDOL5",28,0)
 . I LREND Q
"RTN","AHMLDOL5",29,0)
 . S LRAA=0
"RTN","AHMLDOL5",30,0)
 . F  S LRAA=$O(LRTSTS(LRWLC,0,LRAA)) Q:LRAA<1  D
"RTN","AHMLDOL5",31,0)
 . . S LRSS=LRTSTS(LRWLC,0,LRAA)
"RTN","AHMLDOL5",32,0)
 . . D STWLN,ST2,^LRWLST11,EN^LA7ADL(LRID)
"RTN","AHMLDOL5",33,0)
 . D SICA^LRWLST11
"RTN","AHMLDOL5",34,0)
 ; Setup accessions requiring 'unique' accession numbers (LRUNQ=1)
"RTN","AHMLDOL5",35,0)
 S LRUNQ=1,LRAA=0
"RTN","AHMLDOL5",36,0)
 F  S LRAA=$O(LRTSTS(LRWLC,1,LRAA)) Q:LRAA<1  D
"RTN","AHMLDOL5",37,0)
 . S LRSS=LRTSTS(LRWLC,1,LRAA)
"RTN","AHMLDOL5",38,0)
 . F  D GTWLN Q:LREND  D   Q:$O(LRTSTS(LRWLC,1,LRAA,0))<1
"RTN","AHMLDOL5",39,0)
 . . D STWLN,ST2,^LRWLST11,EN^LA7ADL(LRUID),SICA^LRWLST11
"RTN","AHMLDOL5",40,0)
 Q
"RTN","AHMLDOL5",41,0)
 ;
"RTN","AHMLDOL5",42,0)
 ;
"RTN","AHMLDOL5",43,0)
STWLN ; Set accession number
"RTN","AHMLDOL5",44,0)
 ;
"RTN","AHMLDOL5",45,0)
 D GETLOCK(LRAA,LRAD)
"RTN","AHMLDOL5",46,0)
 D CHECK68(LRAA,LRAD)
"RTN","AHMLDOL5",47,0)
 ;
"RTN","AHMLDOL5",48,0)
 S LRDPF=$$GET1^DIQ(63,LRDFN,.02,"I"),DFN=$$GET1^DIQ(63,LRDFN,.03,"I")
"RTN","AHMLDOL5",49,0)
 ;
"RTN","AHMLDOL5",50,0)
 ; Handle 'in common' area that was not setup in GTWLN call.
"RTN","AHMLDOL5",51,0)
 I '$D(^LRO(68,LRAA,1,LRAD,1,LRAN)) D SETAN(LRAA,LRAD,LRAN)
"RTN","AHMLDOL5",52,0)
 ;
"RTN","AHMLDOL5",53,0)
 S LREND=0,LRLBLBP=1-$P(LRSS,U,2),LRSS=$P(LRSS,U)
"RTN","AHMLDOL5",54,0)
 S SBC=$$GET1^DIQ(68,LRAA,.09,"I")
"RTN","AHMLDOL5",55,0)
 S LRACC=SBC_" "_$S(LRAD["0000":$E(LRAD,2,3),1:$E(LRAD,4,7))_" "_LRAN
"RTN","AHMLDOL5",56,0)
 S LRPRAC=""
"RTN","AHMLDOL5",57,0)
 I $D(^LRO(69,LRODT,1,LRSN,0)) D
"RTN","AHMLDOL5",58,0)
 .S LIEN=LRSN_","_LRODT_","
"RTN","AHMLDOL5",59,0)
 .S LRPRAC=$$GET1^DIQ(69.01,LIEN,1,"I")
"RTN","AHMLDOL5",60,0)
 .S:$D(LRNT) ^LRO(69,LRODT,1,LRSN,3)=LRNT
"RTN","AHMLDOL5",61,0)
 ;
"RTN","AHMLDOL5",62,0)
 ; Location type
"RTN","AHMLDOL5",63,0)
 S LRCAPLOC=$P($G(^SC(+LROLLOC,0)),U,3)
"RTN","AHMLDOL5",64,0)
 I LRCAPLOC="" S LRCAPLOC="Z"
"RTN","AHMLDOL5",65,0)
 ;
"RTN","AHMLDOL5",66,0)
 ; File information in file #68 for this accession
"RTN","AHMLDOL5",67,0)
 N LRFDA,LR6802,LRDIE
"RTN","AHMLDOL5",68,0)
 S LR6802=LRAN_","_LRAD_","_LRAA_","
"RTN","AHMLDOL5",69,0)
 S LRFDA(1,68.02,LR6802,.01)=LRDFN
"RTN","AHMLDOL5",70,0)
 S LRFDA(1,68.02,LR6802,1)=LRDPF
"RTN","AHMLDOL5",71,0)
 S LRFDA(1,68.02,LR6802,2)=LRAD
"RTN","AHMLDOL5",72,0)
 S LRFDA(1,68.02,LR6802,3)=LRODT
"RTN","AHMLDOL5",73,0)
 S LRFDA(1,68.02,LR6802,4)=LRSN
"RTN","AHMLDOL5",74,0)
 S LRFDA(1,68.02,LR6802,6)=LRLLOC
"RTN","AHMLDOL5",75,0)
 S X=$G(^LRO(69,LRODT,1,LRSN,.1)) I X'="" S LRFDA(1,68.02,LR6802,14)=X
"RTN","AHMLDOL5",76,0)
 ;
"RTN","AHMLDOL5",77,0)
 ; No ordering provider/location on controls
"RTN","AHMLDOL5",78,0)
 I LRDPF'=62.3 D
"RTN","AHMLDOL5",79,0)
 . S LRFDA(1,68.02,LR6802,6.5)=LRPRAC
"RTN","AHMLDOL5",80,0)
 . S LRFDA(1,68.02,LR6802,94)=LROLLOC
"RTN","AHMLDOL5",81,0)
 ;
"RTN","AHMLDOL5",82,0)
 ; Only store treating specialty on file #2 patients
"RTN","AHMLDOL5",83,0)
 ; If no treating specialty then use specialty from file #44 location
"RTN","AHMLDOL5",84,0)
 I LRDPF=2 D
"RTN","AHMLDOL5",85,0)
 . S LRTREA=$$GET1^DIQ(2,DFN,.103,"I")
"RTN","AHMLDOL5",86,0)
 . I 'LRTREA S LRTREA=$$GET1^DIQ(44,+LROLLOC,9.5,"I")
"RTN","AHMLDOL5",87,0)
 . I LRTREA S LRFDA(1,68.02,LR6802,6.6)=LRTREA
"RTN","AHMLDOL5",88,0)
 ;
"RTN","AHMLDOL5",89,0)
 S LRFDA(1,68.02,LR6802,6.7)=DUZ
"RTN","AHMLDOL5",90,0)
 S LRFDA(1,68.02,LR6802,15)=LRACC
"RTN","AHMLDOL5",91,0)
 S LRFDA(1,68.02,LR6802,26)=DUZ(2)
"RTN","AHMLDOL5",92,0)
 S LRFDA(1,68.02,LR6802,92)=LRCAPLOC
"RTN","AHMLDOL5",93,0)
 D FILE^DIE("","LRFDA(1)","LRDIE(1)")
"RTN","AHMLDOL5",94,0)
 I $D(LRDIE(1)) D MAILALRT^LRWLST12("STWLN~LRWLST1")
"RTN","AHMLDOL5",95,0)
 ;
"RTN","AHMLDOL5",96,0)
 ; If specimen defined then set nodes, force to ien=1 since many lab
"RTN","AHMLDOL5",97,0)
 ; routines expect the specimen to be record number 1.
"RTN","AHMLDOL5",98,0)
 I $G(LRSPEC) D
"RTN","AHMLDOL5",99,0)
 . N LRFDAIEN,LRLOCKOK,LRLOOPCT
"RTN","AHMLDOL5",100,0)
 . S LRFDAIEN(1)=1
"RTN","AHMLDOL5",101,0)
 . S LRFDA(2,68.05,"+1,"_LR6802,.01)=LRSPEC
"RTN","AHMLDOL5",102,0)
 . S LRFDA(2,68.05,"+1,"_LR6802,1)=$P(LRSAMP,";",1)
"RTN","AHMLDOL5",103,0)
 . ;
"RTN","AHMLDOL5",104,0)
 . ; Modification to prevent lock failures - loop 10 times to give system a chance to get lock
"RTN","AHMLDOL5",105,0)
 . S LRLOCKOK=0
"RTN","AHMLDOL5",106,0)
 . F LRLOOPCT=1:1:10 D  Q:LRLOCKOK
"RTN","AHMLDOL5",107,0)
 . . D UPDATE^DIE("","LRFDA(2)","LRFDAIEN","LRDIE(2)")
"RTN","AHMLDOL5",108,0)
 . . I $G(LRDIE(2,"DIERR")),LRDIE(2,"DIERR",1)<120  H 5 K:LRLOOPCT<10 LRDIE(2)
"RTN","AHMLDOL5",109,0)
 . . E  S LRLOCKOK=1
"RTN","AHMLDOL5",110,0)
 . ;
"RTN","AHMLDOL5",111,0)
 . I $D(LRDIE(2)) D MAILALRT^LRWLST12("STWLN~LRWLST1")
"RTN","AHMLDOL5",112,0)
 ;
"RTN","AHMLDOL5",113,0)
 ; If no specimen defined then use specimen values from file #69.
"RTN","AHMLDOL5",114,0)
 I $G(LRSPEC)="",$D(^LRO(69,LRODT,1,LRSN,4,0)) D
"RTN","AHMLDOL5",115,0)
 . N LRFDA,LRFDAIEN,LRI,LRX
"RTN","AHMLDOL5",116,0)
 . S LRI=0
"RTN","AHMLDOL5",117,0)
 . F  S LRI=$O(^LRO(69,LRODT,1,LRSN,4,LRI)) Q:'LRI  D
"RTN","AHMLDOL5",118,0)
 . . S LRFDAIEN(1)=LRI,LRX=$G(^LRO(69,LRODT,1,LRSN,4,LRI,0))
"RTN","AHMLDOL5",119,0)
 . . S LRFDA(LRI,68.05,"+1,"_LR6802,.01)=$P(LRX,"^")
"RTN","AHMLDOL5",120,0)
 . . D UPDATE^DIE("","LRFDA(LRI)","LRFDAIEN","LRDIE(LRI)")
"RTN","AHMLDOL5",121,0)
 . . I $D(LRDIE(LRI)) D MAILALRT^LRWLST12("STWLN~LRWLST1")
"RTN","AHMLDOL5",122,0)
 ;
"RTN","AHMLDOL5",123,0)
 ; Create UID.
"RTN","AHMLDOL5",124,0)
 S LRUID=$$LRUID^LRX(LRAA,LRAD,LRAN)
"RTN","AHMLDOL5",125,0)
 I '$D(LRPHSET),('$G(LRQUIET)) W !!,"ACCESSION:  ",LRACC,"  <",LRUID,">"
"RTN","AHMLDOL5",126,0)
 D UPD696
"RTN","AHMLDOL5",127,0)
 ;
"RTN","AHMLDOL5",128,0)
 L -^LRO(68,LRAA,1,LRAD,1,0)
"RTN","AHMLDOL5",129,0)
 Q
"RTN","AHMLDOL5",130,0)
 ;
"RTN","AHMLDOL5",131,0)
 ;
"RTN","AHMLDOL5",132,0)
UPD696 ; Update file #69.6 if LEDI referral patient and no existing entry
"RTN","AHMLDOL5",133,0)
 K LR696IEN
"RTN","AHMLDOL5",134,0)
 I $G(LRORDRR)="R" D
"RTN","AHMLDOL5",135,0)
 . S LR696IEN=0
"RTN","AHMLDOL5",136,0)
 . I $G(LRRSITE("SMID"))'="",$G(LRSD("RUID"))'="" S LR696IEN=+$O(^LRO(69.6,"AD",LRRSITE("SMID"),LRSD("RUID"),0))
"RTN","AHMLDOL5",137,0)
 . I LR696IEN Q
"RTN","AHMLDOL5",138,0)
 . I '$G(LRRSTAT(0)) S LRRSTAT(0)=$$FIND1^DIC(64.061,"","OMX","Specimenin process","","I $P(^LAB(64.061,Y,0),U,7)=""U""")
"RTN","AHMLDOL5",139,0)
 . D PSET^LRPEND(SSN(2),+LRRSITE("RSITE"),LRSD("RUID"),+LRSD("RPSITE"),LRSPEC,LRSAMP,LRRSTAT(0),LRODT,$P(LRCDT,U),LRRSITE("SDT"),LRNT,.LROT)
"RTN","AHMLDOL5",140,0)
 Q
"RTN","AHMLDOL5",141,0)
 ;
"RTN","AHMLDOL5",142,0)
 ;
"RTN","AHMLDOL5",143,0)
ST2 ; Find next available node in LR global
"RTN","AHMLDOL5",144,0)
 ;
"RTN","AHMLDOL5",145,0)
 N LRFDA,LRFDAIEN,LRDIE,LRX,LRXIDT
"RTN","AHMLDOL5",146,0)
 ; Autopsy ("AU") is not a multiple - do not attempt to set in ^LR global
"RTN","AHMLDOL5",147,0)
 I LRSS="AU" S LRIDT=0 Q
"RTN","AHMLDOL5",148,0)
 ;
"RTN","AHMLDOL5",149,0)
 S LRIDT=0
"RTN","AHMLDOL5",150,0)
 F  D  Q:LRIDT
"RTN","AHMLDOL5",151,0)
 . S LRXIDT=9999999-LRCDT
"RTN","AHMLDOL5",152,0)
 . L +^LR(LRDFN,LRSS,LRXIDT,0):5
"RTN","AHMLDOL5",153,0)
 . I '$T S LRCDT=$$FMADD^XLFDT(LRCDT,0,0,0,1) Q
"RTN","AHMLDOL5",154,0)
 . I '$D(^LR(LRDFN,LRSS,LRXIDT,0)) S LRIDT=LRXIDT Q
"RTN","AHMLDOL5",155,0)
 . L -^LR(LRDFN,LRSS,LRXIDT,0)
"RTN","AHMLDOL5",156,0)
 . S LRCDT=$$FMADD^XLFDT(LRCDT,0,0,0,1)
"RTN","AHMLDOL5",157,0)
 ;
"RTN","AHMLDOL5",158,0)
 ; Create entry in appropriate subscript in LAB DATA file (#63).
"RTN","AHMLDOL5",159,0)
 S LRX=$S(LRSS="CH":63.04,LRSS="MI":63.05,LRSS="BB":63.01,LRSS="SP":63.08,LRSS="CY":63.09,LRSS="EM":63.02,1:0)
"RTN","AHMLDOL5",160,0)
 S LRFDAIEN(1)=LRIDT
"RTN","AHMLDOL5",161,0)
 S LRFDA(63,LRX,"+1,"_LRDFN_",",.01)=LRCDT
"RTN","AHMLDOL5",162,0)
 S LRFDA(63,LRX,"+1,"_LRDFN_",",.06)=LRACC
"RTN","AHMLDOL5",163,0)
 I LRSS'="CH" D
"RTN","AHMLDOL5",164,0)
 . S LRFDA(63,LRX,"+1,"_LRDFN_",",.1)=ORNP
"RTN","AHMLDOL5",165,0)
 . S LRFDA(63,LRX,"+1,"_LRDFN_",",.08)=LRLLOC
"RTN","AHMLDOL5",166,0)
 I LRSS="CH" D
"RTN","AHMLDOL5",167,0)
 . S LRFDA(63,LRX,"+1,"_LRDFN_",",.12)=3
"RTN","AHMLDOL5",168,0)
 . S LRFDA(63,LRX,"+1,"_LRDFN_",",.11)=LRLLOC
"RTN","AHMLDOL5",169,0)
 I LRSS="MI" S LRFDA(63,LRX,"+1,"_LRDFN_",",38)=3
"RTN","AHMLDOL5",170,0)
 I "SPCYEM"[LRSS N LRABV S LRABV=$P(LRACC," ")
"RTN","AHMLDOL5",171,0)
 I LRX D UPDATE^DIE("","LRFDA(63)","LRFDAIEN","LRDIE(63)")
"RTN","AHMLDOL5",172,0)
 I $D(LRDIE(63)) D MAILALRT^LRWLST12("ST2~LRWLST1")
"RTN","AHMLDOL5",173,0)
 L -^LR(LRDFN,LRSS,LRIDT,0)
"RTN","AHMLDOL5",174,0)
 ;
"RTN","AHMLDOL5",175,0)
 Q
"RTN","AHMLDOL5",176,0)
 ;
"RTN","AHMLDOL5",177,0)
 ;
"RTN","AHMLDOL5",178,0)
GTWLN ;
"RTN","AHMLDOL5",179,0)
 N X
"RTN","AHMLDOL5",180,0)
 ;
"RTN","AHMLDOL5",181,0)
 ; Execute accession transform for this area.
"RTN","AHMLDOL5",182,0)
 S LRAN=0
"RTN","AHMLDOL5",183,0)
 S X=$$GET1^DIQ(68,LRWLC,.051,"I")
"RTN","AHMLDOL5",184,0)
 X:X'="" X
"RTN","AHMLDOL5",185,0)
 ;
"RTN","AHMLDOL5",186,0)
 D GETLOCK(LRWLC,LRAD)
"RTN","AHMLDOL5",187,0)
 D CHECK68(LRWLC,LRAD)
"RTN","AHMLDOL5",188,0)
 ;
"RTN","AHMLDOL5",189,0)
 S:'LRAN LRAN=1+$P($G(^LRO(68,LRWLC,1,LRAD,1,0)),U,3)
"RTN","AHMLDOL5",190,0)
 I "CYEMSP"'[LRSS F  Q:'$D(^LRO(68,LRWLC,1,LRAD,1,LRAN))  S LRAN=LRAN+1
"RTN","AHMLDOL5",191,0)
 ; check for AP Accessions
"RTN","AHMLDOL5",192,0)
 I "CYEMSP"[LRSS F  Q:'$D(^LRO(68,LRWLC,1,LRAD,1,LRAN))&'$D(^LR("A"_LRSS_"A",$E(LRAD,1,3),LRAN))  S LRAN=LRAN+1
"RTN","AHMLDOL5",193,0)
 D SETAN(LRWLC,LRAD,LRAN)
"RTN","AHMLDOL5",194,0)
 L -^LRO(68,LRWLC,1,LRAD,1,0)
"RTN","AHMLDOL5",195,0)
 Q
"RTN","AHMLDOL5",196,0)
 ;
"RTN","AHMLDOL5",197,0)
 ;
"RTN","AHMLDOL5",198,0)
CHECK68(LRAA,LRAD) ; Check for/set header node of ^LRO(68) 68.01 subfile.
"RTN","AHMLDOL5",199,0)
 ;
"RTN","AHMLDOL5",200,0)
 ; Call with LRAA = ien of entry in file #68
"RTN","AHMLDOL5",201,0)
 ;           LRAD = accession date in fileman format
"RTN","AHMLDOL5",202,0)
 ;
"RTN","AHMLDOL5",203,0)
 ; Set accession date in file #68 for this accession.
"RTN","AHMLDOL5",204,0)
 ; Check for existence of accession number multiple but not accession date multiple,
"RTN","AHMLDOL5",205,0)
 ; FileMan DBS call fails when accession number multiple exists but accession date multiple does not.
"RTN","AHMLDOL5",206,0)
 ; If this condition found then set missing node directly and quit.
"RTN","AHMLDOL5",207,0)
 ;
"RTN","AHMLDOL5",208,0)
 I '$D(^LRO(68,LRAA,1,LRAD,0)) D
"RTN","AHMLDOL5",209,0)
 . N LRFDA,LRFDAIEN,LRDIE,X
"RTN","AHMLDOL5",210,0)
 . S X=$Q(^LRO(68,LRAA,1,LRAD,0))
"RTN","AHMLDOL5",211,0)
 . I X'="",$QS(X,4)=LRAD S $P(^LRO(68,LRAA,1,LRAD,0),"^")=LRAD Q
"RTN","AHMLDOL5",212,0)
 . S (LRFDAIEN(1),LRFDA(1,68.01,"+1,"_LRAA_",",.01))=LRAD
"RTN","AHMLDOL5",213,0)
 . D UPDATE^DIE("","LRFDA(1)","LRFDAIEN","LRDIE(1)")
"RTN","AHMLDOL5",214,0)
 . I $D(LRDIE(1)) D MAILALRT^LRWLST12("CHECK~LRWLST1")
"RTN","AHMLDOL5",215,0)
 ;
"RTN","AHMLDOL5",216,0)
 Q
"RTN","AHMLDOL5",217,0)
 ;
"RTN","AHMLDOL5",218,0)
 ;
"RTN","AHMLDOL5",219,0)
GETLOCK(LRAA,LRAD) ; Obtain lock on zeroth node of this accession date
"RTN","AHMLDOL5",220,0)
 ; Call with LRAA = ien of entry in file #68
"RTN","AHMLDOL5",221,0)
 ;           LRAD = accession date in fileman format
"RTN","AHMLDOL5",222,0)
 ;
"RTN","AHMLDOL5",223,0)
 F  L +^LRO(68,LRAA,1,LRAD,1,0):10 Q:$T  D
"RTN","AHMLDOL5",224,0)
 . I $D(ZTQUEUED)!($G(LRQUIET)) Q
"RTN","AHMLDOL5",225,0)
 . W !!?5,"Accession area ",$P(^LRO(68,LRAA,0),"^")," is locked by another user.",!,$C(7)
"RTN","AHMLDOL5",226,0)
 Q
"RTN","AHMLDOL5",227,0)
 ;
"RTN","AHMLDOL5",228,0)
 ;
"RTN","AHMLDOL5",229,0)
SETAN(LRAA,LRAD,LRAN) ; Create stub entry in file #68 for this accession.
"RTN","AHMLDOL5",230,0)
 ;
"RTN","AHMLDOL5",231,0)
 ; Call with LRAA = ien of entry in file #68
"RTN","AHMLDOL5",232,0)
 ;           LRAD = accession date in fileman format
"RTN","AHMLDOL5",233,0)
 ;           LRAN = accession number
"RTN","AHMLDOL5",234,0)
 ;
"RTN","AHMLDOL5",235,0)
 N LR6802,LRFDA,LRFDAIEN,LRDIE,LRLOCKOK,LRLOOPCT
"RTN","AHMLDOL5",236,0)
 S LR6802=LRAD_","_LRAA_","
"RTN","AHMLDOL5",237,0)
 S LRFDAIEN(1)=LRAN
"RTN","AHMLDOL5",238,0)
 S LRFDA(2,68.02,"+1,"_LR6802,.01)=LRDFN
"RTN","AHMLDOL5",239,0)
 ;
"RTN","AHMLDOL5",240,0)
 ; Modification to prevent lock failures - loop 10 times to give system a chance to get lock
"RTN","AHMLDOL5",241,0)
 S LRLOCKOK=0
"RTN","AHMLDOL5",242,0)
 F LRLOOPCT=1:1:10 D  Q:LRLOCKOK
"RTN","AHMLDOL5",243,0)
 . D UPDATE^DIE("","LRFDA(2)","LRFDAIEN","LRDIE(2)")
"RTN","AHMLDOL5",244,0)
 . I $G(LRDIE(2,"DIERR")),LRDIE(2,"DIERR",1)<120  H 5 K:LRLOOPCT<10 LRDIE(2)
"RTN","AHMLDOL5",245,0)
 . E  S LRLOCKOK=1
"RTN","AHMLDOL5",246,0)
 ;
"RTN","AHMLDOL5",247,0)
 I $D(LRDIE(2)) D MAILALRT^LRWLST12("SET~LRWLST1")
"RTN","AHMLDOL5",248,0)
 Q
"RTN","AHMLDOL5",249,0)
 ;
"RTN","AHMLDOL5",250,0)
EXIT ;
"RTN","AHMLDOL5",251,0)
 K DFN,LR696,LRACC,LRALL,LRCAPLOC,LRCDT,LRDFN,LRDPF,LREND,LRID,LRIDT
"RTN","AHMLDOL5",252,0)
 K LRLBLBP,LRLLOC,LRNT,LRODT,LROLLOC,LRORDR,LRORDRR,LROT,LRPHSET
"RTN","AHMLDOL5",253,0)
 K LRPRAC,LRQUIET,LRSD,LRRSITE,LRRSTAT,LRSAMP,LRSPEC,LRSS,LRSN
"RTN","AHMLDOL5",254,0)
 K LRTREA,LRUID,LRUNQ,LRWLC,SSN,ZTQUEUED,ORNP
"RTN","AHMLDOL5",255,0)
 Q
"RTN","AHMLDOL5",256,0)
 ;
"RTN","AHMLDOL6")
0^7^B109432765
"RTN","AHMLDOL6",1,0)
AHMLDOL6 ;LEIDOS/TCK Remote ordering Lab results ; 2/9/17 1:47pm
"RTN","AHMLDOL6",2,0)
 ;;1.0;Orders Portability;**1**;March 1, 2010;Build 53
"RTN","AHMLDOL6",3,0)
 ;
"RTN","AHMLDOL6",4,0)
 ;2809 - check NTE.3 comments for HL7 encoded esc sequences and decode
"RTN","AHMLDOL6",5,0)
 Q
"RTN","AHMLDOL6",6,0)
 ;
"RTN","AHMLDOL6",7,0)
RSLT ; parse results message
"RTN","AHMLDOL6",8,0)
 ; Check user keys, site definition, etc...
"RTN","AHMLDOL6",9,0)
 K REC
"RTN","AHMLDOL6",10,0)
 N TSTARY,LRTST,XMY,D,LCMMT,ARY
"RTN","AHMLDOL6",11,0)
 D ^LRPARAM
"RTN","AHMLDOL6",12,0)
 S (LRAA,LRAD,LRAN,PNL)=0
"RTN","AHMLDOL6",13,0)
 S XMY=HLARY("ORC",1)
"RTN","AHMLDOL6",14,0)
 ; GET PROVIDER AND LAB TEST FROM OBR segment.  LRTS points to Lab Test file (60).
"RTN","AHMLDOL6",15,0)
 S LRPRV=$P($P(XMY,D1,12),D2)
"RTN","AHMLDOL6",16,0)
 S XMY=HLARY("OBR",1)
"RTN","AHMLDOL6",17,0)
 S LRTST=$P(XMY,D1,4)
"RTN","AHMLDOL6",18,0)
 I LRTST["."!(LRTST'?.N) S LRTST=$P($P(XMY,D1,4),D2,4)
"RTN","AHMLDOL6",19,0)
 ; Get VERIFYING PERSON from OBX segment. 11/8/2012 DWA to resolve NCH00002638.
"RTN","AHMLDOL6",20,0)
 ;IF THE TEST IS A PANEL, LOOK FOR THE COMPONENT TEST IN OBX.
"RTN","AHMLDOL6",21,0)
 I $D(^LAB(60,LRTST,2,0)) S PNL=1
"RTN","AHMLDOL6",22,0)
 I PNL,$D(HLARY("OBX")) D
"RTN","AHMLDOL6",23,0)
 .S II="" F  S II=$O(HLARY("OBX",II)) Q:II=""  D
"RTN","AHMLDOL6",24,0)
 ..S XMY=HLARY("OBX",II)
"RTN","AHMLDOL6",25,0)
 ..S CMPTST=$P(XMY,D1,3)
"RTN","AHMLDOL6",26,0)
 ..I CMPTST["." S CMPTST=$P($P(XMY,D1,3),D2,4)
"RTN","AHMLDOL6",27,0)
 ..Q:$D(ARY(CMPTST))
"RTN","AHMLDOL6",28,0)
 ..S JVTECH=+$P($P(XMY,D1,15),D2)
"RTN","AHMLDOL6",29,0)
 ..Q:XMY["C4"
"RTN","AHMLDOL6",30,0)
 ..S ARY(CMPTST)=""
"RTN","AHMLDOL6",31,0)
 ..S TSTARY(II)=+CMPTST
"RTN","AHMLDOL6",32,0)
 K LTST,ARY
"RTN","AHMLDOL6",33,0)
 ;
"RTN","AHMLDOL6",34,0)
 ; Get order number from ORC-2.  ORDNM points to Orders file (100).
"RTN","AHMLDOL6",35,0)
 S XMY=HLARY("ORC",1),ORDNM=$P(XMY,D1,2),ORNUM=+ORDNM,LIEN=ORNUM_","
"RTN","AHMLDOL6",36,0)
 S LRDATA=$$GET1^DIQ(100,LIEN,33,"I")
"RTN","AHMLDOL6",37,0)
 S LRORD=$P(LRDATA,";"),LRODT=$P(LRDATA,";",2),LRSND=$P(LRDATA,";",3)
"RTN","AHMLDOL6",38,0)
 ; Get performing site number from ORC-13 and check if it is in the Institution file ^(DIC(4)
"RTN","AHMLDOL6",39,0)
 S RSITE=$P($G(XMY),D1,13) K XMY I RSITE="" S RSITE=0
"RTN","AHMLDOL6",40,0)
 I RSITE D
"RTN","AHMLDOL6",41,0)
 .S LRFILE=4,LRIEN=RSITE_",",SITE=$$GET1^DIQ(LRFILE,LRIEN,.01,"I")
"RTN","AHMLDOL6",42,0)
 .I SITE="" S RSITE=0
"RTN","AHMLDOL6",43,0)
 S XMY=HLARY("OBR",1)
"RTN","AHMLDOL6",44,0)
 ; Get accession number in OBR-20 and parse the segments
"RTN","AHMLDOL6",45,0)
 S LRACC=$$GETACC^AHMLDOL2(ORNUM,LRODT,LRORD,LRSND,LRTST)
"RTN","AHMLDOL6",46,0)
 I LRACC="" S AHOUT(1)="-1^Error: Accession number not found" Q
"RTN","AHMLDOL6",47,0)
 S LRX=LRACC
"RTN","AHMLDOL6",48,0)
 ; Pieces: Lab type (e.g. CH), date, accession for date
"RTN","AHMLDOL6",49,0)
 S (X1,X2,X3)="",X1=$P(LRX," ",1),X2=$P(LRX," ",2),X3=$P(LRX," ",3)
"RTN","AHMLDOL6",50,0)
 S:X3=""&(+X2=X2) X3=X2,X2=""
"RTN","AHMLDOL6",51,0)
 ; LRAD (Accession date) formatted from X2
"RTN","AHMLDOL6",52,0)
 S %DT="EP",X=X2 D ^%DT S LRAD=Y
"RTN","AHMLDOL6",53,0)
 ; Build comments array from NTE segments (NTE-3)
"RTN","AHMLDOL6",54,0)
 I $D(HLARY("NTE")) D
"RTN","AHMLDOL6",55,0)
 .S NN="" F  S NN=$O(HLARY("NTE",NN)) Q:NN=""  D
"RTN","AHMLDOL6",56,0)
 ..S STOP=0
"RTN","AHMLDOL6",57,0)
 ..S XMY=$P(HLARY("NTE",NN),"|",3)
"RTN","AHMLDOL6",58,0)
 ..I XMY["]" D
"RTN","AHMLDOL6",59,0)
 ...F II=1:1:STOP D
"RTN","AHMLDOL6",60,0)
 ....S Y=$P(XMY,"]",II)
"RTN","AHMLDOL6",61,0)
 ....I Y="" S STOP=1 Q
"RTN","AHMLDOL6",62,0)
 ....I Y'="" S LCMMT(II)=Y
"RTN","AHMLDOL6",63,0)
 ..I 'STOP S LCMMT(NN)=XMY    ;2809 decode esc seq
"RTN","AHMLDOL6",64,0)
 S LRRDT=$$NOW^XLFDT,LRNOW=LRRDT,LRDCMP=LRRDT
"RTN","AHMLDOL6",65,0)
 ; Accession number relative to date
"RTN","AHMLDOL6",66,0)
 S LRAN=+X3
"RTN","AHMLDOL6",67,0)
 ; LRAA = internal value of accession area ^LRO(68,
"RTN","AHMLDOL6",68,0)
 S D="B",DIC="^LRO(68,",DIC(0)="D",X=X1 D IX^DIC
"RTN","AHMLDOL6",69,0)
 S LRAA=+Y
"RTN","AHMLDOL6",70,0)
 ; Lab type
"RTN","AHMLDOL6",71,0)
 S LRFILE=68,LRIEN=LRAA_","
"RTN","AHMLDOL6",72,0)
 S LRSS=$$GET1^DIQ(LRFILE,LRIEN,.02,"I")
"RTN","AHMLDOL6",73,0)
 ; LRDFN = Internal entry in LR( that is being worked on.
"RTN","AHMLDOL6",74,0)
 S LRFILE=68.02,LRIEN=LRAN_","_LRAD_","_LRAA_","
"RTN","AHMLDOL6",75,0)
 S LRDFN=$$GET1^DIQ(LRFILE,LRIEN,.01,"I")
"RTN","AHMLDOL6",76,0)
 ; Get collection Date/Time
"RTN","AHMLDOL6",77,0)
 S LRCDT=$$GET1^DIQ(LRFILE,LRIEN,9,"I")
"RTN","AHMLDOL6",78,0)
 ; Get UID number
"RTN","AHMLDOL6",79,0)
 S LRUID=$$GET1^DIQ(LRFILE,LRIEN,16,"I")
"RTN","AHMLDOL6",80,0)
 ; LRIDT = Inverse date/time that data is stored at. ^LR(LRDFN,"CH",
"RTN","AHMLDOL6",81,0)
 S LRIDT=$$GET1^DIQ(LRFILE,LRIEN,13.5,"I")
"RTN","AHMLDOL6",82,0)
 I LRIDT<1 S AHOUT(1)="-1^Error: No Collection Date/Time found" Q
"RTN","AHMLDOL6",83,0)
 ; LRORD points to Orders file (100)
"RTN","AHMLDOL6",84,0)
 ; LRSN is specimen number, points to TOPOGRAPHY file (61)
"RTN","AHMLDOL6",85,0)
 S LRORD=$$GET1^DIQ(LRFILE,LRIEN,14,"I")
"RTN","AHMLDOL6",86,0)
 S:LRORD="" LRORD=0
"RTN","AHMLDOL6",87,0)
 ; LRODT = IEN of file (#
"RTN","AHMLDOL6",88,0)
 S LRODT=$$GET1^DIQ(LRFILE,LRIEN,3,"I")
"RTN","AHMLDOL6",89,0)
 S:'LRODT LRODT=$$GET1^DIQ(LRFILE,LRIEN,2,"I")
"RTN","AHMLDOL6",90,0)
 S LRSN=$$GET1^DIQ(LRFILE,LRIEN,4,"I")
"RTN","AHMLDOL6",91,0)
 ; Add technologist and date to Accession file now, index both. 11/8/2012 DWA changed out LRPRV for JVTECH since file calls for TECHNOLOGIST.  Part of resolution for NCH00002638
"RTN","AHMLDOL6",92,0)
 I $G(LRTST)>0,$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,"B",LRTST)) D
"RTN","AHMLDOL6",93,0)
 .S LRFILE=68.04,LRIEN=LRTST_","_LRAN_","_LRAD_","_LRAA_","
"RTN","AHMLDOL6",94,0)
 .S LRFDA(4,LRFILE,LRIEN,3)=$G(JVTECH)
"RTN","AHMLDOL6",95,0)
 .S LRFDA(4,LRFILE,LRIEN,4)=$G(LRRDT)
"RTN","AHMLDOL6",96,0)
 .D UPDATE^DIE("","LRFDA(4)","LRIEN","LRMSG")
"RTN","AHMLDOL6",97,0)
 .Q:'$D(^LRO(68,LRAA,1,LRAD,1,LRAN,4,"B",LRTST))
"RTN","AHMLDOL6",98,0)
 S ^LRO(68,LRAA,1,LRAD,1,"AD",LRAD,+LRAN)="",^LRO(68,LRAA,1,LRAD,1,"AC",LRAD,+LRAN)=""
"RTN","AHMLDOL6",99,0)
 S LRVAL=LRTST
"RTN","AHMLDOL6",100,0)
 ; I test type is not Chemistry quit
"RTN","AHMLDOL6",101,0)
 I LRSS'="CH" Q
"RTN","AHMLDOL6",102,0)
 ; Special case for Chem/Hem.
"RTN","AHMLDOL6",103,0)
 ; Get results from OBX segments
"RTN","AHMLDOL6",104,0)
 S NN="" F  S NN=$O(HLARY("OBX",NN)) Q:NN=""  D
"RTN","AHMLDOL6",105,0)
 .S XMY=HLARY("OBX",NN)
"RTN","AHMLDOL6",106,0)
 .; LRTS is pointer to ^LAB(60), LRRSLT is the result, LRSB is subscript needed to file results.
"RTN","AHMLDOL6",107,0)
 .S TST=$P(XMY,D1,3)
"RTN","AHMLDOL6",108,0)
 .I TST["."!(TST'?.N) S TST=$P($P(XMY,D1,3),D2,4)
"RTN","AHMLDOL6",109,0)
 .S TARY(NN)=TST,LRRSLT(NN)=$P(XMY,D1,5)
"RTN","AHMLDOL6",110,0)
 .; Get DATA NAME from field 400 of file (#60)
"RTN","AHMLDOL6",111,0)
 .S LRFILE=60,LRIEN=TARY(NN)_","
"RTN","AHMLDOL6",112,0)
 .S LRSB(NN)=$$GET1^DIQ(LRFILE,LRIEN,400,"I")
"RTN","AHMLDOL6",113,0)
 .; Get High or Low flag
"RTN","AHMLDOL6",114,0)
 .S LRHL(NN)=$P(XMY,D1,8)
"RTN","AHMLDOL6",115,0)
 .S FLG=LRHL(NN)
"RTN","AHMLDOL6",116,0)
 .I FLG["H"&(FLG["*") S YYY=3
"RTN","AHMLDOL6",117,0)
 .I FLG["L"&(FLG["*") S YYY=3
"RTN","AHMLDOL6",118,0)
 .I FLG["H"&(FLG'["*") S YYY=2
"RTN","AHMLDOL6",119,0)
 .I FLG["L"&(FLG'["*") S YYY=2
"RTN","AHMLDOL6",120,0)
 .I FLG'["H"&(FLG'["L") S YYY=1
"RTN","AHMLDOL6",121,0)
 .; Get units of measurement and result range from message
"RTN","AHMLDOL6",122,0)
 .S LRUNTS(NN)=$P(XMY,D1,6),LRRNGE(NN)=$P(XMY,D1,7)
"RTN","AHMLDOL6",123,0)
 .; Set location from RSITE variable
"RTN","AHMLDOL6",124,0)
 .S LRLOC=$G(RSITE)
"RTN","AHMLDOL6",125,0)
 .; Get result status
"RTN","AHMLDOL6",126,0)
 .S LRSTS=$P(XMY,D1,11)
"RTN","AHMLDOL6",127,0)
 ; Check for entry in Lab Data file (#63) using reverse date.
"RTN","AHMLDOL6",128,0)
 S LRFILE=63.04,LRIEN=LRIDT_","_LRDFN_","
"RTN","AHMLDOL6",129,0)
 I '$$GET1^DIQ(LRFILE,LRIEN,.01,"I") S AHOUT(1)="-1^Error: No Data file found" Q
"RTN","AHMLDOL6",130,0)
 ; Get specimen type from file Lab Data file, (#63)
"RTN","AHMLDOL6",131,0)
 S LRSPT(1)=$$GET1^DIQ(LRFILE,LRIEN,.05,"I")
"RTN","AHMLDOL6",132,0)
 S LRFILE=69.01,LRIEN=LRSN_","_LRODT_","
"RTN","AHMLDOL6",133,0)
 I $$GET1^DIQ(LRFILE,LRIEN,.01,"I"),'$$GET1^DIQ(LRFILE,LRIEN,10,"I") S AHOUT(1)="This order has not been collected." Q
"RTN","AHMLDOL6",134,0)
 S COLST=$$GET1^DIQ(LRFILE,LRIEN,13,"I")
"RTN","AHMLDOL6",135,0)
 I COLST'="C" S AHOUT(1)="-1^Error^You cannot verify an accession which has not been collected." Q
"RTN","AHMLDOL6",136,0)
 Q:$D(AHOUT)
"RTN","AHMLDOL6",137,0)
 ;
"RTN","AHMLDOL6",138,0)
CH ;
"RTN","AHMLDOL6",139,0)
 N NN,XDATA,X5
"RTN","AHMLDOL6",140,0)
 S LRFILE=63.04,LRIEN=LRIDT_","_LRDFN_","
"RTN","AHMLDOL6",141,0)
 S LRFDA(LRFILE,LRIEN,.03)=$G(LRRDT)
"RTN","AHMLDOL6",142,0)
 S LRFDA(LRFILE,LRIEN,.04)=$G(JVTECH)
"RTN","AHMLDOL6",143,0)
 ; File Lab result in Chemistry file (63.04), using info in XDATA.
"RTN","AHMLDOL6",144,0)
 D FILE^DIE("","LRFDA") K LRFDA,LRIEN,LRFILE,LRMSG,LRIENS
"RTN","AHMLDOL6",145,0)
 S NN="" F  S NN=$O(TARY(NN)) Q:NN=""  D
"RTN","AHMLDOL6",146,0)
 .Q:LRSB(NN)=""
"RTN","AHMLDOL6",147,0)
 .S $P(XDATA,"^",1)=LRRSLT(NN)
"RTN","AHMLDOL6",148,0)
 .S $P(XDATA,"^",2)=LRHL(NN)
"RTN","AHMLDOL6",149,0)
 . ; Need to pull Workload code from Lab Results file, since CHCS doesn't provide.
"RTN","AHMLDOL6",150,0)
 . ;Code fix for DJE-NCHICAGO-2790
"RTN","AHMLDOL6",151,0)
 .S $P(XDATA,"^",3)=$P($G(^LR(LRDFN,LRSS,LRIDT,"ORUT",1,0)),D2,1)_"!!!!!!"_TARY(NN)
"RTN","AHMLDOL6",152,0)
 .S $P(XDATA,"^",4)=$G(JVTECH)
"RTN","AHMLDOL6",153,0)
 .S $P(XDATA,"^",9)=LRLOC
"RTN","AHMLDOL6",154,0)
 .S $P(XDATA,"^",10)=1
"RTN","AHMLDOL6",155,0)
 .S $P(XDATA,"^",13)=1
"RTN","AHMLDOL6",156,0)
 .S X5=$G(LRSPT(1)),LRSPEC=X5
"RTN","AHMLDOL6",157,0)
 .S LRFILE=60.01,LRIEN=LRSPEC_","_TARY(NN)_","
"RTN","AHMLDOL6",158,0)
 .S SS=$$GET1^DIQ(LRFILE,LRIEN,.01,"I")
"RTN","AHMLDOL6",159,0)
 .S S1=$$GET1^DIQ(LRFILE,LRIEN,1,"I")
"RTN","AHMLDOL6",160,0)
 .S S2=$$GET1^DIQ(LRFILE,LRIEN,2,"I")
"RTN","AHMLDOL6",161,0)
 .S S3=$$GET1^DIQ(LRFILE,LRIEN,3,"I")
"RTN","AHMLDOL6",162,0)
 .S S4=$$GET1^DIQ(LRFILE,LRIEN,4,"I")
"RTN","AHMLDOL6",163,0)
 .S S5="",S6=$$GET1^DIQ(LRFILE,LRIEN,6,"I")
"RTN","AHMLDOL6",164,0)
 .S $P(X5,D2)=SS_"^"_S1_"^"_S2_"^"_S3_"^"_S4_"^"_S5_"^"_S6
"RTN","AHMLDOL6",165,0)
 .S $P(X5,D2,2)=$P(LRRNGE(NN),"-"),$P(X5,D2,3)=$P(LRRNGE(NN),"-",2),$P(X5,D2,7)=LRUNTS(NN)
"RTN","AHMLDOL6",166,0)
 .I $P($G(X5),D2,8)="" S X5=X5_"^"
"RTN","AHMLDOL6",167,0)
 .S X5=$TR(X5,"^","!")
"RTN","AHMLDOL6",168,0)
 .S $P(XDATA,"^",5)=X5
"RTN","AHMLDOL6",169,0)
 .; Stuff data into Lab data file
"RTN","AHMLDOL6",170,0)
 .S ^LR(LRDFN,LRSS,LRIDT,LRSB(NN))=XDATA
"RTN","AHMLDOL6",171,0)
 .K XDATA ;Kill XDATA to be ready for component tests. DWA-NCHICAGO-2790
"RTN","AHMLDOL6",172,0)
 N CHECK S CHECK=0
"RTN","AHMLDOL6",173,0)
 D CHKRSLT(LRDFN,LRSS,LRIDT,.CHECK)
"RTN","AHMLDOL6",174,0)
 I $D(LCMMT) D
"RTN","AHMLDOL6",175,0)
 .K LRFDA
"RTN","AHMLDOL6",176,0)
 .I 'CHECK D CMARY(.LCMMT)
"RTN","AHMLDOL6",177,0)
 .N LRFILE,LRFDA,LRIEN
"RTN","AHMLDOL6",178,0)
 .S NN="" F  S NN=$O(LCMMT(NN)) Q:NN=""  D
"RTN","AHMLDOL6",179,0)
 ..S TXT=LCMMT(NN)
"RTN","AHMLDOL6",180,0)
 ..Q:TXT=""
"RTN","AHMLDOL6",181,0)
 ..S LRIENS=NN_","_LRIDT_","_LRDFN_","
"RTN","AHMLDOL6",182,0)
 ..S TX=$$GET1^DIQ(63.041,LRIENS,.01,"E")
"RTN","AHMLDOL6",183,0)
 ..Q:TX=TXT
"RTN","AHMLDOL6",184,0)
 ..K LRFDA
"RTN","AHMLDOL6",185,0)
 ..S LRFILE=63.041,LRIEN="+"_NN_","_LRIDT_","_LRDFN_","
"RTN","AHMLDOL6",186,0)
 ..S LRFDA(1,LRFILE,LRIEN,.01)=$G(LCMMT(NN))
"RTN","AHMLDOL6",187,0)
 ..D UPDATE^DIE("","LRFDA(1)","LRIENS","LRERR(2)")
"RTN","AHMLDOL6",188,0)
 ;SEND ALERT TO CPRS
"RTN","AHMLDOL6",189,0)
 I $G(YYY)>0 D SNDALRT(LRDFN,LRSS,LRIDT,LRUID,LRTST,YYY)
"RTN","AHMLDOL6",190,0)
 S STA=2
"RTN","AHMLDOL6",191,0)
 S LRNOW=$$NOW^XLFDT
"RTN","AHMLDOL6",192,0)
 ; Get Date/Time ordered from field 5 of Lab order entry file, (#69).
"RTN","AHMLDOL6",193,0)
 S LRFILE=69.01,LRIEN=LRSN_","_LRODT_","
"RTN","AHMLDOL6",194,0)
 S LRDTO=$$GET1^DIQ(LRFILE,LRIEN,5,"I")
"RTN","AHMLDOL6",195,0)
 S LRFDA(3,LRFILE,LRIEN,20)=LRDTO
"RTN","AHMLDOL6",196,0)
 S LRFDA(3,LRFILE,LRIEN,21)=LRNOW
"RTN","AHMLDOL6",197,0)
 D UPDATE^DIE("","LRFDA(3)","LRIENS","LRMSG")
"RTN","AHMLDOL6",198,0)
 S LRFILE=68.02,LRIEN=LRAN_","_LRAD_","_LRAA_","
"RTN","AHMLDOL6",199,0)
 I '$$GET1^DIQ(LRFILE,LRIEN,12,"I") D
"RTN","AHMLDOL6",200,0)
 .S LRFDA(3,LRFILE,LRIEN,12)=$G(LRNOW)
"RTN","AHMLDOL6",201,0)
 S LRFDA(3,LRFILE,LRIEN,13)=$$NOW^XLFDT
"RTN","AHMLDOL6",202,0)
 D UPDATE^DIE("","LRFDA(3)","LRIEN","LRMSG")
"RTN","AHMLDOL6",203,0)
 S LRFILE=68.02,LRIEN=LRAN_","_LRAD_","_LRAA_","
"RTN","AHMLDOL6",204,0)
 S LRDFN=$$GET1^DIQ(LRFILE,LRIEN,.01,"I")
"RTN","AHMLDOL6",205,0)
 S ^LR(LRDFN,"CH",LRIDT,"RF")=$P(^LRO(68,LRAA,1,LRAD,1,LRAN,.3),D2,2)
"RTN","AHMLDOL6",206,0)
 S ^LR(LRDFN,"CH",LRIDT,"ORU")=^LRO(68,LRAA,1,LRAD,1,LRAN,.3)
"RTN","AHMLDOL6",207,0)
 S LRFILE=100,LRIEN=ORNUM_","
"RTN","AHMLDOL6",208,0)
 I LRDATA'[LRSS D
"RTN","AHMLDOL6",209,0)
 .S LRFDA(4,LRFILE,LRIEN,33)=LRDATA_";"_LRSS_";"_LRIDT
"RTN","AHMLDOL6",210,0)
 .D UPDATE^DIE("","LRFDA(4)","LRIEN","LRMSG")
"RTN","AHMLDOL6",211,0)
 ; Set Order file (#100), field (#22) to LRNOW and field (#5) to "COMPLETED" 
"RTN","AHMLDOL6",212,0)
 S DIE="^OR(100,",DA=ORNUM,ST=2,DR="22////"_LRNOW_";5////"_ST_";" D ^DIE K DIE,DA
"RTN","AHMLDOL6",213,0)
 S AHOUT(1)=ORNUM_"^RS"
"RTN","AHMLDOL6",214,0)
 D END
"RTN","AHMLDOL6",215,0)
 Q
"RTN","AHMLDOL6",216,0)
 ;
"RTN","AHMLDOL6",217,0)
SNDALRT(LRDFN,LRSS,LRIDT,LRUID,LRTST,YYY) ;SEND ALERTS TO CPRS
"RTN","AHMLDOL6",218,0)
 ;  Call with LRDFN = file #63 IEN
"RTN","AHMLDOL6",219,0)
 ;             LRSS = file #63 subscript
"RTN","AHMLDOL6",220,0)
 ;            LRIDT = inverse d/t of entry in file #63
"RTN","AHMLDOL6",221,0)
 ;            LRUID = accession's UID
"RTN","AHMLDOL6",222,0)
 ;
"RTN","AHMLDOL6",223,0)
 ; Only supports CH and MI. AP subscript handled by separate API.
"RTN","AHMLDOL6",224,0)
 ;
"RTN","AHMLDOL6",225,0)
 N DFN,DIC,DIR,DIRUT,DTOUT,DUOUT,LRC,LRDOCS,LRMORE,LRQUIT,LRTST,LRTYPE,LRX,LRXQA,LRY,XX,Y
"RTN","AHMLDOL6",226,0)
 ;
"RTN","AHMLDOL6",227,0)
 S (LRTYPE,LRXQA,LRY,CTR)=""
"RTN","AHMLDOL6",228,0)
 ;
"RTN","AHMLDOL6",229,0)
 ; Select test to alert
"RTN","AHMLDOL6",230,0)
 S LRTST=$G(TST)
"RTN","AHMLDOL6",231,0)
 S TSTNM=$$GET1^DIQ(60,TST,.01,"E")
"RTN","AHMLDOL6",232,0)
 S LRTST=LRTST_"^"_TSTNM_"^"_LRTST
"RTN","AHMLDOL6",233,0)
 S CTR=$G(CTR)+1,LRTYPE(1)=3
"RTN","AHMLDOL6",234,0)
 I YYY=1 S LRTYPE(CTR)=3
"RTN","AHMLDOL6",235,0)
 I YYY>1 D
"RTN","AHMLDOL6",236,0)
 .F II="ACT","IN" D
"RTN","AHMLDOL6",237,0)
 ..I II="ACT" D
"RTN","AHMLDOL6",238,0)
 ...S CTR=$G(CTR)+1
"RTN","AHMLDOL6",239,0)
 ...I YYY=2 S LRTYPE(CTR)=14
"RTN","AHMLDOL6",240,0)
 ...I YYY=3 S LRTYPE(CTR)=57
"RTN","AHMLDOL6",241,0)
 ..I II="IN" D
"RTN","AHMLDOL6",242,0)
 ...S CTR=$G(CTR)+1
"RTN","AHMLDOL6",243,0)
 ...I YYY=2 S LRTYPE(CTR)=24
"RTN","AHMLDOL6",244,0)
 ...I YYY=3 S LRTYPE(CTR)=58
"RTN","AHMLDOL6",245,0)
 Q:'$D(LRTYPE)
"RTN","AHMLDOL6",246,0)
 S CT="" F  S CT=$O(LRTYPE(CT)) Q:CT=""  D
"RTN","AHMLDOL6",247,0)
 .Q:CT=""
"RTN","AHMLDOL6",248,0)
 .S LRTYPE=LRTYPE(CT)
"RTN","AHMLDOL6",249,0)
 .D GETDOCS^LR7ORB3(.LRDOCS,LRDFN,LRSS,LRIDT)
"RTN","AHMLDOL6",250,0)
 .S (LRC,LRXQA)=0
"RTN","AHMLDOL6",251,0)
 .S LRC=1,LRDUZ=$P(LRDOCS(LRC),"^")
"RTN","AHMLDOL6",252,0)
 .S LRXQA(LRDUZ)=$P(LRDOCS(LRC),"^",3)
"RTN","AHMLDOL6",253,0)
 .S LRY=$$OR^LR7ORB3(LRTYPE,LRDFN,LRSS,LRIDT,LRUID,.LRXQA,LRTST)
"RTN","AHMLDOL6",254,0)
 Q
"RTN","AHMLDOL6",255,0)
 ;
"RTN","AHMLDOL6",256,0)
CMARY(ARY) ;
"RTN","AHMLDOL6",257,0)
 N YY,XX
"RTN","AHMLDOL6",258,0)
 ;"AMENDED COMMENT" not required for the RESULT COMMENT(S) section.
"RTN","AHMLDOL6",259,0)
 S AFLG=0
"RTN","AHMLDOL6",260,0)
 ;
"RTN","AHMLDOL6",261,0)
 S XX="" F  S XX=$O(ARY(XX)) Q:XX=""  D
"RTN","AHMLDOL6",262,0)
 .;check for Result Comment in current array
"RTN","AHMLDOL6",263,0)
 .Q:AFLG=1
"RTN","AHMLDOL6",264,0)
 .I ARY(XX)["RESULT COMMENT(S)" S AFLG=1 Q
"RTN","AHMLDOL6",265,0)
 .S YY=XX+1,NARY(YY)=ARY(XX)
"RTN","AHMLDOL6",266,0)
 .K ARY(XX)
"RTN","AHMLDOL6",267,0)
 ;for results - amended comment not required.
"RTN","AHMLDOL6",268,0)
 I AFLG K NARY Q
"RTN","AHMLDOL6",269,0)
 ;for other amended comments
"RTN","AHMLDOL6",270,0)
 ;S NARY(1)="AMENDED COMMENT"
"RTN","AHMLDOL6",271,0)
 ;
"RTN","AHMLDOL6",272,0)
 M ARY=NARY K NARY
"RTN","AHMLDOL6",273,0)
 Q
"RTN","AHMLDOL6",274,0)
 ;
"RTN","AHMLDOL6",275,0)
CHKRSLT(LRDFN,LRSS,LRIDT,ANS) ;
"RTN","AHMLDOL6",276,0)
 S ANS=0
"RTN","AHMLDOL6",277,0)
 S LL="" F  S LL=$O(^LR(LRDFN,LRSS,LRIDT,LL)) Q:LL=""  D
"RTN","AHMLDOL6",278,0)
 .M XX=^LR(LRDFN,LRSS,LRIDT,LL) I XX["!" S ANS=1
"RTN","AHMLDOL6",279,0)
 Q ANS
"RTN","AHMLDOL6",280,0)
 ;
"RTN","AHMLDOL6",281,0)
 ;
"RTN","AHMLDOL6",282,0)
GETIEN(RR,ORD,JVWRKLD) ;
"RTN","AHMLDOL6",283,0)
 N JVDATA,JVDT,JVRN,TST,JVTST
"RTN","AHMLDOL6",284,0)
 S (JVDATA,JVDT,JVRN,TST,JVTST)="",RR=0
"RTN","AHMLDOL6",285,0)
 I '$D(^OR(100,ORD)) S RR="" Q
"RTN","AHMLDOL6",286,0)
 S JVDATA=$$GET1^DIQ(100,ORD,33,"I")
"RTN","AHMLDOL6",287,0)
 S JVDT=$P(JVDATA,";",2)
"RTN","AHMLDOL6",288,0)
 S JVRN=$P(JVDATA,";",3)
"RTN","AHMLDOL6",289,0)
 I '$D(^LRO(69,JVDT,1,JVRN)) S RR="" Q
"RTN","AHMLDOL6",290,0)
 S TST="" F  S TST=$O(^LRO(69,JVDT,1,JVRN,2,"B",TST)) Q:TST=""  D  Q:RR=""
"RTN","AHMLDOL6",291,0)
 .S JVTARY(TST)=TST
"RTN","AHMLDOL6",292,0)
 I '$D(JVTARY) S RR="" Q
"RTN","AHMLDOL6",293,0)
 I '$D(^LAM("E",JVWRKLD)) S RR="" Q
"RTN","AHMLDOL6",294,0)
 S JVWRKIEN="",JVWRKIEN=$O(^LAM("E",JVWRKLD,JVWRKIEN))
"RTN","AHMLDOL6",295,0)
 I JVWRKIEN="" S RR="" Q
"RTN","AHMLDOL6",296,0)
 F  S JVTST=$O(JVTARY(JVTST)) Q:JVTST=""  D  Q:RR=""
"RTN","AHMLDOL6",297,0)
 .S TEST=JVTST_";LAB(60,"
"RTN","AHMLDOL6",298,0)
 .I $D(^LAM(JVWRKIEN,7,"B",TEST)) S RR=JVTST Q
"RTN","AHMLDOL6",299,0)
 Q
"RTN","AHMLDOL6",300,0)
 ;
"RTN","AHMLDOL6",301,0)
END ;
"RTN","AHMLDOL6",302,0)
 K AFLG,ARY,TARY,LRTST,TSTARY,LRTST,REC,HLARY,CMPTST,CT,FLG,II,AHOUT,LIEN,LRACC,LRDATA,AHOUT,LRTYPE
"RTN","AHMLDOL6",303,0)
 K %DT,ANS,CHECK,AGE,COLST,CTR,D1,D2,DD,DATA,DIC,DFN,DOB,DR,FLAG,HLARY,LL,LRAA,LRAD,LRAN,LRBGO,JVTECH
"RTN","AHMLDOL6",304,0)
 K LRCCMT,LCMMT,LRDPF,LRDTOLREND,LRFIND,LRCW,LRBGO,LRBG0,LRCCMT,LRCDT,LRDCMP,LRDFN,PNL,TSTNM,TX
"RTN","AHMLDOL6",305,0)
 K LRDTO,LREN,LRNOW,LRFINO,LRFINO,LRHL,LRI,LRIDT,LRLOC,LRNDISP,LRNG2,LRNG3,LRNG4,LRNG5,TXT,JVTARY
"RTN","AHMLDOL6",306,0)
 K LRNOW,LRODT,LRORD,LRPANEL,LRRDT,LRRNGE,LRPANEL,LRPRV,LRRSLT,LRSB,LRS,LRSN,LRSPEC,STOP,TEST,LRTYPE
"RTN","AHMLDOL6",307,0)
 K LRSPT,LRTM60,LRSS,LRTS,LRSTS,LRUNDO,LRUID,LRUNTS,LRVAL,LRX,MSH,NUM,LRDUZ,LRSND,LRTYPE,JVWRKIEN
"RTN","AHMLDOL6",308,0)
 K ORDNM,ORNUM,OBR,OBX,REC,RSITE,SS,S1,S2,S3,S4,S5,S6,SEX,SITE,ST,STA,TOT,TYPE,VA,XX,X1,X2,X3,XDATA,Y,X
"RTN","AHMLDOL6",309,0)
 Q
"RTN","AHMLDOL6",310,0)
 ;
"RTN","AHMLDOLO")
0^13^B19789690
"RTN","AHMLDOLO",1,0)
AHMLDOLO ;LEIDOS/TCK - REMOTE ORDERING ; 2/23/17 11:15am
"RTN","AHMLDOLO",2,0)
 ;;1.0;REMOTE ORDERING;**1**;DEC 28, 2015;Build 53
"RTN","AHMLDOLO",3,0)
 Q
"RTN","AHMLDOLO",4,0)
 ;
"RTN","AHMLDOLO",5,0)
EN(MSG1,MSG2) ;Pass in message from VistA or CPRS
"RTN","AHMLDOLO",6,0)
 N HLA,PROT,PR,REC,FLG,CCDE,ORDERID,ORVP
"RTN","AHMLDOLO",7,0)
 S CCDE="",(CHK,FLG)=0
"RTN","AHMLDOLO",8,0)
 I $D(MSG1)>1 M REC=XQORMSG D GENMSG(.REC)
"RTN","AHMLDOLO",9,0)
 I $G(MSG2)'="" I $G(ORAPMSG)'="" M REC=@ORAPMSG D GENMSG(.REC)
"RTN","AHMLDOLO",10,0)
 I $G(MSG1)["TMP" M REC=@XQORMSG D GENMSG(.REC)
"RTN","AHMLDOLO",11,0)
 I $G(MSG)["TMP" M REC=@MSG D GENMSG(.REC)
"RTN","AHMLDOLO",12,0)
 K MSG,MSG1,REC,CHK,FLG,ODC,AP,VFGL,STOP,CHG,MSGTYP,MSGNDE
"RTN","AHMLDOLO",13,0)
 Q
"RTN","AHMLDOLO",14,0)
 ;
"RTN","AHMLDOLO",15,0)
GENMSG(REC) ;
"RTN","AHMLDOLO",16,0)
 N FLAG1,ACKERR,CK
"RTN","AHMLDOLO",17,0)
 S ZCNT="",(FLAG1,ACKERR,CHK,FLG,ODC,AP,VFLG,STOP,CHG)=0,CK=1
"RTN","AHMLDOLO",18,0)
 I $D(JVORIN) S JVOD=1,FLG=2 Q
"RTN","AHMLDOLO",19,0)
 F  S ZCNT=$O(REC(ZCNT)) Q:ZCNT=""  D  Q:FLG=2
"RTN","AHMLDOLO",20,0)
 .S MSGNDE=REC(ZCNT),MSGTYP=$P(MSGNDE,"|"),CCDE=$P(MSGNDE,"|",2)
"RTN","AHMLDOLO",21,0)
 .Q:MSGTYP=""
"RTN","AHMLDOLO",22,0)
 .I MSGTYP="MSH" D
"RTN","AHMLDOLO",23,0)
 ..S TYP=$P(MSGNDE,"|",5) I TYP["RAD" S TYP="RAD"
"RTN","AHMLDOLO",24,0)
 ..I TYP["RAD" S TYP="RAD"
"RTN","AHMLDOLO",25,0)
 ..I TYP["LAB" S TYP="LAB"
"RTN","AHMLDOLO",26,0)
 .I MSGTYP="PID" D GTPTID(.REC,ZCNT)
"RTN","AHMLDOLO",27,0)
 .I MSGTYP="ORC" D  Q:'CK
"RTN","AHMLDOLO",28,0)
 ..S ONUM=+$P(MSGNDE,"|",3)
"RTN","AHMLDOLO",29,0)
 ..D CHKRMT(ONUM,CK)
"RTN","AHMLDOLO",30,0)
 ..Q:'CK
"RTN","AHMLDOLO",31,0)
 ..I $G(CCDE)="NA" S FLG=2 Q
"RTN","AHMLDOLO",32,0)
 ..I $G(CCDE)="SN" S FLG=2 Q
"RTN","AHMLDOLO",33,0)
 ..I $G(CCDE)="NW" S FLG=1
"RTN","AHMLDOLO",34,0)
 ..I $G(CCDE)="CA" S FLG=1
"RTN","AHMLDOLO",35,0)
  ..I $G(CCDE)="DC" S FLG=1
"RTN","AHMLDOLO",36,0)
 .Q:'CK
"RTN","AHMLDOLO",37,0)
 .I MSGTYP="OBR" D
"RTN","AHMLDOLO",38,0)
 ..S MODE="" D GTMODE(.REC,ZCNT,.MODE,ONUM)
"RTN","AHMLDOLO",39,0)
 Q:'CK
"RTN","AHMLDOLO",40,0)
 Q:'FLG
"RTN","AHMLDOLO",41,0)
 Q:FLG=2
"RTN","AHMLDOLO",42,0)
 D GTNME(.REC)
"RTN","AHMLDOLO",43,0)
 Q:ACKERR
"RTN","AHMLDOLO",44,0)
 I $G(ORD)[";" S ORIFN=+ORD
"RTN","AHMLDOLO",45,0)
 I $G(ORDERID)>0,ORDERID[";" S ORIFN=+ORDERID
"RTN","AHMLDOLO",46,0)
 D GTREM(.PROT,ORIFN,TYP)
"RTN","AHMLDOLO",47,0)
 M HLA("HLS")=REC K HLA("HLS",1) D GENERATE^HLMA($O(^ORD(101,"B",PROT,0)),"LM",1,.HLREST,"",.HLP) S FLG=3
"RTN","AHMLDOLO",48,0)
 D END
"RTN","AHMLDOLO",49,0)
 Q
"RTN","AHMLDOLO",50,0)
 ;
"RTN","AHMLDOLO",51,0)
CHKRMT(ORNUM,CK) ;
"RTN","AHMLDOLO",52,0)
 N INDX,ST,STOP,LIEN,RMTE
"RTN","AHMLDOLO",53,0)
 S ST="",(STOP,INDX)=0
"RTN","AHMLDOLO",54,0)
 Q:'$D(^OR(100,ORNUM))
"RTN","AHMLDOLO",55,0)
 Q:'$D(^OR(100,ORNUM,4.5))
"RTN","AHMLDOLO",56,0)
 F  S INDX=$O(^OR(100,ORNUM,4.5,INDX)) Q:$G(INDX)'>0  D  Q:STOP
"RTN","AHMLDOLO",57,0)
 .S LIEN=INDX_","_ORNUM_","
"RTN","AHMLDOLO",58,0)
 .S ST=$$GET1^DIQ(100.045,LIEN,.04,"I")
"RTN","AHMLDOLO",59,0)
 .Q:ST'="Location"
"RTN","AHMLDOLO",60,0)
 .Q:'$D(^OR(100,ORNUM,4.5,INDX,1))
"RTN","AHMLDOLO",61,0)
 .S RMTE=$$GET1^DIQ(100.045,LIEN,1,"I")
"RTN","AHMLDOLO",62,0)
 .I RMTE'="LOCAL" S STOP=1 Q
"RTN","AHMLDOLO",63,0)
 .I RMTE="LOCAL" S STOP=1,CK=0 Q
"RTN","AHMLDOLO",64,0)
 I 'STOP,CK S CK=0
"RTN","AHMLDOLO",65,0)
 Q
"RTN","AHMLDOLO",66,0)
 ;
"RTN","AHMLDOLO",67,0)
GTPTID(REC,ZCNT) ;
"RTN","AHMLDOLO",68,0)
 N IEN,VPSSN,VPDOB
"RTN","AHMLDOLO",69,0)
 S (VPSSN,VPDOB)=""
"RTN","AHMLDOLO",70,0)
 S ORVP=$P(REC(ZCNT),"|",4)
"RTN","AHMLDOLO",71,0)
 I $G(ORVP)'>0 S ORVP=0 Q
"RTN","AHMLDOLO",72,0)
 S VPDOB=$$GET1^DIQ(2,ORVP,.03,"I")
"RTN","AHMLDOLO",73,0)
 S VPSSN=$$GET1^DIQ(2,ORVP,.09,"I")
"RTN","AHMLDOLO",74,0)
 S $P(REC(ZCNT),"|",5)=VPDOB
"RTN","AHMLDOLO",75,0)
 S $P(REC(ZCNT),"|",7)=VPSSN
"RTN","AHMLDOLO",76,0)
 Q
"RTN","AHMLDOLO",77,0)
 ;
"RTN","AHMLDOLO",78,0)
GTMODE(REC,ZCNT,MODE,ONUM) ;
"RTN","AHMLDOLO",79,0)
 S MODE=""
"RTN","AHMLDOLO",80,0)
 Q:'$D(^OR(100,ONUM))
"RTN","AHMLDOLO",81,0)
 Q:'$D(^OR(100,ONUM,4.5))
"RTN","AHMLDOLO",82,0)
 Q:'$D(^OR(100,ONUM,4.5,"ID"))
"RTN","AHMLDOLO",83,0)
 Q:'$D(^OR(100,ONUM,4.5,"ID","MODE"))
"RTN","AHMLDOLO",84,0)
 S ID=$O(^OR(100,ONUM,4.5,"ID","MODE",MODE))
"RTN","AHMLDOLO",85,0)
 S MODE=^OR(100,ONUM,4.5,ID,1)
"RTN","AHMLDOLO",86,0)
 S $P(REC(ZCNT),"|",31)=MODE
"RTN","AHMLDOLO",87,0)
 Q
"RTN","AHMLDOLO",88,0)
 ;
"RTN","AHMLDOLO",89,0)
GTNME(REC) ;
"RTN","AHMLDOLO",90,0)
 N CNT,MSGNDE,MSGTYP,XUSDATE,XUSIEN,XUSQI,PNPI
"RTN","AHMLDOLO",91,0)
 S (MSGNDE,MSGTYP)="",(ACKERR,CNT)=0
"RTN","AHMLDOLO",92,0)
 F  S CNT=$O(REC(CNT)) Q:CNT=""  D  Q:ACKERR
"RTN","AHMLDOLO",93,0)
 .S MSGNDE=REC(CNT)
"RTN","AHMLDOLO",94,0)
 .Q:$G(MSGNDE)=""
"RTN","AHMLDOLO",95,0)
 .S MSGTYP=$P(MSGNDE,"|"),CCDE=$P(MSGNDE,"|",2)
"RTN","AHMLDOLO",96,0)
 .I MSGTYP="ORC" D
"RTN","AHMLDOLO",97,0)
 ..S ORD=$P(MSGNDE,"|",3)
"RTN","AHMLDOLO",98,0)
 ..S USR=$P(MSGNDE,"|",11)
"RTN","AHMLDOLO",99,0)
 ..S PROV=$P(MSGNDE,"|",13)
"RTN","AHMLDOLO",100,0)
 ..;get npi and put in message
"RTN","AHMLDOLO",101,0)
 ..S XUSQI="Individual_ID",XUSIEN=PROV,XUSDATE=""
"RTN","AHMLDOLO",102,0)
 ..S PNPI=$$NPI^XUSNPI(XUSQI,XUSIEN,XUSDATE)
"RTN","AHMLDOLO",103,0)
 ..I $G(PNPI)'>0 S ACKERR=1 D  Q
"RTN","AHMLDOLO",104,0)
 ...I $G(HLMA)'>0 D
"RTN","AHMLDOLO",105,0)
 ....S HLMA=9999999999,HLMA=$O(^HLMA(HLMA),-1)
"RTN","AHMLDOLO",106,0)
 ....I $G(HLMA)>0 S HLMA=HLMA+1,HLMA=500_HLMA
"RTN","AHMLDOLO",107,0)
 ...D ACK^AHMLDOL(HLMA,"AE","Provider missing NPI",TYP) Q
"RTN","AHMLDOLO",108,0)
 ..Q:ACKERR
"RTN","AHMLDOLO",109,0)
 ..Q:$G(USR)'>0
"RTN","AHMLDOLO",110,0)
 ..Q:$G(PROV)'>0
"RTN","AHMLDOLO",111,0)
 ..S USRNME=$$GET1^DIQ(200,USR,.01,"I")
"RTN","AHMLDOLO",112,0)
 ..S PROVNME=$$GET1^DIQ(200,PROV,.01,"I")
"RTN","AHMLDOLO",113,0)
 ..I $G(USRNME)'="" S $P(REC(CNT),"|",11)=USR_"^"_USRNME
"RTN","AHMLDOLO",114,0)
 ..I $G(PROVNME)'="" S $P(REC(CNT),"|",13)=PROV_"^"_PROVNME_"^"_PNPI
"RTN","AHMLDOLO",115,0)
 Q
"RTN","AHMLDOLO",116,0)
 ;
"RTN","AHMLDOLO",117,0)
GTREM(PROT,ORIFN,TYP) ;
"RTN","AHMLDOLO",118,0)
 N FAC,REM
"RTN","AHMLDOLO",119,0)
 S PROT=0
"RTN","AHMLDOLO",120,0)
 Q:$G(ORIFN)'>0
"RTN","AHMLDOLO",121,0)
 Q:'$D(^OR(100,ORIFN,4.5,"ID"))
"RTN","AHMLDOLO",122,0)
 Q:'$D(^OR(100,ORIFN,4.5,"ID","Location"))
"RTN","AHMLDOLO",123,0)
 S IFN="",IFN=$O(^OR(100,ORIFN,4.5,"ID","Location",IFN))
"RTN","AHMLDOLO",124,0)
 S FAC=^OR(100,ORIFN,4.5,IFN,1)
"RTN","AHMLDOLO",125,0)
 S REM="",REM=$O(^DIC(4,"B",FAC,REM))
"RTN","AHMLDOLO",126,0)
 I TYP["LAB" S PROT="AHMLDOL "_REM_" ORM-O01 EVENT"
"RTN","AHMLDOLO",127,0)
 I TYP["RAD" S PROT="AHMLDOR "_REM_" ORM-O01 EVENT"
"RTN","AHMLDOLO",128,0)
 ;REMOVE STAION ID FROM 8 NODE
"RTN","AHMLDOLO",129,0)
 Q
"RTN","AHMLDOLO",130,0)
 ;
"RTN","AHMLDOLO",131,0)
END ;
"RTN","AHMLDOLO",132,0)
 K DOM,HLP,HLREST,ID,IFN,JVOD,JVORIN,ORAPMSG,ORD,PROV,PROVNME
"RTN","AHMLDOLO",133,0)
 K USR,USRNME,VFLG,XQORMSG,HLMA,HLMTIEM
"RTN","AHMLDOLO",134,0)
 Q
"RTN","AHMLDOLO",135,0)
 ;
"RTN","AHMLDOP1")
0^14^B121333209
"RTN","AHMLDOP1",1,0)
AHMLDOP1 ;LEIDOS/WW/TCK - REMOTE ORDERING - Lab Report ; 2/27/17 12:19am
"RTN","AHMLDOP1",2,0)
 ;;1.0;REMOTE ORDERS;**1**;OCT 1,2016;Build 53
"RTN","AHMLDOP1",3,0)
 ;
"RTN","AHMLDOP1",4,0)
 Q
"RTN","AHMLDOP1",5,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP1",6,0)
LAB ; Entry point for Remote Laboratory Orders by Location.
"RTN","AHMLDOP1",7,0)
 ;
"RTN","AHMLDOP1",8,0)
 S LRT=2
"RTN","AHMLDOP1",9,0)
 ;
"RTN","AHMLDOP1",10,0)
 D INIT,GDT:'LREND,LOC:'LREND,DETAIL:'LREND,GDV:'LREND,RUN:'LREND,STOP
"RTN","AHMLDOP1",11,0)
 ;
"RTN","AHMLDOP1",12,0)
 Q
"RTN","AHMLDOP1",13,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP1",14,0)
RAD ; Entry point for Remote Radiology Orders by Location.
"RTN","AHMLDOP1",15,0)
 ;
"RTN","AHMLDOP1",16,0)
 S LRT=1
"RTN","AHMLDOP1",17,0)
 ;
"RTN","AHMLDOP1",18,0)
 D INIT,GDT:'LREND,LOC:'LREND,DETAIL:'LREND,GDV:'LREND,RUN:'LREND,STOP
"RTN","AHMLDOP1",19,0)
 ;
"RTN","AHMLDOP1",20,0)
 Q
"RTN","AHMLDOP1",21,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP1",22,0)
TAT ; Entry point for Turnaround Time for Remote Lab Orders report.
"RTN","AHMLDOP1",23,0)
 ;
"RTN","AHMLDOP1",24,0)
 S LRT="2A"
"RTN","AHMLDOP1",25,0)
 ;
"RTN","AHMLDOP1",26,0)
 D INIT,GDT:'LREND,LOC:'LREND,DETAIL:'LREND,GDV:'LREND,RUN:'LREND,STOP
"RTN","AHMLDOP1",27,0)
 ;
"RTN","AHMLDOP1",28,0)
 Q
"RTN","AHMLDOP1",29,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP1",30,0)
INIT ; Initialize common variables.
"RTN","AHMLDOP1",31,0)
 ;
"RTN","AHMLDOP1",32,0)
 ;S U="^",D1="|",D2=";"
"RTN","AHMLDOP1",33,0)
 S D1="|",D2=";"
"RTN","AHMLDOP1",34,0)
 S LREND=0,LRSDT="TODAY",LREDT="T-7"
"RTN","AHMLDOP1",35,0)
 I LRT="2A" W !,"Turnaround Time for Remote Lab Orders" Q
"RTN","AHMLDOP1",36,0)
 W !,"REMOTE ORDERS - Remote ",$S(LRT=1:"Radiology",1:"Lab")
"RTN","AHMLDOP1",37,0)
 W " Orders by Location"
"RTN","AHMLDOP1",38,0)
 ;
"RTN","AHMLDOP1",39,0)
 Q
"RTN","AHMLDOP1",40,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP1",41,0)
RUN ; Run the report either queued or in person.
"RTN","AHMLDOP1",42,0)
 ;
"RTN","AHMLDOP1",43,0)
 K ^TMP($J,"AHML"),^TMP($J,"AHMLX"),^TMP($J,"AHMLT")
"RTN","AHMLDOP1",44,0)
 S:$D(ZTQUEUED) ZTREQ="@" U IO
"RTN","AHMLDOP1",45,0)
 S (LRPAG,LREND)=0
"RTN","AHMLDOP1",46,0)
 D:'LREND START
"RTN","AHMLDOP1",47,0)
 D:$D(ZTQUEUED) STOP
"RTN","AHMLDOP1",48,0)
 ;
"RTN","AHMLDOP1",49,0)
 Q
"RTN","AHMLDOP1",50,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP1",51,0)
STOP ; End and cleanup.
"RTN","AHMLDOP1",52,0)
 ;
"RTN","AHMLDOP1",53,0)
 I ($E(IOST,1,2)="C-") D WAIT
"RTN","AHMLDOP1",54,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","AHMLDOP1",55,0)
 K ^TMP($J,"AHML"),^TMP($J,"AHMLX"),^TMP($J,"AHMLT")
"RTN","AHMLDOP1",56,0)
 K %DT,D1,DATA1,DD,DM,DSTR,DTOUT,DUOUT,DY,LRDET,LREDT,LREND,LRLOC
"RTN","AHMLDOP1",57,0)
 K LRPAG,LRSDT,LRT,OR,PLOC,POP,D1,D2,XX,YY,Y,ZTDESC,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE
"RTN","AHMLDOP1",58,0)
 ;
"RTN","AHMLDOP1",59,0)
 Q
"RTN","AHMLDOP1",60,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP1",61,0)
GDT ; Get dates (start and end).
"RTN","AHMLDOP1",62,0)
 ;
"RTN","AHMLDOP1",63,0)
 N Y
"RTN","AHMLDOP1",64,0)
 I LRSDT?1.7N S Y=LRSDT D DD^LRX S LRSDT=Y
"RTN","AHMLDOP1",65,0)
 I LREDT?1.7N S Y=LREDT D DD^LRX S LREDT=Y
"RTN","AHMLDOP1",66,0)
 S %DT("A")="Enter START date: ",%DT("B")=LRSDT,%DT="AET"
"RTN","AHMLDOP1",67,0)
 D ^%DT S LREND=Y<1 Q:LREND
"RTN","AHMLDOP1",68,0)
 S LRSDT=Y
"RTN","AHMLDOP1",69,0)
 S %DT("A")="Enter END date: ",%DT("B")=LREDT
"RTN","AHMLDOP1",70,0)
 D ^%DT S LREND=Y<1 Q:LREND
"RTN","AHMLDOP1",71,0)
 S LREDT=Y
"RTN","AHMLDOP1",72,0)
 S:LREDT>LRSDT XX=LREDT,LREDT=LRSDT,LRSDT=XX
"RTN","AHMLDOP1",73,0)
 ;
"RTN","AHMLDOP1",74,0)
 Q
"RTN","AHMLDOP1",75,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP1",76,0)
GDV ; Get output device.
"RTN","AHMLDOP1",77,0)
 ;
"RTN","AHMLDOP1",78,0)
 S %ZIS="Q" D ^%ZIS K %ZIS I POP S LREND=1 Q
"RTN","AHMLDOP1",79,0)
 I $D(IO("Q")) D
"RTN","AHMLDOP1",80,0)
 .K IO("Q")
"RTN","AHMLDOP1",81,0)
 .S LREND=1,ZTRTN="RUN^AHMLDOP1",ZTDESC="Lab Special Report"
"RTN","AHMLDOP1",82,0)
 .S ZTSAVE($J,"AHML*")=""
"RTN","AHMLDOP1",83,0)
 .D ^%ZTLOAD
"RTN","AHMLDOP1",84,0)
 ;
"RTN","AHMLDOP1",85,0)
 Q
"RTN","AHMLDOP1",86,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP1",87,0)
LOC ; Get the locations to run report for.  Default "ALL".
"RTN","AHMLDOP1",88,0)
 ;
"RTN","AHMLDOP1",89,0)
 N II,JJ,LOC
"RTN","AHMLDOP1",90,0)
 ;
"RTN","AHMLDOP1",91,0)
 I '$D(^XTMP("AHMLD")) D  Q
"RTN","AHMLDOP1",92,0)
 .S LRLOC=D1_$$NAME^XUAF4($$KSP^XUPARAM("INST"))_D1
"RTN","AHMLDOP1",93,0)
 .;S LRLOC=D1_^TMP("AHMLDOP1_LOCATION")_D1   ;[temp until configuration complete then remove]
"RTN","AHMLDOP1",94,0)
 ;
"RTN","AHMLDOP1",95,0)
 K DIR
"RTN","AHMLDOP1",96,0)
 S DIR("B")="ALL",DIR("A")="Location",DIR(0)="S^1:ALL;",II=0
"RTN","AHMLDOP1",97,0)
 S LOC(1)="ALL",DIR("?")="Select Location"
"RTN","AHMLDOP1",98,0)
 ;
"RTN","AHMLDOP1",99,0)
 F JJ=2:1 S II=$O(^XTMP("AHMLD",II)) Q:II=""  D
"RTN","AHMLDOP1",100,0)
 .S LOC=$P(^XTMP("AHMLD",II),"^",2),LOC(JJ)=LOC
"RTN","AHMLDOP1",101,0)
 .S DIR(0)=DIR(0)_JJ_":"_LOC_";",LOC(JJ)=LOC
"RTN","AHMLDOP1",102,0)
 ;
"RTN","AHMLDOP1",103,0)
 D ^DIR
"RTN","AHMLDOP1",104,0)
 S:($D(DUOUT))!($D(DTOUT)) LREND=1
"RTN","AHMLDOP1",105,0)
 I 'LREND D
"RTN","AHMLDOP1",106,0)
 .I LOC(Y)'="ALL" D  Q
"RTN","AHMLDOP1",107,0)
 ..S LRLOC=D1_LOC(Y)_D1
"RTN","AHMLDOP1",108,0)
 .S II="",LRLOC=D1
"RTN","AHMLDOP1",109,0)
 .F  S II=$O(^XTMP("AHMLD",II)) Q:II=""  S LRLOC=LRLOC_$P(^XTMP("AHMLD",II),"^",2)_D1
"RTN","AHMLDOP1",110,0)
 ;
"RTN","AHMLDOP1",111,0)
 Q
"RTN","AHMLDOP1",112,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP1",113,0)
DETAIL ; Include detail?  (1=yes, 0=no).  Default "NO".
"RTN","AHMLDOP1",114,0)
 ;
"RTN","AHMLDOP1",115,0)
 K DIR
"RTN","AHMLDOP1",116,0)
 S DIR("B")="NO",DIR("A")="Include a Detailed Report?",DIR(0)="S^1:NO;2:YES"
"RTN","AHMLDOP1",117,0)
 ;
"RTN","AHMLDOP1",118,0)
 D ^DIR
"RTN","AHMLDOP1",119,0)
 S:($D(DUOUT))!($D(DTOUT)) LREND=1 S:'LREND LRDET=Y-1 Q
"RTN","AHMLDOP1",120,0)
 ;
"RTN","AHMLDOP1",121,0)
 Q
"RTN","AHMLDOP1",122,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP1",123,0)
START ; Produce report looping through OR(100 data.
"RTN","AHMLDOP1",124,0)
 ;
"RTN","AHMLDOP1",125,0)
 ;   Input: LRSDT - Start date
"RTN","AHMLDOP1",126,0)
 ;          LREDT - End date
"RTN","AHMLDOP1",127,0)
 ;          LRLOC - Location(s) [|loc1|loc2|...]
"RTN","AHMLDOP1",128,0)
 ;          LRDET - Detail      [0=No, 1=Yes]
"RTN","AHMLDOP1",129,0)
 ;
"RTN","AHMLDOP1",130,0)
 ;  Output: Report.
"RTN","AHMLDOP1",131,0)
 ;
"RTN","AHMLDOP1",132,0)
 N ABREV,CDATE,COLDT,CPT,D0,DATA,IPROC,ITYPE,LOC,LRDT,LRDT1,ODATE,OR,OR1
"RTN","AHMLDOP1",133,0)
 N PNAME,PROV,RDATE,RPTDT,STATUS,TAT,TEST,TMP,TNAME
"RTN","AHMLDOP1",134,0)
 ;
"RTN","AHMLDOP1",135,0)
 S LRDT=(LREDT-1)+.999999,LRDT1=LRSDT+.999999
"RTN","AHMLDOP1",136,0)
 ;
"RTN","AHMLDOP1",137,0)
 F  S LRDT=$O(^OR(100,"AF",LRDT)) Q:LRDT=""!(LRDT>LRDT1)  D
"RTN","AHMLDOP1",138,0)
 .S OR="" F  S OR=$O(^OR(100,"AF",LRDT,OR)) Q:OR=""  D
"RTN","AHMLDOP1",139,0)
 ..I +$P($G(^OR(100,OR,0)),U,5)'=+LRT Q           ;not a lab/rad test
"RTN","AHMLDOP1",140,0)
 ..I '$D(^OR(100,OR,4.5)) Q
"RTN","AHMLDOP1",141,0)
 ..S OR1="" F  S OR1=$O(^OR(100,OR,4.5,OR1)) Q:OR1=""  D
"RTN","AHMLDOP1",142,0)
 ...S DATA=$G(^OR(100,OR,4.5,OR1,0))
"RTN","AHMLDOP1",143,0)
 ...I $P(DATA,U,4)'="Location" Q
"RTN","AHMLDOP1",144,0)
 ...S LOC=$G(^OR(100,OR,4.5,OR1,1)) Q:LOC=""
"RTN","AHMLDOP1",145,0)
 ...I LRLOC'[(D1_LOC_D1) Q
"RTN","AHMLDOP1",146,0)
 ...I $D(^TMP($J,"AHML",LOC,OR)) Q
"RTN","AHMLDOP1",147,0)
 ...S TEST=$G(^OR(100,OR,4.5,1,1))                ;test
"RTN","AHMLDOP1",148,0)
 ...S ODATE=$$DATE($$FMTE^XLFDT(LRDT))            ;order date/time
"RTN","AHMLDOP1",149,0)
 ...S PROV=$$GET1^DIQ(100,OR,1)                   ;provider
"RTN","AHMLDOP1",150,0)
 ...S PNAME=$$GET1^DIQ(100,OR,.02)                ;patient name
"RTN","AHMLDOP1",151,0)
 ...S TNAME=$$GET1^DIQ(101.43,TEST,.01)           ;test/procedure name
"RTN","AHMLDOP1",152,0)
 ...S D0=+$$GET1^DIQ(101.43,TEST,2,"I")           ;D0 rad/nuc #71 file
"RTN","AHMLDOP1",153,0)
 ...S (ABREV,CPT,ITYPE,IPROC,TMP)=""
"RTN","AHMLDOP1",154,0)
 ...I D0]"" D
"RTN","AHMLDOP1",155,0)
 ....S CPT=$$GET1^DIQ(71,D0,9)                    ;CPT code
"RTN","AHMLDOP1",156,0)
 ....S ITYPE=$$GET1^DIQ(71,D0,12)                 ;Imaging type
"RTN","AHMLDOP1",157,0)
 ....I ITYPE]"" S TMP=$O(^RA(79.2,"B",ITYPE,""))
"RTN","AHMLDOP1",158,0)
 ....I TMP]"" S ABREV=$$GET1^DIQ(79.2,TMP,3)      ;Imaging type abbrev
"RTN","AHMLDOP1",159,0)
 ....S IPROC=$$GET1^DIQ(71,D0,.01)                ;Imaging procedure
"RTN","AHMLDOP1",160,0)
 ...S STATUS=$$GET1^DIQ(100,OR,5)                 ;status
"RTN","AHMLDOP1",161,0)
 ...I LRT="2A",$E(STATUS,1)'="C" Q                ;only complete for TAT
"RTN","AHMLDOP1",162,0)
 ...I STATUS="UNRELEASED" Q                       ;no unreleased
"RTN","AHMLDOP1",163,0)
 ...S CDATE=$P($$GET1^DIQ(100,OR,33),D2,2,3)       ;collect date/time
"RTN","AHMLDOP1",164,0)
 ...S COLDT=CDATE
"RTN","AHMLDOP1",165,0)
 ...I CDATE]"",$P(CDATE,D2)]"",$P(CDATE,D2,2)]"" D
"RTN","AHMLDOP1",166,0)
 ....S CDATE=$P($G(^LRO(69,$P(CDATE,D2),1,$P(CDATE,D2,2),1)),U)
"RTN","AHMLDOP1",167,0)
 ....S COLDT=CDATE
"RTN","AHMLDOP1",168,0)
 ....S CDATE=$$DATE($$FMTE^XLFDT(CDATE))
"RTN","AHMLDOP1",169,0)
 ...S RPTDT=$$GET1^DIQ(100,OR,22,"I")             ;report date/time internal
"RTN","AHMLDOP1",170,0)
 ...I LRT="2A",COLDT="" Q                         ;tat must have collect
"RTN","AHMLDOP1",171,0)
 ...S TAT="" I LRT="2A" D                         ;turnaround time (minutes)
"RTN","AHMLDOP1",172,0)
 ....S TAT=$TR($J($$FMDIFF^XLFDT(RPTDT,COLDT,2)/60,50,0)," ","")
"RTN","AHMLDOP1",173,0)
 ...S RDATE=$$DATE($$GET1^DIQ(100,OR,22,"E"))     ;report date/time
"RTN","AHMLDOP1",174,0)
 ...I LRT="2A",RDATE="" Q                         ;must have rpt date for tat
"RTN","AHMLDOP1",175,0)
 ...I LRT=1 D
"RTN","AHMLDOP1",176,0)
 ....S TMP=ODATE_D1_PROV_D1_PNAME_D1_CPT             ;rad order detail
"RTN","AHMLDOP1",177,0)
 ....S TMP=TMP_D1_ITYPE_D1_IPROC_D1_$E(STATUS,1)
"RTN","AHMLDOP1",178,0)
 ...I +LRT=2 D
"RTN","AHMLDOP1",179,0)
 ....S TMP=ODATE_D1_PROV_D1_PNAME_D1_TNAME           ;lab order detail
"RTN","AHMLDOP1",180,0)
 ....S TMP=TMP_D1_$E(STATUS,1)_D1_CDATE_D1_RDATE
"RTN","AHMLDOP1",181,0)
 ....S TMP=TMP_D1_TAT
"RTN","AHMLDOP1",182,0)
 ...I LRT=1,ITYPE]"",ABREV]"" D
"RTN","AHMLDOP1",183,0)
 ....S ^TMP($J,"AHMLX",ITYPE)=ABREV                 ;Image type abrev
"RTN","AHMLDOP1",184,0)
 ...S ^TMP($J,"AHML")=$G(^TMP($J,"AHML"))+1           ;grand total
"RTN","AHMLDOP1",185,0)
 ...S ^TMP($J,"AHML",LOC)=$G(^TMP($J,"AHML",LOC))+1   ;location total
"RTN","AHMLDOP1",186,0)
 ...S ^TMP($J,"AHML",LOC,OR)=TMP                    ;order detail
"RTN","AHMLDOP1",187,0)
 ...S ^TMP($J,"AHMLT",LOC)=$G(^TMP($J,"AHMLT",LOC))+TAT   ;tat location total
"RTN","AHMLDOP1",188,0)
 ...S ^TMP($J,"AHMLT")=$G(^TMP($J,"AHMLT"))+TAT       ;tat grand total
"RTN","AHMLDOP1",189,0)
 ;
"RTN","AHMLDOP1",190,0)
 D HDR
"RTN","AHMLDOP1",191,0)
 I 'LRDET Q
"RTN","AHMLDOP1",192,0)
 ;
"RTN","AHMLDOP1",193,0)
 S (LOC,OR,PLOC)=""
"RTN","AHMLDOP1",194,0)
 F  S LOC=$O(^TMP($J,"AHML",LOC)) Q:LOC=""  D  Q:LREND
"RTN","AHMLDOP1",195,0)
 .I LOC'=PLOC S PLOC=LOC D SHDR
"RTN","AHMLDOP1",196,0)
 .F  S OR=$O(^TMP($J,"AHML",LOC,OR)) Q:OR=""  D  Q:LREND
"RTN","AHMLDOP1",197,0)
 ..S DATA=^TMP($J,"AHML",LOC,OR)
"RTN","AHMLDOP1",198,0)
 ..I $Y+2>IOSL D WAIT Q:LREND  D:$E(IOST,1,2)'="C-" HDR D SHDR
"RTN","AHMLDOP1",199,0)
 ..I LRT=1 D
"RTN","AHMLDOP1",200,0)
 ...S TMP=$P(DATA,D1,5)
"RTN","AHMLDOP1",201,0)
 ...I TMP]"",$G(^TMP($J,"AHMLX",TMP))]"" S TMP=^TMP($J,"AHMLX",TMP)
"RTN","AHMLDOP1",202,0)
 ...W !,$P($P(DATA,D1),"@")
"RTN","AHMLDOP1",203,0)
 ...W ?10,$E($P(DATA,D1,2),1,14),?26,$E($P(DATA,D1,3),1,14)
"RTN","AHMLDOP1",204,0)
 ...W ?42,$E($P(DATA,D1,4),1,14),?49,$E(TMP,1,11)
"RTN","AHMLDOP1",205,0)
 ...W ?55,$E($P(DATA,D1,6),1,21),?77,$P(DATA,D1,7)
"RTN","AHMLDOP1",206,0)
 ...W ! I $P(DATA,D1)]"" W " @",$P($P(DATA,D1),"@",2)
"RTN","AHMLDOP1",207,0)
 ...W ?10,$E($P(DATA,D1,2),15,28),?26,$E($P(DATA,D1,3),15,28)
"RTN","AHMLDOP1",208,0)
 ...W ?42,$E($P(DATA,D1,4),15,28),?49,$E(TMP,12,22)
"RTN","AHMLDOP1",209,0)
 ...W ?55,$E($P(DATA,D1,6),22,42)
"RTN","AHMLDOP1",210,0)
 ..I LRT=2 D
"RTN","AHMLDOP1",211,0)
 ...W !,$P($P(DATA,D1),"@"),?10,$E($P(DATA,D1,2),1,14)
"RTN","AHMLDOP1",212,0)
 ...W ?26,$E($P(DATA,D1,3),1,14),?42,$E($P(DATA,D1,4),1,14)
"RTN","AHMLDOP1",213,0)
 ...W ?58,$P(DATA,D1,5),?62,$P($P(DATA,D1,6),"@")
"RTN","AHMLDOP1",214,0)
 ...W ?72 I $P(DATA,D1,5)'="D" W $P($P(DATA,D1,7),"@")
"RTN","AHMLDOP1",215,0)
 ...W ! I $P(DATA,D1)]"" W " @",$P($P(DATA,D1),"@",2)
"RTN","AHMLDOP1",216,0)
 ...W ?10,$E($P(DATA,D1,2),15,28),?26,$E($P(DATA,D1,3),15,28)
"RTN","AHMLDOP1",217,0)
 ...W ?42,$E($P(DATA,D1,4),15,28)
"RTN","AHMLDOP1",218,0)
 ...W ?62 I $P(DATA,D1,6)]"" W " @",$P($P(DATA,D1,6),"@",2)
"RTN","AHMLDOP1",219,0)
 ...W ?72 I $P(DATA,D1,5)'="D",$P(DATA,D1,7)]"" D
"RTN","AHMLDOP1",220,0)
 ....W " @",$P($P(DATA,D1,7),"@",2)
"RTN","AHMLDOP1",221,0)
 ..I LRT="2A" D
"RTN","AHMLDOP1",222,0)
 ...W !,$P($P(DATA,D1),"@"),?9,$E($P(DATA,D1,2),1,14)
"RTN","AHMLDOP1",223,0)
 ...W ?24,$E($P(DATA,D1,3),1,14),?39,$E($P(DATA,D1,4),1,14)
"RTN","AHMLDOP1",224,0)
 ...W ?54,$P(DATA,D1,5),?57,$P($P(DATA,D1,6),"@")
"RTN","AHMLDOP1",225,0)
 ...W ?66 I $P(DATA,D1,5)'="D" W $P($P(DATA,D1,7),"@")
"RTN","AHMLDOP1",226,0)
 ...W ?75,$P(DATA,D1,8)
"RTN","AHMLDOP1",227,0)
 ...W ! I $P(DATA,D1)]"" W " @",$P($P(DATA,D1),"@",2)
"RTN","AHMLDOP1",228,0)
 ...W ?9,$E($P(DATA,D1,2),15,28),?24,$E($P(DATA,D1,3),15,28)
"RTN","AHMLDOP1",229,0)
 ...W ?39,$E($P(DATA,D1,4),15,28)
"RTN","AHMLDOP1",230,0)
 ...W ?57 I $P(DATA,D1,6)]"" W " @",$P($P(DATA,D1,6),"@",2)
"RTN","AHMLDOP1",231,0)
 ...W ?66 I $P(DATA,D1,5)'="D",$P(DATA,D1,7)]"" D
"RTN","AHMLDOP1",232,0)
 ....W " @",$P($P(DATA,D1,7),"@",2)
"RTN","AHMLDOP1",233,0)
 ;
"RTN","AHMLDOP1",234,0)
 Q
"RTN","AHMLDOP1",235,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP1",236,0)
HDR ; Print header and totals by location.
"RTN","AHMLDOP1",237,0)
 ;
"RTN","AHMLDOP1",238,0)
 N LL,TC,TM,TTC,TTM
"RTN","AHMLDOP1",239,0)
 ;
"RTN","AHMLDOP1",240,0)
 S LRPAG=LRPAG+1
"RTN","AHMLDOP1",241,0)
 ;
"RTN","AHMLDOP1",242,0)
 I LRT'="2A" D
"RTN","AHMLDOP1",243,0)
 .W ?$S(LRT=1:22,1:24),"Remote ",$S(LRT=1:"Radiology",1:"Lab")
"RTN","AHMLDOP1",244,0)
 .W " Orders by Location"
"RTN","AHMLDOP1",245,0)
 I LRT="2A" W ?21,"Turnaround Time for Remote Lab Orders"
"RTN","AHMLDOP1",246,0)
 W ?73,"Page ",LRPAG
"RTN","AHMLDOP1",247,0)
 W !?23,"From ",$$FMTE^XLFDT(LREDT)," to ",$$FMTE^XLFDT(LRSDT)
"RTN","AHMLDOP1",248,0)
 W !?22,"Date Printed: ",$$FMTE^XLFDT($$NOW^XLFDT),!
"RTN","AHMLDOP1",249,0)
 ;
"RTN","AHMLDOP1",250,0)
 I LRT="2A" D  Q
"RTN","AHMLDOP1",251,0)
 .W !?5,"Location",?25,"# of Tests",?40,"Total Time",?60,"Average Time"
"RTN","AHMLDOP1",252,0)
 .W !?5,$TR($J("",68)," ","-")
"RTN","AHMLDOP1",253,0)
 .S LL="",(TTC,TTM)=0
"RTN","AHMLDOP1",254,0)
 .F  S LL=$O(^TMP($J,"AHML",LL)) Q:LL=""  D  Q:LREND
"RTN","AHMLDOP1",255,0)
 ..S TC=^TMP($J,"AHML",LL),TM=^TMP($J,"AHMLT",LL)
"RTN","AHMLDOP1",256,0)
 ..S TTC=TTC+TC,TTM=TTM+TM
"RTN","AHMLDOP1",257,0)
 ..W !?5,$J(LL,15),$TR($J(TC,10)," ","."),?40,TM,?60,$J(TM/TC,10,2)
"RTN","AHMLDOP1",258,0)
 .W !?5,$TR($J("",68)," ","-")
"RTN","AHMLDOP1",259,0)
 .W !?5,$J("Totals",15),$TR($J(TTC,10)," ","."),?40,TTM,?60
"RTN","AHMLDOP1",260,0)
 .W $S(TTC=0:0,1:$J(TTM/TTC,10,2)),!
"RTN","AHMLDOP1",261,0)
 ;
"RTN","AHMLDOP1",262,0)
 S LL=""
"RTN","AHMLDOP1",263,0)
 F  S LL=$O(^TMP($J,"AHML",LL)) Q:LL=""  D  Q:LREND
"RTN","AHMLDOP1",264,0)
 .W !?5,$J(LL,15),$TR($J(^TMP($J,"AHML",LL),10)," ",".")
"RTN","AHMLDOP1",265,0)
 W !?5,$TR($J("",26)," ","-")
"RTN","AHMLDOP1",266,0)
 W !?5,$J("Total",15),$TR($J(+$G(^TMP($J,"AHML")),10)," ","."),!
"RTN","AHMLDOP1",267,0)
 ;
"RTN","AHMLDOP1",268,0)
 Q
"RTN","AHMLDOP1",269,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP1",270,0)
SHDR ; Print sub header.
"RTN","AHMLDOP1",271,0)
 ;
"RTN","AHMLDOP1",272,0)
 I $Y+6>IOSL D WAIT Q:LREND  D:$E(IOST,1,2)'="C-" HDR W !
"RTN","AHMLDOP1",273,0)
 ;
"RTN","AHMLDOP1",274,0)
 W !!,"==> Performing Location: ",LOC,!
"RTN","AHMLDOP1",275,0)
 I LRT=1 D                                       ;rad sub header
"RTN","AHMLDOP1",276,0)
 .W !,"Order",?10,"Provider",?26,"Patient"
"RTN","AHMLDOP1",277,0)
 .W ?42,"CPT",?49,"Type",?55,"Image Procedure",?77,"St"
"RTN","AHMLDOP1",278,0)
 .W !,$TR($J("",8)," ","-"),?10,$TR($J("",14)," ","-")
"RTN","AHMLDOP1",279,0)
 .W ?26,$TR($J("",14)," ","-"),?42,$TR($J("",5)," ","-")
"RTN","AHMLDOP1",280,0)
 .W ?49,$TR($J("",4)," ","-"),?55,$TR($J("",20)," ","-")
"RTN","AHMLDOP1",281,0)
 .W ?77,$TR($J("",3)," ","-")
"RTN","AHMLDOP1",282,0)
 ;
"RTN","AHMLDOP1",283,0)
 I LRT=2 D                                       ;lab sub header
"RTN","AHMLDOP1",284,0)
 .W !,"Order",?10,"Provider",?26,"Patient",?42
"RTN","AHMLDOP1",285,0)
 .W "Test",?58,"St",?62,"Collect",?72,"Report"
"RTN","AHMLDOP1",286,0)
 .W !,$TR($J("",8)," ","-"),?10,$TR($J("",14)," ","-")
"RTN","AHMLDOP1",287,0)
 .W ?26,$TR($J("",14)," ","-"),?42,$TR($J("",14)," ","-")
"RTN","AHMLDOP1",288,0)
 .W ?58,$TR($J("",3)," ","-"),?62,$TR($J("",8)," ","-")
"RTN","AHMLDOP1",289,0)
 .W ?72,$TR($J("",8)," ","-")
"RTN","AHMLDOP1",290,0)
 ;
"RTN","AHMLDOP1",291,0)
 I LRT="2A" D                                       ;lab sub header
"RTN","AHMLDOP1",292,0)
 .W !,"Order",?9,"Provider",?24,"Patient",?39
"RTN","AHMLDOP1",293,0)
 .W "Test",?54,"St",?57,"Collect",?66,"Report",?75,"TAT"
"RTN","AHMLDOP1",294,0)
 .W !,$TR($J("",8)," ","-"),?9,$TR($J("",14)," ","-")
"RTN","AHMLDOP1",295,0)
 .W ?24,$TR($J("",14)," ","-"),?39,$TR($J("",14)," ","-")
"RTN","AHMLDOP1",296,0)
 .W ?54,$TR($J("",3)," ","-"),?57,$TR($J("",8)," ","-")
"RTN","AHMLDOP1",297,0)
 .W ?66,$TR($J("",8)," ","-"),?75,$TR($J("",5)," ","-")
"RTN","AHMLDOP1",298,0)
 ;
"RTN","AHMLDOP1",299,0)
 Q
"RTN","AHMLDOP1",300,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP1",301,0)
DATE(DATE) ; Convert mmm dd, yyyy@hh:mm to mm/dd/yyyy@hh:mm
"RTN","AHMLDOP1",302,0)
 ;
"RTN","AHMLDOP1",303,0)
 N DD,DM,DSTR,DY,LOWER,TM,UPPER
"RTN","AHMLDOP1",304,0)
 ;
"RTN","AHMLDOP1",305,0)
 I $G(DATE)="" Q ""
"RTN","AHMLDOP1",306,0)
 ;
"RTN","AHMLDOP1",307,0)
 S LOWER="abcdefghijklmnopqrstuvwxyz"
"RTN","AHMLDOP1",308,0)
 S UPPER="ABCDEFGHIJKLMNOPQRSTUVWXYZ"
"RTN","AHMLDOP1",309,0)
 S DSTR("JAN")="01",DSTR("FEB")="02",DSTR("MAR")="03",DSTR("APR")="04"
"RTN","AHMLDOP1",310,0)
 S DSTR("MAY")="05",DSTR("JUN")="06",DSTR("JUL")="07",DSTR("AUG")="08"
"RTN","AHMLDOP1",311,0)
 S DSTR("SEP")="09",DSTR("OCT")=10,DSTR("NOV")=11,DSTR("DEC")=12
"RTN","AHMLDOP1",312,0)
 ;
"RTN","AHMLDOP1",313,0)
 S DM=$TR($P(DATE," "),LOWER,UPPER),DD=$P($P(DATE," ",2),",")
"RTN","AHMLDOP1",314,0)
 S DY=$E($P($P(DATE," ",3),"@"),3,4),TM=$P($P(DATE,"@",2),":",1,2)
"RTN","AHMLDOP1",315,0)
 ;
"RTN","AHMLDOP1",316,0)
 Q DSTR(DM)_"/"_DD_"/"_DY_"@"_TM
"RTN","AHMLDOP1",317,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP1",318,0)
WAIT ; Pause for page breaks.
"RTN","AHMLDOP1",319,0)
 ;
"RTN","AHMLDOP1",320,0)
 K DIR
"RTN","AHMLDOP1",321,0)
 S DIR(0)="E"
"RTN","AHMLDOP1",322,0)
 D ^DIR
"RTN","AHMLDOP1",323,0)
 S:($D(DUOUT))!($D(DTOUT)) LREND=1
"RTN","AHMLDOP1",324,0)
 S $Y=1
"RTN","AHMLDOP1",325,0)
 ;
"RTN","AHMLDOP1",326,0)
 Q
"RTN","AHMLDOP2")
0^15^B175490513
"RTN","AHMLDOP2",1,0)
AHMLDOP2 ;LEIDOS/WW/TCK - REMOTE ORDERING - Rad/Lab reports; 10/16/16 8:58pm ; 2/27/17 12:20am
"RTN","AHMLDOP2",2,0)
 ;;1.0;REMOTE ORDERS;**1**;OCT 1,2016;Build 53
"RTN","AHMLDOP2",3,0)
 ;
"RTN","AHMLDOP2",4,0)
 Q
"RTN","AHMLDOP2",5,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP2",6,0)
LAB ; Entry point for Remote Laboratory Orders by Test Name.
"RTN","AHMLDOP2",7,0)
 ;
"RTN","AHMLDOP2",8,0)
 N LRT
"RTN","AHMLDOP2",9,0)
 S LRT=2,XREF="AF"
"RTN","AHMLDOP2",10,0)
 ;
"RTN","AHMLDOP2",11,0)
 D INIT,GDT:'LREND,TEST:'LREND,LOC:'LREND,DETAIL:'LREND
"RTN","AHMLDOP2",12,0)
 D GDV:'LREND,RUN:'LREND,STOP
"RTN","AHMLDOP2",13,0)
 ;
"RTN","AHMLDOP2",14,0)
 Q
"RTN","AHMLDOP2",15,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP2",16,0)
RAD ; Entry point for Remote Radiology Orders by Image Type.
"RTN","AHMLDOP2",17,0)
 ;
"RTN","AHMLDOP2",18,0)
 S LRT=1,XREF="AF"
"RTN","AHMLDOP2",19,0)
 ;
"RTN","AHMLDOP2",20,0)
 D INIT,GDT:'LREND,IMAGE:'LREND,LOC:'LREND,DETAIL:'LREND
"RTN","AHMLDOP2",21,0)
 D GDV:'LREND,RUN:'LREND,STOP
"RTN","AHMLDOP2",22,0)
 ;
"RTN","AHMLDOP2",23,0)
 Q
"RTN","AHMLDOP2",24,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP2",25,0)
RADC ; Entry point for Remote Radiology Orders by CPT Code.
"RTN","AHMLDOP2",26,0)
 ;
"RTN","AHMLDOP2",27,0)
 S LRT="1A",XREF="AF"
"RTN","AHMLDOP2",28,0)
 ;
"RTN","AHMLDOP2",29,0)
 D INIT,GDT:'LREND,CPT:'LREND,LOC:'LREND,DETAIL:'LREND
"RTN","AHMLDOP2",30,0)
 D GDV:'LREND,RUN:'LREND,STOP
"RTN","AHMLDOP2",31,0)
 ;
"RTN","AHMLDOP2",32,0)
 Q
"RTN","AHMLDOP2",33,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP2",34,0)
RADCR ; Entry point for Remote Radiology Orders by CPT Code and RVU.
"RTN","AHMLDOP2",35,0)
 ;
"RTN","AHMLDOP2",36,0)
 S LRT="1B",XREF="AF",LRTEST="*"
"RTN","AHMLDOP2",37,0)
 ;
"RTN","AHMLDOP2",38,0)
 D INIT,GDT:'LREND,LOC:'LREND,DETAIL:'LREND,GDV:'LREND,RUN:'LREND,STOP
"RTN","AHMLDOP2",39,0)
 ;
"RTN","AHMLDOP2",40,0)
 Q
"RTN","AHMLDOP2",41,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP2",42,0)
INIT ; Initialize common variables.
"RTN","AHMLDOP2",43,0)
 ;
"RTN","AHMLDOP2",44,0)
 ;S U="^",D1="|",D2=";"
"RTN","AHMLDOP2",45,0)
 S D1="|",D2=";"
"RTN","AHMLDOP2",46,0)
 S LREND=0,LRSDT="TODAY",LREDT="T-7"
"RTN","AHMLDOP2",47,0)
 W !,"REMOTE ORDERS - Remote ",$S(LRT=1:"Radiology",1:"Lab")
"RTN","AHMLDOP2",48,0)
 W " Orders by "_$S(LRT=2:"Test Name",LRT=1:"Imaging Type",1:"CPT Code")
"RTN","AHMLDOP2",49,0)
 I LRT="1B" W " and wRVU"
"RTN","AHMLDOP2",50,0)
 ;
"RTN","AHMLDOP2",51,0)
 Q
"RTN","AHMLDOP2",52,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP2",53,0)
RUN ; Run the report either queued or in person.
"RTN","AHMLDOP2",54,0)
 ;
"RTN","AHMLDOP2",55,0)
 K ^TMP($J,"AHML")
"RTN","AHMLDOP2",56,0)
 S:$D(ZTQUEUED) ZTREQ="@" U IO
"RTN","AHMLDOP2",57,0)
 S (LRPAG,LREND)=0
"RTN","AHMLDOP2",58,0)
 D:'LREND START
"RTN","AHMLDOP2",59,0)
 D:$D(ZTQUEUED) STOP
"RTN","AHMLDOP2",60,0)
 ;
"RTN","AHMLDOP2",61,0)
 Q
"RTN","AHMLDOP2",62,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP2",63,0)
STOP ; End and cleanup.
"RTN","AHMLDOP2",64,0)
 ;
"RTN","AHMLDOP2",65,0)
 I ($E(IOST,1,2)="C-") D WAIT
"RTN","AHMLDOP2",66,0)
 I '$D(ZTQUEUED) D ^%ZISC
"RTN","AHMLDOP2",67,0)
 K ^TMP($J,"AHML"),^TMP($J,"AHMLTST"),^TMP($J,"AHMLX"),^TMP($J,"AHMLCPT")
"RTN","AHMLDOP2",68,0)
 K %DT,D1,DATA1,DD,DM,DSTR,DTOUT,DUOUT,DY
"RTN","AHMLDOP2",69,0)
 K LRDET,LREDT,LREND,LRLOC,LRPAG,LRSDT,LRTEST
"RTN","AHMLDOP2",70,0)
 K OR,PLOC,POP,D2,XX,XREF,YY,ZTDESC,ZTQUEUED,ZTREQ,ZTRTN,ZTSAVE
"RTN","AHMLDOP2",71,0)
 ;
"RTN","AHMLDOP2",72,0)
 Q
"RTN","AHMLDOP2",73,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP2",74,0)
GDT ; Get dates (start and end).
"RTN","AHMLDOP2",75,0)
 ;
"RTN","AHMLDOP2",76,0)
 N Y
"RTN","AHMLDOP2",77,0)
 I LRSDT?1.7N S Y=LRSDT D DD^LRX S LRSDT=Y
"RTN","AHMLDOP2",78,0)
 I LREDT?1.7N S Y=LREDT D DD^LRX S LREDT=Y
"RTN","AHMLDOP2",79,0)
 S %DT("A")="Enter START date: ",%DT("B")=LRSDT,%DT="AET"
"RTN","AHMLDOP2",80,0)
 D ^%DT S LREND=Y<1 Q:LREND
"RTN","AHMLDOP2",81,0)
 S LRSDT=Y
"RTN","AHMLDOP2",82,0)
 S %DT("A")="Enter END date: ",%DT("B")=LREDT
"RTN","AHMLDOP2",83,0)
 D ^%DT S LREND=Y<1 Q:LREND
"RTN","AHMLDOP2",84,0)
 S LREDT=Y
"RTN","AHMLDOP2",85,0)
 S:LREDT>LRSDT XX=LREDT,LREDT=LRSDT,LRSDT=XX
"RTN","AHMLDOP2",86,0)
 ;
"RTN","AHMLDOP2",87,0)
 Q
"RTN","AHMLDOP2",88,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP2",89,0)
GDV ; Get output device.
"RTN","AHMLDOP2",90,0)
 ;
"RTN","AHMLDOP2",91,0)
 S %ZIS="Q" D ^%ZIS K %ZIS I POP S LREND=1 Q
"RTN","AHMLDOP2",92,0)
 I $D(IO("Q")) D
"RTN","AHMLDOP2",93,0)
 .K IO("Q")
"RTN","AHMLDOP2",94,0)
 .S LREND=1,ZTRTN="RUN^AHMLDOP2",ZTDESC="Lab Special Report"
"RTN","AHMLDOP2",95,0)
 .S ZTSAVE($J,"AHML*")=""
"RTN","AHMLDOP2",96,0)
 .D ^%ZTLOAD
"RTN","AHMLDOP2",97,0)
 ;
"RTN","AHMLDOP2",98,0)
 Q
"RTN","AHMLDOP2",99,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP2",100,0)
LOC ; Get the locations to run report for.  Default "ALL".
"RTN","AHMLDOP2",101,0)
 ;
"RTN","AHMLDOP2",102,0)
 N II,JJ,LOC
"RTN","AHMLDOP2",103,0)
 ;
"RTN","AHMLDOP2",104,0)
 I '$D(^XTMP("AHMLD")) D  Q
"RTN","AHMLDOP2",105,0)
 .S LRLOC=D1_$$NAME^XUAF4($$KSP^XUPARAM("INST"))_D1
"RTN","AHMLDOP2",106,0)
 .;S LRLOC=D1_^TMP("AHMLDOP1_LOCATION")_D1   ;[temp until configuration complete then remove]
"RTN","AHMLDOP2",107,0)
 ;
"RTN","AHMLDOP2",108,0)
 K DIR
"RTN","AHMLDOP2",109,0)
 S DIR("B")="ALL",DIR("A")="Location",DIR(0)="S^1:ALL;",II=0
"RTN","AHMLDOP2",110,0)
 S LOC(1)="ALL",DIR("?")="Select Location"
"RTN","AHMLDOP2",111,0)
 ;
"RTN","AHMLDOP2",112,0)
 F JJ=2:1 S II=$O(^XTMP("AHMLD",II)) Q:II=""  D
"RTN","AHMLDOP2",113,0)
 .S LOC=$P(^XTMP("AHMLD",II),"^",2),LOC(JJ)=LOC
"RTN","AHMLDOP2",114,0)
 .S DIR(0)=DIR(0)_JJ_":"_LOC_";",LOC(JJ)=LOC
"RTN","AHMLDOP2",115,0)
 ;
"RTN","AHMLDOP2",116,0)
 D ^DIR
"RTN","AHMLDOP2",117,0)
 S:($D(DUOUT))!($D(DTOUT)) LREND=1
"RTN","AHMLDOP2",118,0)
 I 'LREND D
"RTN","AHMLDOP2",119,0)
 .I LOC(Y)'="ALL" D  Q
"RTN","AHMLDOP2",120,0)
 ..S LRLOC=D1_LOC(Y)_D1
"RTN","AHMLDOP2",121,0)
 .S II="",LRLOC=D1
"RTN","AHMLDOP2",122,0)
 .F  S II=$O(^XTMP("AHMLD",II)) Q:II=""  S LRLOC=LRLOC_$P(^XTMP("AHMLD",II),"^",2)_D1
"RTN","AHMLDOP2",123,0)
 ;
"RTN","AHMLDOP2",124,0)
 Q
"RTN","AHMLDOP2",125,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP2",126,0)
TEST ; Prompt for lab test(s) to be included (<Return> for all).
"RTN","AHMLDOP2",127,0)
 ;
"RTN","AHMLDOP2",128,0)
 N X,STOP
"RTN","AHMLDOP2",129,0)
 ;
"RTN","AHMLDOP2",130,0)
 K DIC,^TMP($J,"AHMLTST")
"RTN","AHMLDOP2",131,0)
 W !!,"Press <Enter> at LABORATORY TEST NAME Prompt to select All Tests",!
"RTN","AHMLDOP2",132,0)
 S DIC="^LAB(60,",DIC(0)="AEMOQ",STOP=0
"RTN","AHMLDOP2",133,0)
 S DIC("S")="I $P(^(0),U,4)[""CH"",""BO""[$P(^(0),U,3)"
"RTN","AHMLDOP2",134,0)
 ;
"RTN","AHMLDOP2",135,0)
 F  D  Q:STOP!(LREND)
"RTN","AHMLDOP2",136,0)
 .D ^DIC
"RTN","AHMLDOP2",137,0)
 .I X["^" S LREND=1 Q
"RTN","AHMLDOP2",138,0)
 .I Y>0 S ^TMP($J,"AHMLTST",$P(Y,U,2))=""
"RTN","AHMLDOP2",139,0)
 .I Y<0 S STOP=1 Q
"RTN","AHMLDOP2",140,0)
 ;
"RTN","AHMLDOP2",141,0)
 I '$D(^TMP($J,"AHMLTST")) S LRTEST="*" W "ALL Tests Selected"
"RTN","AHMLDOP2",142,0)
 E  S LRTEST=""
"RTN","AHMLDOP2",143,0)
 ;
"RTN","AHMLDOP2",144,0)
 Q
"RTN","AHMLDOP2",145,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP2",146,0)
IMAGE ; Prompt for rad image type(s) to be included (<Return> for all).
"RTN","AHMLDOP2",147,0)
 ;
"RTN","AHMLDOP2",148,0)
 N X,Y,STOP
"RTN","AHMLDOP2",149,0)
 ;
"RTN","AHMLDOP2",150,0)
 K DIC,^TMP($J,"AHMLTST")
"RTN","AHMLDOP2",151,0)
 W !!,"Press <Enter> at IMAGE TYPE Prompt to select All Tests",!
"RTN","AHMLDOP2",152,0)
 S DIC="^RA(79.2,",DIC(0)="AEMOQ",STOP=0,DIC("A")="IMAGE TYPE: "
"RTN","AHMLDOP2",153,0)
 ;
"RTN","AHMLDOP2",154,0)
 F  D  Q:STOP!(LREND)
"RTN","AHMLDOP2",155,0)
 .D ^DIC
"RTN","AHMLDOP2",156,0)
 .I X["^" S LREND=1 Q
"RTN","AHMLDOP2",157,0)
 .I Y>0 S ^TMP($J,"AHMLTST",$P(Y,U,2))=""
"RTN","AHMLDOP2",158,0)
 .I Y<0 S STOP=1 Q
"RTN","AHMLDOP2",159,0)
 ;
"RTN","AHMLDOP2",160,0)
 I '$D(^TMP($J,"AHMLTST")) S LRTEST="*" W "ALL Image Types Selected"
"RTN","AHMLDOP2",161,0)
 E  S LRTEST=""
"RTN","AHMLDOP2",162,0)
 ;
"RTN","AHMLDOP2",163,0)
 Q
"RTN","AHMLDOP2",164,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP2",165,0)
CPT ; Prompt for CPT Code(s) to be included (<Return> for all).
"RTN","AHMLDOP2",166,0)
 ;
"RTN","AHMLDOP2",167,0)
 N X,STOP
"RTN","AHMLDOP2",168,0)
 ;
"RTN","AHMLDOP2",169,0)
 K DIC,^TMP($J,"AHMLCPT")
"RTN","AHMLDOP2",170,0)
 W !!,"Press <Enter> at CPT CODE Prompt to select All Tests",!
"RTN","AHMLDOP2",171,0)
 S DIC="^ICPT(",DIC(0)="AEMOQ",STOP=0,DIC("A")="CPT CODE: "
"RTN","AHMLDOP2",172,0)
 ;
"RTN","AHMLDOP2",173,0)
 F  D  Q:STOP!(LREND)
"RTN","AHMLDOP2",174,0)
 .D ^DIC
"RTN","AHMLDOP2",175,0)
 .I X["^" S LREND=1 Q
"RTN","AHMLDOP2",176,0)
 .I Y>0 S ^TMP($J,"AHMLCPT",$P(Y,U,2))=""
"RTN","AHMLDOP2",177,0)
 .I Y<0 S STOP=1 Q
"RTN","AHMLDOP2",178,0)
 ;
"RTN","AHMLDOP2",179,0)
 I '$D(^TMP($J,"AHMLCPT")) S LRTEST="*" W "ALL CPT Codes Selected"
"RTN","AHMLDOP2",180,0)
 E  S LRTEST=""
"RTN","AHMLDOP2",181,0)
 ;
"RTN","AHMLDOP2",182,0)
 Q
"RTN","AHMLDOP2",183,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP2",184,0)
DETAIL ; Include detail?  (1=yes, 0=no).  Default "NO".
"RTN","AHMLDOP2",185,0)
 ;
"RTN","AHMLDOP2",186,0)
 N Y
"RTN","AHMLDOP2",187,0)
 K DIR
"RTN","AHMLDOP2",188,0)
 S DIR("B")="NO",DIR("A")="Include a Detailed Report?",DIR(0)="S^1:NO;2:YES"
"RTN","AHMLDOP2",189,0)
 ;
"RTN","AHMLDOP2",190,0)
 D ^DIR
"RTN","AHMLDOP2",191,0)
 S:($D(DUOUT))!($D(DTOUT)) LREND=1 S:'LREND LRDET=Y-1 Q
"RTN","AHMLDOP2",192,0)
 ;
"RTN","AHMLDOP2",193,0)
 Q
"RTN","AHMLDOP2",194,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP2",195,0)
START ; Produce report looping through OR(100 data.
"RTN","AHMLDOP2",196,0)
 ;
"RTN","AHMLDOP2",197,0)
 ;   Input: LRSDT - Start date
"RTN","AHMLDOP2",198,0)
 ;          LREDT - End date
"RTN","AHMLDOP2",199,0)
 ;          LRLOC - Location(s) [|loc1|loc2|...]
"RTN","AHMLDOP2",200,0)
 ;          LRDET - Detail      [0=No, 1=Yes]
"RTN","AHMLDOP2",201,0)
 ;
"RTN","AHMLDOP2",202,0)
 ;  Output: Report.
"RTN","AHMLDOP2",203,0)
 ;
"RTN","AHMLDOP2",204,0)
 N ABREV,CDATE,CPT,D0,DATA,IPROC,ITYPE,LOC,LRDT,LRDT1,ODATE,OR,OR1
"RTN","AHMLDOP2",205,0)
 N PNAME,PROV,RDATE,STATUS,TEST,TMP,TNAME
"RTN","AHMLDOP2",206,0)
 ;
"RTN","AHMLDOP2",207,0)
 S LRDT=(LREDT-1)+.999999,LRDT1=LRSDT+.999999
"RTN","AHMLDOP2",208,0)
 ;
"RTN","AHMLDOP2",209,0)
 F  S LRDT=$O(^OR(100,XREF,LRDT)) Q:LRDT=""!(LRDT>LRDT1)  D
"RTN","AHMLDOP2",210,0)
 .S OR="" F  S OR=$O(^OR(100,XREF,LRDT,OR)) Q:OR=""  D
"RTN","AHMLDOP2",211,0)
 ..I +$P($G(^OR(100,OR,0)),U,5)'=+LRT Q           ;not a lab/rad test
"RTN","AHMLDOP2",212,0)
 ..I '$D(^OR(100,OR,4.5)) Q
"RTN","AHMLDOP2",213,0)
 ..S OR1="" F  S OR1=$O(^OR(100,OR,4.5,OR1)) Q:OR1=""  D
"RTN","AHMLDOP2",214,0)
 ...S DATA=$G(^OR(100,OR,4.5,OR1,0))
"RTN","AHMLDOP2",215,0)
 ...I $P(DATA,U,4)'="Location" Q
"RTN","AHMLDOP2",216,0)
 ...S LOC=$G(^OR(100,OR,4.5,OR1,1)) Q:LOC=""
"RTN","AHMLDOP2",217,0)
 ...I LRLOC'[(D1_LOC_D1) Q
"RTN","AHMLDOP2",218,0)
 ...I $D(^TMP($J,"AHML",LOC,OR)) Q
"RTN","AHMLDOP2",219,0)
 ...S TEST=$G(^OR(100,OR,4.5,1,1))                ;test
"RTN","AHMLDOP2",220,0)
 ...S ODATE=$$DATE($$FMTE^XLFDT(LRDT))            ;order date/time
"RTN","AHMLDOP2",221,0)
 ...S PROV=$$GET1^DIQ(100,OR,1)                   ;provider
"RTN","AHMLDOP2",222,0)
 ...S PNAME=$$GET1^DIQ(100,OR,.02)                ;patient name
"RTN","AHMLDOP2",223,0)
 ...S TNAME=$$GET1^DIQ(101.43,TEST,.01)           ;test/procedure name
"RTN","AHMLDOP2",224,0)
 ...S D0=+$$GET1^DIQ(101.43,TEST,2,"I")           ;D0 rad/nuc #71 file
"RTN","AHMLDOP2",225,0)
 ...S (ABREV,CPT,ITYPE,IPROC,TMP)=""
"RTN","AHMLDOP2",226,0)
 ...I D0]"" D
"RTN","AHMLDOP2",227,0)
 ....S CPT=$$GET1^DIQ(71,D0,9)                    ;CPT code
"RTN","AHMLDOP2",228,0)
 ....S ITYPE=$$GET1^DIQ(71,D0,12)                 ;Imaging type
"RTN","AHMLDOP2",229,0)
 ....I ITYPE]"" S TMP=$O(^RA(79.2,"B",ITYPE,""))
"RTN","AHMLDOP2",230,0)
 ....I TMP]"" S ABREV=$$GET1^DIQ(79.2,TMP,3)      ;Imaging type abbrev
"RTN","AHMLDOP2",231,0)
 ....S IPROC=$$GET1^DIQ(71,D0,.01)                ;Imaging procedure
"RTN","AHMLDOP2",232,0)
 ...S STATUS=$$GET1^DIQ(100,OR,5)                 ;status
"RTN","AHMLDOP2",233,0)
 ...I STATUS="UNRELEASED" Q                       ;no unreleased
"RTN","AHMLDOP2",234,0)
 ...S CDATE=$P($$GET1^DIQ(100,OR,33),D2,2,3)       ;collect date/time
"RTN","AHMLDOP2",235,0)
 ...I CDATE]"",$P(CDATE,D2)]"",$P(CDATE,D2,2)]"" D
"RTN","AHMLDOP2",236,0)
 ....S CDATE=$P($G(^LRO(69,$P(CDATE,D2),1,$P(CDATE,D2,2),1)),U)
"RTN","AHMLDOP2",237,0)
 ....S CDATE=$$DATE($$FMTE^XLFDT(CDATE))
"RTN","AHMLDOP2",238,0)
 ...S RDATE=$$DATE($$GET1^DIQ(100,OR,22,"E"))     ;report date/time
"RTN","AHMLDOP2",239,0)
 ...I LRT="1B",RDATE="" Q                         ;CPT wRVU only reported
"RTN","AHMLDOP2",240,0)
 ...I LRT="1B",$E(STATUS,1)="D" Q                 ;         and no deleted
"RTN","AHMLDOP2",241,0)
 ...I +LRT=1 D
"RTN","AHMLDOP2",242,0)
 ....S TMP=$S(LRT="1B":RDATE,1:ODATE)_D1_PROV      ;rad order detail
"RTN","AHMLDOP2",243,0)
 ....S TMP=TMP_D1_PNAME_D1_CPT_D1_ITYPE
"RTN","AHMLDOP2",244,0)
 ....S TMP=TMP_D1_IPROC_D1_$E(STATUS,1)
"RTN","AHMLDOP2",245,0)
 ....S TNAME=ITYPE
"RTN","AHMLDOP2",246,0)
 ...I LRT=2 D
"RTN","AHMLDOP2",247,0)
 ....S TMP=ODATE_D1_PROV_D1_PNAME_D1_TNAME           ;lab report detail
"RTN","AHMLDOP2",248,0)
 ....S TMP=TMP_D1_$E(STATUS,1)_D1_CDATE_D1_RDATE
"RTN","AHMLDOP2",249,0)
 ...I LRT'="1A",LRT'="1B",TNAME]"",$D(^TMP($J,"AHMLTST",TNAME))!(LRTEST="*") D
"RTN","AHMLDOP2",250,0)
 ....S ^TMP($J,"AHMLTST")=$G(^TMP($J,"AHMLTST"))+1              ;total
"RTN","AHMLDOP2",251,0)
 ....S ^TMP($J,"AHMLTST",TNAME)=$G(^TMP($J,"AHMLTST",TNAME))+1  ;total by test
"RTN","AHMLDOP2",252,0)
 ...I +LRT=1,TNAME]"",ABREV]"" D
"RTN","AHMLDOP2",253,0)
 ....S ^TMP($J,"AHMLX",TNAME)=ABREV                           ;Image type abrev
"RTN","AHMLDOP2",254,0)
 ...I LRT'="1A",LRT'="1B",TNAME]"",'$D(^TMP($J,"AHMLTST",TNAME)),LRTEST'="*" Q   ;test not selected
"RTN","AHMLDOP2",255,0)
 ...I (LRT="1A"!(LRT="1B")),IPROC]"" S:CPT="" CPT="NONE" D
"RTN","AHMLDOP2",256,0)
 ....I LRTEST'="*",'$D(^TMP($J,"AHMLCPT",CPT)) Q
"RTN","AHMLDOP2",257,0)
 ....S ^TMP($J,"AHMLTST")=$G(^TMP($J,"AHMLTST"))+1                      ;Total
"RTN","AHMLDOP2",258,0)
 ....S ^TMP($J,"AHMLTST",CPT,IPROC)=$G(^TMP($J,"AHMLTST",CPT,IPROC))+1  ;total by CPT
"RTN","AHMLDOP2",259,0)
 ...I LRT="1A",LRTEST'="*",CPT]"",'$D(^TMP($J,"AHMLCPT",CPT)) Q       ;not a CPT to total
"RTN","AHMLDOP2",260,0)
 ...I LRT="1A",CPT="",LRTEST'="*" Q
"RTN","AHMLDOP2",261,0)
 ...S ^TMP($J,"AHML")=$G(^TMP($J,"AHML"))+1                     ;grand total
"RTN","AHMLDOP2",262,0)
 ...S ^TMP($J,"AHML",LOC)=$G(^TMP($J,"AHML",LOC))+1             ;location total
"RTN","AHMLDOP2",263,0)
 ...S ^TMP($J,"AHML",LOC,OR)=TMP                              ;order detail
"RTN","AHMLDOP2",264,0)
 ;
"RTN","AHMLDOP2",265,0)
 I '$D(^TMP($J,"AHML")) D  Q                                  ;nothing matching criteria
"RTN","AHMLDOP2",266,0)
 .W !!,"No data found matching prescribed criteria.",!
"RTN","AHMLDOP2",267,0)
 D HDR
"RTN","AHMLDOP2",268,0)
 I 'LRDET Q
"RTN","AHMLDOP2",269,0)
 ;
"RTN","AHMLDOP2",270,0)
 S (LOC,OR,PLOC)=""
"RTN","AHMLDOP2",271,0)
 F  S LOC=$O(^TMP($J,"AHML",LOC)) Q:LOC=""  D  Q:LREND
"RTN","AHMLDOP2",272,0)
 .I LOC'=PLOC S PLOC=LOC D SHDR
"RTN","AHMLDOP2",273,0)
 .F  S OR=$O(^TMP($J,"AHML",LOC,OR)) Q:OR=""  D  Q:LREND
"RTN","AHMLDOP2",274,0)
 ..S DATA=^TMP($J,"AHML",LOC,OR)
"RTN","AHMLDOP2",275,0)
 ..I DATA="" Q
"RTN","AHMLDOP2",276,0)
 ..I $Y+2>IOSL D WAIT Q:LREND  D:$E(IOST,1,2)'="C-" HDR D SHDR
"RTN","AHMLDOP2",277,0)
 ..I +LRT=1 D
"RTN","AHMLDOP2",278,0)
 ...S TMP=$P(DATA,D1,5)
"RTN","AHMLDOP2",279,0)
 ...I TMP]"",$G(^TMP($J,"AHMLX",TMP))]"" S TMP=^TMP($J,"AHMLX",TMP)
"RTN","AHMLDOP2",280,0)
 ...W !,$P($P(DATA,D1),"@")
"RTN","AHMLDOP2",281,0)
 ...W ?10,$E($P(DATA,D1,2),1,14),?26,$E($P(DATA,D1,3),1,14)
"RTN","AHMLDOP2",282,0)
 ...W ?42,$E($P(DATA,D1,4),1,14),?49,$E(TMP,1,11)
"RTN","AHMLDOP2",283,0)
 ...W ?55,$E($P(DATA,D1,6),1,21),?77,$P(DATA,D1,7)
"RTN","AHMLDOP2",284,0)
 ...W ! I $P(DATA,D1)]"" W " @",$P($P(DATA,D1),"@",2)
"RTN","AHMLDOP2",285,0)
 ...W ?10,$E($P(DATA,D1,2),15,28),?26,$E($P(DATA,D1,3),15,28)
"RTN","AHMLDOP2",286,0)
 ...W ?42,$E($P(DATA,D1,4),15,28),?49,$E(TMP,12,22)
"RTN","AHMLDOP2",287,0)
 ...W ?55,$E($P(DATA,D1,6),22,42)
"RTN","AHMLDOP2",288,0)
 ..I LRT=2 D
"RTN","AHMLDOP2",289,0)
 ...W !,$P($P(DATA,D1),"@"),?10,$E($P(DATA,D1,2),1,14)
"RTN","AHMLDOP2",290,0)
 ...W ?26,$E($P(DATA,D1,3),1,14),?42,$E($P(DATA,D1,4),1,14)
"RTN","AHMLDOP2",291,0)
 ...W ?58,$P(DATA,D1,5),?62,$P($P(DATA,D1,6),"@")
"RTN","AHMLDOP2",292,0)
 ...W ?72 I $P(DATA,D1,5)'="D" W $P($P(DATA,D1,7),"@")
"RTN","AHMLDOP2",293,0)
 ...W ! I $P(DATA,D1)]"" W " @",$P($P(DATA,D1),"@",2)
"RTN","AHMLDOP2",294,0)
 ...W ?10,$E($P(DATA,D1,2),15,28),?26,$E($P(DATA,D1,3),15,28)
"RTN","AHMLDOP2",295,0)
 ...W ?42,$E($P(DATA,D1,4),15,28)
"RTN","AHMLDOP2",296,0)
 ...W ?62 I $P(DATA,D1,6)]"" W " @",$P($P(DATA,D1,6),"@",2)
"RTN","AHMLDOP2",297,0)
 ...W ?72 I $P(DATA,D1,5)'="D",$P(DATA,D1,7)]"" D
"RTN","AHMLDOP2",298,0)
 ....W " @",$P($P(DATA,D1,7),"@",2)
"RTN","AHMLDOP2",299,0)
 ;
"RTN","AHMLDOP2",300,0)
 Q
"RTN","AHMLDOP2",301,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP2",302,0)
HDR ; Print header and totals by location.
"RTN","AHMLDOP2",303,0)
 ;
"RTN","AHMLDOP2",304,0)
 N EXAM,GTWRVU,LL,NAME,TEXAM,TWRVU,WRVU,GTEXAM
"RTN","AHMLDOP2",305,0)
 ;
"RTN","AHMLDOP2",306,0)
 S LRPAG=LRPAG+1
"RTN","AHMLDOP2",307,0)
 ;
"RTN","AHMLDOP2",308,0)
 W ?$S(LRT=2:24,LRT=1:20,LRT="1B":18,1:22),"Remote "
"RTN","AHMLDOP2",309,0)
 W $S(LRT=2:"Lab",1:"Radiology")," Orders by "
"RTN","AHMLDOP2",310,0)
 W $S(LRT=2:"Test Name",LRT=1:"Imaging Type",1:"CPT Code")
"RTN","AHMLDOP2",311,0)
 I LRT="1B" W " and wRVU"
"RTN","AHMLDOP2",312,0)
 W ?73,"Page ",LRPAG
"RTN","AHMLDOP2",313,0)
 W !?23,"From ",$$FMTE^XLFDT(LREDT)," to ",$$FMTE^XLFDT(LRSDT)
"RTN","AHMLDOP2",314,0)
 W !?22,"Date Printed: ",$$FMTE^XLFDT($$NOW^XLFDT),!
"RTN","AHMLDOP2",315,0)
 ;
"RTN","AHMLDOP2",316,0)
 I LRT="1A" D  Q
"RTN","AHMLDOP2",317,0)
 .W !?5,"CPT",?12,"Procedure",?50,"Total"
"RTN","AHMLDOP2",318,0)
 .W !?5,$TR($J("",65)," ","-")
"RTN","AHMLDOP2",319,0)
 .S (LL,NAME)=""
"RTN","AHMLDOP2",320,0)
 .F  S LL=$O(^TMP($J,"AHMLTST",LL)) Q:LL=""  D  Q:LREND
"RTN","AHMLDOP2",321,0)
 ..F  S NAME=$O(^TMP($J,"AHMLTST",LL,NAME)) Q:NAME=""  D  Q:LREND
"RTN","AHMLDOP2",322,0)
 ...W !?5,LL,?12,$E(NAME,1,37),?50,^TMP($J,"AHMLTST",LL,NAME)
"RTN","AHMLDOP2",323,0)
 .W !?5,$TR($J("",50)," ","-")
"RTN","AHMLDOP2",324,0)
 .W !?5,$J("Total",38),$TR($J(^TMP($J,"AHMLTST"),10)," ","."),!
"RTN","AHMLDOP2",325,0)
 ;
"RTN","AHMLDOP2",326,0)
 I LRT="1B" D  Q
"RTN","AHMLDOP2",327,0)
 .S (WRVU,TWRVU,GTWRVU,EXAM,GTEXAM)=0
"RTN","AHMLDOP2",328,0)
 .W !?58,"Total",?70,"Total"
"RTN","AHMLDOP2",329,0)
 .W !?5,"CPT",?12,"Procedure",?50,"wRVU",?58,"Exams",?70,"wRVU"
"RTN","AHMLDOP2",330,0)
 .W !?5,$TR($J("",70)," ","-")
"RTN","AHMLDOP2",331,0)
 .S (LL,NAME)=""
"RTN","AHMLDOP2",332,0)
 .F  S LL=$O(^TMP($J,"AHMLTST",LL)) Q:LL=""  D  Q:LREND
"RTN","AHMLDOP2",333,0)
 ..F  S NAME=$O(^TMP($J,"AHMLTST",LL,NAME)) Q:NAME=""  D  Q:LREND
"RTN","AHMLDOP2",334,0)
 ...S WRVU=+$$RVU^FBRVU(LL),EXAM=^TMP($J,"AHMLTST",LL,NAME)
"RTN","AHMLDOP2",335,0)
 ...S TWRVU=WRVU*EXAM,GTWRVU=GTWRVU+TWRVU,GTEXAM=GTEXAM+EXAM
"RTN","AHMLDOP2",336,0)
 ...W !?5,LL,?12,$E(NAME,1,37),?50,WRVU,?58,EXAM,?70,TWRVU
"RTN","AHMLDOP2",337,0)
 .W !?5,$TR($J("",70)," ","-")
"RTN","AHMLDOP2",338,0)
 .W !?5,$J("Totals",40),?58,GTEXAM,?70,GTWRVU,!
"RTN","AHMLDOP2",339,0)
 ;
"RTN","AHMLDOP2",340,0)
 S LL=""
"RTN","AHMLDOP2",341,0)
 F  S LL=$O(^TMP($J,"AHMLTST",LL)) Q:LL=""  D  Q:LREND
"RTN","AHMLDOP2",342,0)
 .I $G(^TMP($J,"AHMLX",LL))]"" S NAME=^TMP($J,"AHMLX",LL)
"RTN","AHMLDOP2",343,0)
 .E  S NAME=LL
"RTN","AHMLDOP2",344,0)
 .W !?5,$J(NAME,$S(+LRT=1:15,1:35))
"RTN","AHMLDOP2",345,0)
 .W $TR($J(^TMP($J,"AHMLTST",LL),10)," ",".")
"RTN","AHMLDOP2",346,0)
 W !?5,$TR($J("",$S(+LRT=1:26,1:46))," ","-")
"RTN","AHMLDOP2",347,0)
 W !?5,$J("Total",$S(+LRT=1:15,1:35))
"RTN","AHMLDOP2",348,0)
 W $TR($J(+$G(^TMP($J,"AHMLTST")),10)," ","."),!
"RTN","AHMLDOP2",349,0)
 ;
"RTN","AHMLDOP2",350,0)
 Q
"RTN","AHMLDOP2",351,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP2",352,0)
SHDR ; Print sub header.
"RTN","AHMLDOP2",353,0)
 ;
"RTN","AHMLDOP2",354,0)
 I $Y+6>IOSL D WAIT Q:LREND  D:$E(IOST,1,2)'="C-" HDR W !
"RTN","AHMLDOP2",355,0)
 ;
"RTN","AHMLDOP2",356,0)
 W !!,"==> Performing Location: ",LOC,!
"RTN","AHMLDOP2",357,0)
 I +LRT=1 D                                       ;rad sub header
"RTN","AHMLDOP2",358,0)
 .W !,$S(LRT="1B":"Report",1:"Order")
"RTN","AHMLDOP2",359,0)
 .W ?10,"Provider",?26,"Patient",?42,"CPT",?49,"Type"
"RTN","AHMLDOP2",360,0)
 .W ?55,"Image Procedure",?77,"St"
"RTN","AHMLDOP2",361,0)
 .W !,$TR($J("",8)," ","-"),?10,$TR($J("",14)," ","-")
"RTN","AHMLDOP2",362,0)
 .W ?26,$TR($J("",14)," ","-"),?42,$TR($J("",5)," ","-")
"RTN","AHMLDOP2",363,0)
 .W ?49,$TR($J("",4)," ","-"),?55,$TR($J("",20)," ","-")
"RTN","AHMLDOP2",364,0)
 .W ?77,$TR($J("",3)," ","-")
"RTN","AHMLDOP2",365,0)
 ;
"RTN","AHMLDOP2",366,0)
 I LRT=2 D                                       ;lab sub header
"RTN","AHMLDOP2",367,0)
 .W !,"Order",?10,"Provider",?26,"Patient",?42
"RTN","AHMLDOP2",368,0)
 .W "Test",?58,"St",?62,"Collect",?72,"Report"
"RTN","AHMLDOP2",369,0)
 .W !,$TR($J("",8)," ","-"),?10,$TR($J("",14)," ","-")
"RTN","AHMLDOP2",370,0)
 .W ?26,$TR($J("",14)," ","-"),?42,$TR($J("",14)," ","-")
"RTN","AHMLDOP2",371,0)
 .W ?58,$TR($J("",3)," ","-"),?62,$TR($J("",8)," ","-")
"RTN","AHMLDOP2",372,0)
 .W ?72,$TR($J("",8)," ","-")
"RTN","AHMLDOP2",373,0)
 ;
"RTN","AHMLDOP2",374,0)
 Q
"RTN","AHMLDOP2",375,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP2",376,0)
DATE(DATE) ; Convert mmm dd, yyyy@hh:mm to mm/dd/yyyy@hh:mm
"RTN","AHMLDOP2",377,0)
 ;
"RTN","AHMLDOP2",378,0)
 N DD,DM,DSTR,DY,LOWER,TM,UPPER
"RTN","AHMLDOP2",379,0)
 ;
"RTN","AHMLDOP2",380,0)
 I $G(DATE)="" Q ""
"RTN","AHMLDOP2",381,0)
 ;
"RTN","AHMLDOP2",382,0)
 S LOWER="abcdefghijklmnopqrstuvwxyz"
"RTN","AHMLDOP2",383,0)
 S UPPER="ABCDEFGHIJKLMNOPQRSTUVWXYZ"
"RTN","AHMLDOP2",384,0)
 S DSTR("JAN")="01",DSTR("FEB")="02",DSTR("MAR")="03",DSTR("APR")="04"
"RTN","AHMLDOP2",385,0)
 S DSTR("MAY")="05",DSTR("JUN")="06",DSTR("JUL")="07",DSTR("AUG")="08"
"RTN","AHMLDOP2",386,0)
 S DSTR("SEP")="09",DSTR("OCT")=10,DSTR("NOV")=11,DSTR("DEC")=12
"RTN","AHMLDOP2",387,0)
 ;
"RTN","AHMLDOP2",388,0)
 S DM=$TR($P(DATE," "),LOWER,UPPER),DD=$P($P(DATE," ",2),",")
"RTN","AHMLDOP2",389,0)
 S DY=$E($P($P(DATE," ",3),"@"),3,4),TM=$P($P(DATE,"@",2),":",1,2)
"RTN","AHMLDOP2",390,0)
 ;
"RTN","AHMLDOP2",391,0)
 Q DSTR(DM)_"/"_DD_"/"_DY_"@"_TM
"RTN","AHMLDOP2",392,0)
 ;---------------------------------------------------------------------
"RTN","AHMLDOP2",393,0)
WAIT ; Pause for page breaks.
"RTN","AHMLDOP2",394,0)
 ;
"RTN","AHMLDOP2",395,0)
 K DIR
"RTN","AHMLDOP2",396,0)
 S DIR(0)="E"
"RTN","AHMLDOP2",397,0)
 D ^DIR
"RTN","AHMLDOP2",398,0)
 S:($D(DUOUT))!($D(DTOUT)) LREND=1
"RTN","AHMLDOP2",399,0)
 S $Y=1
"RTN","AHMLDOP2",400,0)
 ;
"RTN","AHMLDOP2",401,0)
 Q
"RTN","AHMLDOR")
0^9^B12658126
"RTN","AHMLDOR",1,0)
AHMLDOR ;LEIDOS/TCK- Remote ordering - Radiology ; 2/27/17 12:31am
"RTN","AHMLDOR",2,0)
 ;;1.0;Radiology Orders Portability;**1**;April 1, 2016;Build 53
"RTN","AHMLDOR",3,0)
 ; Reference to ^DIC(4 supported by IA #10090
"RTN","AHMLDOR",4,0)
 ; Reference to DC^ORWDXA supported by IA #5595
"RTN","AHMLDOR",5,0)
 ; Reference to SEND^ORWDX supported by IA #5596
"RTN","AHMLDOR",6,0)
 ;
"RTN","AHMLDOR",7,0)
 ; Updated: 20100908
"RTN","AHMLDOR",8,0)
 ; updated 20101124 rhl DBGOUT
"RTN","AHMLDOR",9,0)
 ; updated 20110509 dje: IA comments, code cleanup.  Note:  the IA references may be unnecessary, since the relevant code is commented out.
"RTN","AHMLDOR",10,0)
 ;
"RTN","AHMLDOR",11,0)
 ; gsn - Start using RD1 type delimiters instead of D1 types as these
"RTN","AHMLDOR",12,0)
 ;       variables are used by fileman calls
"RTN","AHMLDOR",13,0)
 ; 4076 - PACS define REQLOC from OBR13
"RTN","AHMLDOR",14,0)
 ;
"RTN","AHMLDOR",15,0)
EN ;
"RTN","AHMLDOR",16,0)
 ; Note: HL7 delimitors D1-D5 are defined in JVOR
"RTN","AHMLDOR",17,0)
 ;
"RTN","AHMLDOR",18,0)
 ;
"RTN","AHMLDOR",19,0)
 K ^TMP($J,"AHMLDO"),REC,HLARY
"RTN","AHMLDOR",20,0)
 N II,D1,D2,D3,D4,D5,TYPE
"RTN","AHMLDOR",21,0)
 S (D1,D2,D3,D4,D5,TYPE)="",CC=0  ;Initialize variables
"RTN","AHMLDOR",22,0)
 I $G(HLMTIEN)'>0 S AHOUT(1)="0^No Results Array Received" Q
"RTN","AHMLDOR",23,0)
 S HLMA="",HLMA=$O(^HLMA("B",HLMTIEN,HLMA))
"RTN","AHMLDOR",24,0)
 Q:$G(HLMA)'>0
"RTN","AHMLDOR",25,0)
 Q:'$D(^HLMA(HLMA,0))
"RTN","AHMLDOR",26,0)
 Q:'$D(^HLMA(HLMA,"MSH"))
"RTN","AHMLDOR",27,0)
 S LOC=+$P(^HLMA(HLMA,"MSH",1,0),"|",4)
"RTN","AHMLDOR",28,0)
 M ^TMP($J,"AHMLDO",1)=^HLMA(HLMA,"MSH",1,0)
"RTN","AHMLDOR",29,0)
 S DONE=0
"RTN","AHMLDOR",30,0)
 S II=0 F  S II=$O(^HL(772,HLMTIEN,"IN",II)) Q:II=""  D
"RTN","AHMLDOR",31,0)
 .Q:II=""
"RTN","AHMLDOR",32,0)
 .S CC=$G(II)+1
"RTN","AHMLDOR",33,0)
 .S SB=$P(^HL(772,HLMTIEN,"IN",II,0),"|")
"RTN","AHMLDOR",34,0)
 .I 'DONE,SB=""!(SB'?.A),$P(^TMP($J,"AHMLDO",II),"|")="OBR" D  Q
"RTN","AHMLDOR",35,0)
 ..S ^TMP($J,"AHMLDO",CC-1)=^TMP($J,"AHMLDO",CC-1)_^HL(772,HLMTIEN,"IN",II,0),DONE=1
"RTN","AHMLDOR",36,0)
 .S ^TMP($J,"AHMLDO",CC)=^HL(772,HLMTIEN,"IN",II,0)
"RTN","AHMLDOR",37,0)
 K RAMSG M RAMSG=^TMP($J,"AHMLDO")
"RTN","AHMLDOR",38,0)
 K ^TMP($J,"AHMLDO")
"RTN","AHMLDOR",39,0)
 S RD1="|",RD2="^",RD3="\"
"RTN","AHMLDOR",40,0)
 K RAOROUT
"RTN","AHMLDOR",41,0)
 N XC
"RTN","AHMLDOR",42,0)
 N ORIEN,WPRT,WPACH
"RTN","AHMLDOR",43,0)
 N LROK S LROK=1
"RTN","AHMLDOR",44,0)
 N IMGLOC,PROC,REQPRV,PRISTF,EXMDT,RPTSTA,RPTDT,TRNSCP,VRFDT
"RTN","AHMLDOR",45,0)
 N RADTE,IMGTYP,HOSDIV,CASE,EXSTAT,EXCAT,WARD,SERVC,RAOIEN,REQPRV,RPTEN
"RTN","AHMLDOR",46,0)
 N BED,REQLOC,CRDMTH,PRIRES,PRIDGC,RPTIEN,SECRES,SECSTF,SECDGC
"RTN","AHMLDOR",47,0)
 N LCASE,RPTENTDT,VRFDT,VRFPHY,ESCD,SVCBY,ITRLOC,LOGDT,ACTION,WPIT,WPRT,REQSTA,LSTACT,RAOSTADT,RAONWSTA
"RTN","AHMLDOR",48,0)
 ;
"RTN","AHMLDOR",49,0)
 N RACNT S RACNT=1
"RTN","AHMLDOR",50,0)
 Q:'$D(RAMSG)
"RTN","AHMLDOR",51,0)
 D PARSE
"RTN","AHMLDOR",52,0)
 Q:'$D(HLARY)
"RTN","AHMLDOR",53,0)
 ;
"RTN","AHMLDOR",54,0)
 I ORC1="DC" D EN^AHMLDOL G ENQ ; CPRS discontinue
"RTN","AHMLDOR",55,0)
 I ORC1="CA" D EN^AHMLDOL G ENQ ; Cancel exam and case
"RTN","AHMLDOR",56,0)
 I ORC1="NW",ORC5="IP" D REG^AHMLDOR1 G ENQ
"RTN","AHMLDOR",57,0)
 I ORC1="SC",ORC5="IP" D  G ENQ
"RTN","AHMLDOR",58,0)
 .I OBR25="X" D HLD^AHMLDOR1 ;Cancel Arrival
"RTN","AHMLDOR",59,0)
 .I OBR25="I" D REG^AHMLDOR1 ;Rad Arrival
"RTN","AHMLDOR",60,0)
 I ORC1="RE" D  G ENQ ;  results
"RTN","AHMLDOR",61,0)
 .I OBR25'["F" Q
"RTN","AHMLDOR",62,0)
 .D RSLT^AHMLDOR1 G ENQ
"RTN","AHMLDOR",63,0)
 ;
"RTN","AHMLDOR",64,0)
 ;bsl;non-translated vista codes instead of CHCS codes
"RTN","AHMLDOR",65,0)
 ;
"RTN","AHMLDOR",66,0)
 S AHOUT(1)="-1^UNKNOWN RAD MESSAGE TYPE RECEIVED="_ORC1
"RTN","AHMLDOR",67,0)
ENQ ;
"RTN","AHMLDOR",68,0)
 I '$D(AHOUT(1)) S AHOUT(1)="-1^NO RETURN MESSAGE"
"RTN","AHMLDOR",69,0)
 S AHOUT(1)=AHOUT(1)_$C(13)
"RTN","AHMLDOR",70,0)
 K MSHSEG,ORC,ORCSEG,ORDSEG,ORWREC,PID,CC,DONE,HLMA,LOC,OBR25
"RTN","AHMLDOR",71,0)
 K ORC1,ORC5,RD1,RD2,RD3,SB,XME,XMT
"RTN","AHMLDOR",72,0)
 Q
"RTN","AHMLDOR",73,0)
 ;
"RTN","AHMLDOR",74,0)
TEST(AHOUT,HLMTIEN) ;
"RTN","AHMLDOR",75,0)
 D EN
"RTN","AHMLDOR",76,0)
 Q
"RTN","AHMLDOR",77,0)
 ;
"RTN","AHMLDOR",78,0)
CHKORID(ID) ;
"RTN","AHMLDOR",79,0)
 Q
"RTN","AHMLDOR",80,0)
 ;
"RTN","AHMLDOR",81,0)
PARSE ;
"RTN","AHMLDOR",82,0)
 K PIDSEG
"RTN","AHMLDOR",83,0)
 N ZCNT,FLG,XT,XC,XX
"RTN","AHMLDOR",84,0)
 S PIDSEG="",ORCSEG=""
"RTN","AHMLDOR",85,0)
 ;
"RTN","AHMLDOR",86,0)
 S ZCNT="",FLG=0,U="^"
"RTN","AHMLDOR",87,0)
 F  S ZCNT=$O(RAMSG(ZCNT)) Q:ZCNT=""  D  Q:FLG=2
"RTN","AHMLDOR",88,0)
 . S XT=$P(RAMSG(ZCNT),RD1,1) Q:XT=""
"RTN","AHMLDOR",89,0)
 . S XC=$G(HLARY(XT))+1,HLARY(XT)=XC
"RTN","AHMLDOR",90,0)
 . S HLARY(XT,XC)=$P(RAMSG(ZCNT),RD1,2,999)
"RTN","AHMLDOR",91,0)
 ;   set some basic variables:
"RTN","AHMLDOR",92,0)
 S XX=HLARY("MSH",1),XX=$P(XX,RD1,8),XMT=$P(XX,RD1,1),XME=$P(XX,RD1,2)
"RTN","AHMLDOR",93,0)
 S MSHSEG=HLARY("MSH",1),PIDSEG=$G(HLARY("PID",1)),ORCSEG=$G(HLARY("ORC",1))
"RTN","AHMLDOR",94,0)
 S ORC1=$P($G(HLARY("ORC",1)),RD1,1),ORC5=$P($G(HLARY("ORC",1)),RD1,5)
"RTN","AHMLDOR",95,0)
 S REQLOC=+$P($G(HLARY("ORC",1)),RD1,13)         ;4076 init Reqloc
"RTN","AHMLDOR",96,0)
 S OBR25=$P($G(HLARY("OBR",1)),RD1,25)
"RTN","AHMLDOR",97,0)
 S ORIEN=$P($G(HLARY("OBR",1)),RD1,2)
"RTN","AHMLDOR",98,0)
 I $G(HLARY("ORC"))'>0 S ORC1="RE"
"RTN","AHMLDOR",99,0)
 Q
"RTN","AHMLDOR",100,0)
 ;
"RTN","AHMLDOR1")
0^10^B203114033
"RTN","AHMLDOR1",1,0)
AHMLDOR1 ;LEIDOS/TCK- Remote Order - Rad - filing driver ; 2/10/17 10:08am
"RTN","AHMLDOR1",2,0)
 ;;1.0;Radiology Orders Portability;**1**;April 1, 2016;Build 53
"RTN","AHMLDOR1",3,0)
 ; Reference to ^OR(100 supported by IA #5196
"RTN","AHMLDOR1",4,0)
 ; Reference to ^RAO(75.1 supported by IA #5604
"RTN","AHMLDOR1",5,0)
 ; Reference to ^RADPT( supported by IA #5602
"RTN","AHMLDOR1",6,0)
 ; Reference to ^RA(78.4 supported by IA #5662
"RTN","AHMLDOR1",7,0)
 ; Reference to ^RA(78.6 supported by IA #5663
"RTN","AHMLDOR1",8,0)
 ; Reference to X7005^RADD3 supported by IA #5661
"RTN","AHMLDOR1",9,0)
 ; Reference to A7007^RADD3 supported by IA #5661
"RTN","AHMLDOR1",10,0)
 ; Reference to ^DPT( supported by IA #10035
"RTN","AHMLDOR1",11,0)
 ; Reference to ^RAMIS(71.2 supported by IA #5664
"RTN","AHMLDOR1",12,0)
 ; Reference to ^DIC(81.3 supported by IA #2816
"RTN","AHMLDOR1",13,0)
 ; Reference to NOW^%DTC supported by IA #10000
"RTN","AHMLDOR1",14,0)
 ; Reference to GETDLG^ORCD supported by IA #5493
"RTN","AHMLDOR1",15,0)
 ;
"RTN","AHMLDOR1",16,0)
 ; updated:  20100908
"RTN","AHMLDOR1",17,0)
 ; updated 20110510 dje: Code cleanup, documentation of IAs.
"RTN","AHMLDOR1",18,0)
 ;
"RTN","AHMLDOR1",19,0)
 ; gsn - converted over to using RD1 delimiters for JVRA* code
"RTN","AHMLDOR1",20,0)
 ;4833 - Verifier and Esig not sent, define as doctor.
"RTN","AHMLDOR1",21,0)
 ;5161 - CKREG not checking for Case sts needed for re-arrivals.
"RTN","AHMLDOR1",22,0)
 ;5265 - Kill temp "AE xref used to prevent dupe case numbers assigned
"RTN","AHMLDOR1",23,0)
 ;       in SCASE^MLDOR2
"RTN","AHMLDOR1",24,0)
 ;
"RTN","AHMLDOR1",25,0)
 Q
"RTN","AHMLDOR1",26,0)
 ;
"RTN","AHMLDOR1",27,0)
RSLT ; file a RE message ( Rad Results )
"RTN","AHMLDOR1",28,0)
 ;
"RTN","AHMLDOR1",29,0)
 N ACKERR,CONTMEDIA,CPTMOD,DOB
"RTN","AHMLDOR1",30,0)
 K LROK
"RTN","AHMLDOR1",31,0)
 S (LROK,ACKERR)=0
"RTN","AHMLDOR1",32,0)
 S TYPE="RAD"
"RTN","AHMLDOR1",33,0)
 ;BL;fix to address unverified results being sent
"RTN","AHMLDOR1",34,0)
 I $P(HLARY("OBR",1),"^",25)="R" S LROK=1,AHOUT(1)=RADARRY("ORIEN")_"^UNVERIFIED RESULTS NOT FILED" Q
"RTN","AHMLDOR1",35,0)
 S NWSTATUS="COMPLETE"
"RTN","AHMLDOR1",36,0)
 D EN^AHMLDOR2(.RAMSG) ; set local variables from HLARY
"RTN","AHMLDOR1",37,0)
 ;check patient
"RTN","AHMLDOR1",38,0)
 I $D(HLARY("PID",1)) D  Q:ACKERR
"RTN","AHMLDOR1",39,0)
 .S DTA=HLARY("PID",1)
"RTN","AHMLDOR1",40,0)
 .I $G(DTA)="" D  Q
"RTN","AHMLDOR1",41,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOR1",42,0)
 .S DOB=$P(DTA,"|",7),SSN=+$P(DTA,"|",3),ORVPNME=$P(DTA,"|",5)
"RTN","AHMLDOR1",43,0)
 .I ORVPNME["^" S ORVPNME=$TR(ORVPNME,"^",",")
"RTN","AHMLDOR1",44,0)
 .I $G(ORVPNME)="" S ACKERR=1 D  Q
"RTN","AHMLDOR1",45,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOR1",46,0)
 .I $G(DOB)'>0 S ACKERR=1 D  Q
"RTN","AHMLDOR1",47,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient DOB not found",TYPE)
"RTN","AHMLDOR1",48,0)
 .I $G(SSN)'>0 S ACKERR=1 D  Q
"RTN","AHMLDOR1",49,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient SSN not found",TYPE)
"RTN","AHMLDOR1",50,0)
 .I '$D(^DPT("SSN",SSN)) S ACKERR=1 D  Q
"RTN","AHMLDOR1",51,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOR1",52,0)
 .S ORVP="",ORVP=$O(^DPT("SSN",SSN,ORVP))
"RTN","AHMLDOR1",53,0)
 .I $G(ORVP)'>0 S ACKERR=1 D  Q
"RTN","AHMLDOR1",54,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOR1",55,0)
 .S ORNME=$$GET1^DIQ(2,ORVP,.01,"I"),ORNME=$TR(ORNME," ",",")
"RTN","AHMLDOR1",56,0)
 .I ORNME'=ORVPNME S ACKERR=1 D  Q
"RTN","AHMLDOR1",57,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOR1",58,0)
 .S ORDOB=$$GET1^DIQ(2,ORVP,.03,"I")
"RTN","AHMLDOR1",59,0)
 .I $G(ORDOB)'>0 S ACKERR=1 D  Q
"RTN","AHMLDOR1",60,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient DOB not found",TYPE)
"RTN","AHMLDOR1",61,0)
 .I ORDOB'=DOB S ACKERR=1 D  Q
"RTN","AHMLDOR1",62,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOR1",63,0)
 .S ORSSN=$$GET1^DIQ(2,ORVP,.09,"I")
"RTN","AHMLDOR1",64,0)
 .I ORSSN'=SSN S ACKERR=1 D  Q:$G(ACKERR)
"RTN","AHMLDOR1",65,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOR1",66,0)
 ;BL;SETTING SC TO ACTIVE AND EXAMINED
"RTN","AHMLDOR1",67,0)
 Q:ACKERR
"RTN","AHMLDOR1",68,0)
 D CHK1^AHMLDOR2 I 'LROK G RSLTQ ; check validity of local variables.
"RTN","AHMLDOR1",69,0)
 ;
"RTN","AHMLDOR1",70,0)
 D CKREG I 'FOUND D REG
"RTN","AHMLDOR1",71,0)
 D VARS^AHMLDOR2 ; set derived local variables.
"RTN","AHMLDOR1",72,0)
 ;BL;Pass an Array to JVHLRA2
"RTN","AHMLDOR1",73,0)
 D BLDA
"RTN","AHMLDOR1",74,0)
 D RPT^AHMLDOR3(.RADARRY) I 'LROK G RSLTQ ; file results
"RTN","AHMLDOR1",75,0)
 ;
"RTN","AHMLDOR1",76,0)
RSLTQ ;
"RTN","AHMLDOR1",77,0)
 K AHOUT(1)
"RTN","AHMLDOR1",78,0)
 S:LROK AHOUT(1)=RADARRY("ORIEN")_"^RS" ; success
"RTN","AHMLDOR1",79,0)
 I 'LROK,'$D(AHOUT(1)) S AHOUT(1)="-1^RESULT ERROR MESSAGE"
"RTN","AHMLDOR1",80,0)
 Q
"RTN","AHMLDOR1",81,0)
 ;============================================================================
"RTN","AHMLDOR1",82,0)
REG ; file a SC message ( Rad Registration )
"RTN","AHMLDOR1",83,0)
 ;
"RTN","AHMLDOR1",84,0)
 ;
"RTN","AHMLDOR1",85,0)
 S (DUZ,DUZNME)=""
"RTN","AHMLDOR1",86,0)
 D PROXY^AHMLDOR2(.DUZ,DUZNME)
"RTN","AHMLDOR1",87,0)
 S (ACKERR,LROK)=0
"RTN","AHMLDOR1",88,0)
 N DIE,DA,ST,DR,SETRA,DTA
"RTN","AHMLDOR1",89,0)
 S NWSTATUS="WAITING FOR EXAM" ;rhl 20100929
"RTN","AHMLDOR1",90,0)
 D EN^AHMLDOR2(.RAMSG) ; set local variables from HLARY
"RTN","AHMLDOR1",91,0)
 S SETRA=0,TYPE="RAD"
"RTN","AHMLDOR1",92,0)
 ;check patient
"RTN","AHMLDOR1",93,0)
 I $D(HLARY("PID",1)) D  Q:ACKERR
"RTN","AHMLDOR1",94,0)
 .S DTA=HLARY("PID",1)
"RTN","AHMLDOR1",95,0)
 .I $G(DTA)="" D  Q
"RTN","AHMLDOR1",96,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOR1",97,0)
 .S DOB=$P(DTA,"|",7),SSN=+$P(DTA,"|",3),ORVPNME=$P(DTA,"|",5)
"RTN","AHMLDOR1",98,0)
 .I ORVPNME["^" S ORVPNME=$TR(ORVPNME,"^",",")
"RTN","AHMLDOR1",99,0)
 .I $G(ORVPNME)="" S ACKERR=1 D  Q
"RTN","AHMLDOR1",100,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOR1",101,0)
 .I $G(DOB)'>0 S ACKERR=1 D  Q
"RTN","AHMLDOR1",102,0)
 ..D ACK^AHMLDOL(HLMA,HLMTIEN,"AE","Patient DOB not found",TYPE)
"RTN","AHMLDOR1",103,0)
 .I $G(SSN)'>0 S ACKERR=1 D  Q
"RTN","AHMLDOR1",104,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient SSN not found",TYPE)
"RTN","AHMLDOR1",105,0)
 .I '$D(^DPT("SSN",SSN)) S ACKERR=1 D  Q
"RTN","AHMLDOR1",106,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOR1",107,0)
 .S ORVP="",ORVP=$O(^DPT("SSN",SSN,ORVP))
"RTN","AHMLDOR1",108,0)
 .I $G(ORVP)'>0 S ACKERR=1 D  Q
"RTN","AHMLDOR1",109,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOR1",110,0)
 .S ORNME=$$GET1^DIQ(2,ORVP,.01,"I"),ORNME=$TR(ORNME," ",",")
"RTN","AHMLDOR1",111,0)
 .I ORNME'=ORVPNME S ACKERR=1 D  Q
"RTN","AHMLDOR1",112,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOR1",113,0)
 .S ORDOB=$$GET1^DIQ(2,ORVP,.03,"I")
"RTN","AHMLDOR1",114,0)
 .I $G(ORDOB)'>0 S ACKERR=1 D  Q
"RTN","AHMLDOR1",115,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient DOB not found",TYPE)
"RTN","AHMLDOR1",116,0)
 .I ORDOB'=DOB S ACKERR=1 D  Q
"RTN","AHMLDOR1",117,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOR1",118,0)
 .S ORSSN=$$GET1^DIQ(2,ORVP,.09,"I")
"RTN","AHMLDOR1",119,0)
 .I ORSSN'=SSN S ACKERR=1 D  Q:$G(ACKERR)
"RTN","AHMLDOR1",120,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOR1",121,0)
 ;BL;SETTING SC TO ACTIVE AND EXAMINED
"RTN","AHMLDOR1",122,0)
 Q:ACKERR
"RTN","AHMLDOR1",123,0)
 I $P(HLARY("ORC",1),"|",5)="IP" D
"RTN","AHMLDOR1",124,0)
 . Q:$P(HLARY("OBR",1),"|",25)'="I"
"RTN","AHMLDOR1",125,0)
 . S DIE="^OR(100,",DA=ORIEN,ST=6,DR="5////"_ST_";" D ^DIE K DIE,DA
"RTN","AHMLDOR1",126,0)
 . S SETRA=1 ; success
"RTN","AHMLDOR1",127,0)
 S STOP=0
"RTN","AHMLDOR1",128,0)
 D CKREG  ;BSL;For setting update variables need to know if registered
"RTN","AHMLDOR1",129,0)
 I FOUND,SEX="F" D  ;BSL;SET VARIABLES TO CHECK FOR PREGNANCY UPDATE
"RTN","AHMLDOR1",130,0)
 . K X13
"RTN","AHMLDOR1",131,0)
 . ;BL;IA compliance change
"RTN","AHMLDOR1",132,0)
 . S RAOIEN=$$GET1^DIQ(100,ORIEN,33,"I")
"RTN","AHMLDOR1",133,0)
 . S X13=$$GET1^DIQ(75.1,RAOIEN,13,"I")
"RTN","AHMLDOR1",134,0)
 . Q:PRGFLG=X13  ;If preg flag is same as preg status quit
"RTN","AHMLDOR1",135,0)
 . Q:PRGFLG=""  ;If there is no preg status quit
"RTN","AHMLDOR1",136,0)
 . D PRGSET  ;update pregnancy status
"RTN","AHMLDOR1",137,0)
 . S SETRA=1  ;This was an update so do not error, but quit when done
"RTN","AHMLDOR1",138,0)
 I FOUND&(SETRA=0) S LROK=0,AHOUT(1)="-1^ALREADY REGISTERED" G REGQ
"RTN","AHMLDOR1",139,0)
 K RADTI,CASE,FOUND
"RTN","AHMLDOR1",140,0)
 D CHK2^AHMLDOR2 I 'LROK G REGQ ; check validity of local variables.
"RTN","AHMLDOR1",141,0)
 D SRADTI^AHMLDOR2 I 'LROK G REGQ ; get RADTE & RADTI
"RTN","AHMLDOR1",142,0)
 D SCASE^AHMLDOR2 I 'LROK G REGQ ; get case#
"RTN","AHMLDOR1",143,0)
 D VARS^AHMLDOR2 I 'LROK G REGQ ; set derived local variables.
"RTN","AHMLDOR1",144,0)
 ;
"RTN","AHMLDOR1",145,0)
 ;BL;Pass an array to JVHLRA2
"RTN","AHMLDOR1",146,0)
 S EXMST=9
"RTN","AHMLDOR1",147,0)
 D BLDA
"RTN","AHMLDOR1",148,0)
 I '$D(^RADPT(RADFN)) D PAT^AHMLDOR3(.RADARRY) ; stub record in ^RADPT
"RTN","AHMLDOR1",149,0)
 D REG^AHMLDOR3(.RADARRY)         ; register exam
"RTN","AHMLDOR1",150,0)
 ;
"RTN","AHMLDOR1",151,0)
REGQ ;Report back registration success or fail
"RTN","AHMLDOR1",152,0)
 ;
"RTN","AHMLDOR1",153,0)
 S:LROK AHOUT(1)=ORIEN_"^RS" ; success
"RTN","AHMLDOR1",154,0)
 I 'LROK,'$D(AHOUT(1)) S AHOUT(1)="-1^REG ERROR MESSAGE"
"RTN","AHMLDOR1",155,0)
 S CASE=$P(LCASE,"-",2)
"RTN","AHMLDOR1",156,0)
 K ^RADPT("AE",CASE,$J)         ;kill temp xref used by JVHLRA2   5265
"RTN","AHMLDOR1",157,0)
 Q
"RTN","AHMLDOR1",158,0)
 ;===================================================================
"RTN","AHMLDOR1",159,0)
 ;
"RTN","AHMLDOR1",160,0)
CKREG ;  check if this exam has been registered:
"RTN","AHMLDOR1",161,0)
 ; input:   ORIEN
"RTN","AHMLDOR1",162,0)
 ; returns: RADTI,DA2,CASE,FOUND
"RTN","AHMLDOR1",163,0)
 N RAOIEN,RADFN,DA2,EXMST
"RTN","AHMLDOR1",164,0)
 S FOUND=0,CASE=""
"RTN","AHMLDOR1",165,0)
 ;
"RTN","AHMLDOR1",166,0)
 ;BL;IA compliance change
"RTN","AHMLDOR1",167,0)
 S RAOIEN=$$GET1^DIQ(100,ORIEN,33,"I")
"RTN","AHMLDOR1",168,0)
 S RADFN=$$GET1^DIQ(75.1,RAOIEN,.01,"I")
"RTN","AHMLDOR1",169,0)
 I 'RAOIEN S LROK=0,AHOUT(1)="-1^ NO RAOIEN IN OR(100" Q
"RTN","AHMLDOR1",170,0)
 I 'RADFN S LROK=0,AHOUT(1)="-1^ NO DFN IN ORDER FILE" Q
"RTN","AHMLDOR1",171,0)
 I $$GET1^DIQ(2,RADFN_",",.01,"I")="" S LROK=0,AHOUT(1)="-1^"_RADFN_" NOT IN PATIENT FILE" Q 
"RTN","AHMLDOR1",172,0)
 I '$D(^RAO(75.1,RAOIEN)) S LROK=0,AHOUT(1)="-1^ COULD NOT FIND RAOIEN ENTRY IN RAO(75.1" Q
"RTN","AHMLDOR1",173,0)
 ;
"RTN","AHMLDOR1",174,0)
 S RADTI=0,DA2=""
"RTN","AHMLDOR1",175,0)
CASE ;
"RTN","AHMLDOR1",176,0)
 F  S RADTI=$O(^RADPT(RADFN,"DT",RADTI)) Q:'RADTI  D  Q:FOUND
"RTN","AHMLDOR1",177,0)
 .S DA2=0,DA2=$O(^RADPT(RADFN,"DT",RADTI,"P",DA2))
"RTN","AHMLDOR1",178,0)
 .; 5161 - ignore find of case number if it has been cancelled
"RTN","AHMLDOR1",179,0)
 .Q:'DA2
"RTN","AHMLDOR1",180,0)
 .I $P(^RADPT(RADFN,"DT",RADTI,"P",DA2,0),"^",11)=RAOIEN D
"RTN","AHMLDOR1",181,0)
 ..S EXMST=$$GET1^DIQ(70.03,DA2_","_RADTI_","_RADFN_",","EXAM STATUS")
"RTN","AHMLDOR1",182,0)
 ..Q:EXMST="CANCELLED"
"RTN","AHMLDOR1",183,0)
 ..S FOUND=1,CASE=$P(^RADPT(RADFN,"DT",RADTI,"P",DA2,0),"^")
"RTN","AHMLDOR1",184,0)
 ;
"RTN","AHMLDOR1",185,0)
 Q
"RTN","AHMLDOR1",186,0)
 ;
"RTN","AHMLDOR1",187,0)
BLDA ;Build an array to pass to AHMLDOR2
"RTN","AHMLDOR1",188,0)
 S RADARRY("DBKIND")=$G(DBKIND)
"RTN","AHMLDOR1",189,0)
 S RADARRY("DBCNT")=$G(DBCNT)
"RTN","AHMLDOR1",190,0)
 S RADARRY("ORIEN")=$G(ORIEN)
"RTN","AHMLDOR1",191,0)
 I $D(RADARRY("ORIEN"))="" S RADARRY("ORIEN")=$P($G(HLARY("OBR",1)),"^",2)
"RTN","AHMLDOR1",192,0)
 S RADARRY("IMGTYP")=$G(IMGTYP)        ;type of image=>79.2
"RTN","AHMLDOR1",193,0)
 S RADARRY("HOSDIV")=500  ;BL;TEMPORARY FIX FOR CRASHING DAILY REPORTS ;$G(HOSDIV)   ; hospital division=>79
"RTN","AHMLDOR1",194,0)
 S RADARRY("IMGLOC")=$G(IMGLOC)        ;imaging location=>79.1
"RTN","AHMLDOR1",195,0)
 S RADARRY("CASE")=$G(CASE)            ;case#
"RTN","AHMLDOR1",196,0)
 S RADARRY("PROC")=$G(PROC)            ;procedure=>71
"RTN","AHMLDOR1",197,0)
 S RADARRY("EXSTAT")=$G(EXMSTA)        ;exam status=>72
"RTN","AHMLDOR1",198,0)
 S RADARRY("EXCAT")=$G(CATEG)          ;category of exam:codes
"RTN","AHMLDOR1",199,0)
 S RADARRY("WARD")=$G(WARD)            ;ward=>42
"RTN","AHMLDOR1",200,0)
 S RADARRY("SERVC")=$G(SERVICE)          ;service=>49
"RTN","AHMLDOR1",201,0)
 S RADARRY("RAOIEN")=$G(RAOIEN)        ;imaging order=>75.1
"RTN","AHMLDOR1",202,0)
 S RADARRY("REQPRV")=$G(REQPRV)        ;requesting provider
"RTN","AHMLDOR1",203,0)
 S RADARRY("BED")=$G(BED)              ;bedsection=>42.4
"RTN","AHMLDOR1",204,0)
 S RADARRY("REQDT")=$G(REQDT)          ;request date
"RTN","AHMLDOR1",205,0)
 S RADARRY("REQLOC")=$G(REQLOC)        ;request location=>44
"RTN","AHMLDOR1",206,0)
 S RADARRY("CRDMTH")=$G(CRDMTH)        ;credit method: codes
"RTN","AHMLDOR1",207,0)
 S RADARRY("REQSTA")=$G(REQSTA)        ;request status:codes
"RTN","AHMLDOR1",208,0)
 D NOW^%DTC S NOW=% K %
"RTN","AHMLDOR1",209,0)
 S RADARRY("NOW")=NOW                  ;activity d/t
"RTN","AHMLDOR1",210,0)
 S RADARRY("RAONWSTA")=$G(RAONWSTA)    ;new status:codes
"RTN","AHMLDOR1",211,0)
 S RADARRY("DUZ")=$G(DUZ)              ;computer user
"RTN","AHMLDOR1",212,0)
 S RADARRY("RADFN")=RADFN                ;patient=>2
"RTN","AHMLDOR1",213,0)
 S RADARRY("EXMDT")=$G(EXMDT)          ;exam dt
"RTN","AHMLDOR1",214,0)
 S RADARRY("RPTSTA")=$G(RPTSTA)        ;report status:codes
"RTN","AHMLDOR1",215,0)
 S RADARRY("RPTENTDT")=$G(RPTENTDT)    ;date report entered
"RTN","AHMLDOR1",216,0)
 S RADARRY("VRFDT")=$G(VRFDT)          ;verified date
"RTN","AHMLDOR1",217,0)
 S RADARRY("RPTDT")=$G(RPTDT)          ;reported date
"RTN","AHMLDOR1",218,0)
 S RADARRY("VRFPHY")=+$G(VRFPHY)       ;verifying physician
"RTN","AHMLDOR1",219,0)
 ;4833 Esig can't be updated here must wait until RPTIEN^JVHLRA2
"RTN","AHMLDOR1",220,0)
 S RADARRY("ESCD")=$G(ESCD)            ;electronic signature code
"RTN","AHMLDOR1",221,0)
 S RADARRY("TRNSCP")=$G(TRNSCP)        ;transcriptionist
"RTN","AHMLDOR1",222,0)
 ;4833 verfied by phy
"RTN","AHMLDOR1",223,0)
 S SCVBY=$G(VRFPHY)                    ;verifying phy also used here
"RTN","AHMLDOR1",224,0)
 S RADARRY("SCVBY")=$G(SCVBY)          ;status changed to verified by
"RTN","AHMLDOR1",225,0)
 S RADARRY("ITRLOC")=$G(ITRLOC)        ;interpreting imaging loc=>79.1
"RTN","AHMLDOR1",226,0)
 S RADARRY("ACTION")=$G(ACTION)        ;type of action
"RTN","AHMLDOR1",227,0)
 S RADARRY("PRIDGC")=$G(PRIDGC)        ;primary diagnosis code=>74
"RTN","AHMLDOR1",228,0)
 S RADARRY("SECDGC")=$G(SECDGC)
"RTN","AHMLDOR1",229,0)
 S RADARRY("PRISTF")=$G(PRISTF)        ;primary interpreting staff
"RTN","AHMLDOR1",230,0)
 S RADARRY("RPTIEN")=$G(RPTIEN)        ;report text=>74
"RTN","AHMLDOR1",231,0)
 S RADARRY("PRGFLG")=$G(PRGFLG)        ; pregnancy flag  ;rhl 20100927
"RTN","AHMLDOR1",232,0)
 ;BL;Examined status fields added CQ 3229
"RTN","AHMLDOR1",233,0)
 S RADARRY("CONTMEDIA")=$G(CONTMEDIA)  ;Contrast Media Used 
"RTN","AHMLDOR1",234,0)
 S RADARRY("FILMSIZE")=$G(FILMSIZE)    ;Film Size 
"RTN","AHMLDOR1",235,0)
 S RADARRY("FILMAMT")=$G(FILMAMT)      ;Amount (# films)
"RTN","AHMLDOR1",236,0)
 S RADARRY("PRICAM")=$G(PRICAM)        ;Primary Camera/Equip/Rm ***
"RTN","AHMLDOR1",237,0)
 ;Must have a default PROCMOD & CPTMOD to prevent reversion of status
"RTN","AHMLDOR1",238,0)
 ;Using NO MODIFIER for default
"RTN","AHMLDOR1",239,0)
 I '$D(PMOD) S PMOD(1)="NO MODIFIER"
"RTN","AHMLDOR1",240,0)
 I $D(PMOD) D
"RTN","AHMLDOR1",241,0)
 . S II="" F  S II=$O(PMOD(II)) Q:II=""  D
"RTN","AHMLDOR1",242,0)
 . . Q:PMOD(II)=""
"RTN","AHMLDOR1",243,0)
 . . S XX=PMOD(II),PROCMOD="",PROCMOD=$O(^RAMIS(71.2,"B",XX,PROCMOD))
"RTN","AHMLDOR1",244,0)
 . . S PMOD(II)=$G(PROCMOD)
"RTN","AHMLDOR1",245,0)
 I PMOD(1)="" K PMOD(1)
"RTN","AHMLDOR1",246,0)
 S CPTMOD=""
"RTN","AHMLDOR1",247,0)
 S RADARRY("CPTMOD")=$G(CPTMOD)
"RTN","AHMLDOR1",248,0)
 ;Using normal healthy patient as defautl CPTMOD
"RTN","AHMLDOR1",249,0)
 ;Kill off hanging variables from other routines
"RTN","AHMLDOR1",250,0)
 K RPTIEN,PRISTF,ACTION,ITRLOC,SCVBY,TRNSCP,ESCD,VRFPHY,RPTDT,VRFDT,RPTENTDT,RPTSTA,CASE,EXMDT,ACTION,BED,CRDMTH,ESCD
"RTN","AHMLDOR1",251,0)
 K EXCAT,EXSTAT,HLARY,HOSDIV,IMGLOC,IMGTYP,NOW,ORIEN,PROC,RAONWSTA
"RTN","AHMLDOR1",252,0)
 K REQLOC,REQPRV,REQSTA,SERVC,WARD,AHOUT,PRGFLG
"RTN","AHMLDOR1",253,0)
 K DBKIND,DBCNT
"RTN","AHMLDOR1",254,0)
 Q
"RTN","AHMLDOR1",255,0)
 ;
"RTN","AHMLDOR1",256,0)
HLD ; Put Rad orders on Hold
"RTN","AHMLDOR1",257,0)
 N CSN,DTA,DA,DIE,HLDTE,RAPROV,STS,ORID,FND
"RTN","AHMLDOR1",258,0)
 S (ACKERR,FND)=0
"RTN","AHMLDOR1",259,0)
 S TYPE="RAD"
"RTN","AHMLDOR1",260,0)
 S ORID=$P(HLARY("ORC",1),"|",2)
"RTN","AHMLDOR1",261,0)
 I '$D(^OR(100,ORID)) S AHOUT(1)="-1^Error: Order number is not a valid VA order number." Q
"RTN","AHMLDOR1",262,0)
 ;BL;IA compliance change
"RTN","AHMLDOR1",263,0)
 ;check for patient match
"RTN","AHMLDOR1",264,0)
 I $D(HLARY("PID",1)) D  Q:ACKERR
"RTN","AHMLDOR1",265,0)
 .S DTA=HLARY("PID",1)
"RTN","AHMLDOR1",266,0)
 .Q:$G(DTA)=""
"RTN","AHMLDOR1",267,0)
 .S DOB=$P(DTA,"|",7),SSN=+$P(DTA,"|",3),ORVPNME=$P(DTA,"|",5)
"RTN","AHMLDOR1",268,0)
 .I ORVPNME["^" S ORVPNME=$TR(ORVPNME,"^",",")
"RTN","AHMLDOR1",269,0)
 .I $G(ORVPNME)="" S ACKERR=1 D  Q
"RTN","AHMLDOR1",270,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOR1",271,0)
 .I $G(DOB)'>0 S ACKERR=1 D  Q
"RTN","AHMLDOR1",272,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient DOB not found",TYPE)
"RTN","AHMLDOR1",273,0)
 .I $G(SSN)'>0 S ACKERR=1 D  Q
"RTN","AHMLDOR1",274,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient SSN not found",TYPE)
"RTN","AHMLDOR1",275,0)
 .I '$D(^DPT("SSN",SSN)) S ACKERR=1 D  Q
"RTN","AHMLDOR1",276,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOR1",277,0)
 .S ORVP="",ORVP=$O(^DPT("SSN",SSN,ORVP))
"RTN","AHMLDOR1",278,0)
 .I $G(ORVP)'>0 S ACKERR=1 D  Q
"RTN","AHMLDOR1",279,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOR1",280,0)
 .S ORNME=$$GET1^DIQ(2,ORVP,.01,"I"),ORNME=$TR(ORNME," ",",")
"RTN","AHMLDOR1",281,0)
 .I ORNME'=ORVPNME S ACKERR=1 D  Q
"RTN","AHMLDOR1",282,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOR1",283,0)
 .S ORDOB=$$GET1^DIQ(2,ORVP,.03,"I")
"RTN","AHMLDOR1",284,0)
 .I $G(ORDOB)'>0 S ACKERR=1 D  Q
"RTN","AHMLDOR1",285,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient DOB not found",TYPE)
"RTN","AHMLDOR1",286,0)
 .I ORDOB'=DOB S ACKERR=1 D  Q
"RTN","AHMLDOR1",287,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOR1",288,0)
 .S ORSSN=$$GET1^DIQ(2,ORVP,.09,"I")
"RTN","AHMLDOR1",289,0)
 .I ORSSN'=SSN S ACKERR=1 D  Q:$G(ACKERR)
"RTN","AHMLDOR1",290,0)
 ..D ACK^AHMLDOL(HLMA,"AE","Patient not found",TYPE)
"RTN","AHMLDOR1",291,0)
 .Q:ACKERR
"RTN","AHMLDOR1",292,0)
 Q:ACKERR
"RTN","AHMLDOR1",293,0)
 ;CHECK FOR HOLD COMMENTS
"RTN","AHMLDOR1",294,0)
 I $D(HLARY("OBX")) D
"RTN","AHMLDOR1",295,0)
 .F OBXCNT=0:0 S OBXCNT=$O(HLARY("OBX",OBXCNT)) Q:'OBXCNT  D  Q:FND
"RTN","AHMLDOR1",296,0)
 ..S XX=HLARY("OBX",OBXCNT)
"RTN","AHMLDOR1",297,0)
 ..I $P(XX,RD1,3)["TCM" S TECH=$P(XX,RD1,5)
"RTN","AHMLDOR1",298,0)
 ..I $G(TECH)'="" S FND=1 Q
"RTN","AHMLDOR1",299,0)
 S CSN=$$GET1^DIQ(100,ORID,33,"I")
"RTN","AHMLDOR1",300,0)
 S STS=3
"RTN","AHMLDOR1",301,0)
 S DIE="^OR(100,",DA=ORID,DR="5////"_STS_";" D ^DIE K DIE,DA,DR
"RTN","AHMLDOR1",302,0)
 I '$D(^RAO(75.1,CSN)) Q
"RTN","AHMLDOR1",303,0)
 ;BL;IA compliance change
"RTN","AHMLDOR1",304,0)
 S RAPROV=$$GET1^DIQ(100,ORID,1,"I")
"RTN","AHMLDOR1",305,0)
 D PROXY^AHMLDOR2(.RAPROV,.RAPRVNME)
"RTN","AHMLDOR1",306,0)
 S HLDTE=$$GET1^DIQ(100,ORID,31,"I")
"RTN","AHMLDOR1",307,0)
 I '$D(^RAO(75.1,CSN,"T")) S ^RAO(75.1,CSN,"T",0)="^75.12DA^^"
"RTN","AHMLDOR1",308,0)
 S DA=$P(^RAO(75.1,CSN,"T",0),"^",3),DA=DA+1
"RTN","AHMLDOR1",309,0)
 S $P(^RAO(75.1,CSN,"T",0),"^",3)=DA,$P(^RAO(75.1,CSN,"T",0),"^",4)=DA
"RTN","AHMLDOR1",310,0)
 S ^RAO(75.1,CSN,"T",DA,0)=HLDTE_"^"_STS_"^"_RAPROV
"RTN","AHMLDOR1",311,0)
 S DIE="^RAO(75.1,",DA=CSN,DR="5////"_STS_";" D ^DIE K DIE,STS,DR,DA
"RTN","AHMLDOR1",312,0)
 ; GET RADTI AND RACNI
"RTN","AHMLDOR1",313,0)
 S RAOIEN=CSN,RADFN=$$GET1^DIQ(75.1,RAOIEN,.01,"I")
"RTN","AHMLDOR1",314,0)
 S (FOUND,RADTI)=0,RACNI="",NOW=$$NOW^XLFDT
"RTN","AHMLDOR1",315,0)
 F  S RADTI=$O(^RADPT(RADFN,"DT",RADTI)) Q:'RADTI  D  Q:FOUND
"RTN","AHMLDOR1",316,0)
 .S RACNI=0 F  S RACNI=$O(^RADPT(RADFN,"DT",RADTI,"P",RACNI)) Q:'RACNI  D  Q:FOUND
"RTN","AHMLDOR1",317,0)
 ..I $P(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),"^",11)=RAOIEN D
"RTN","AHMLDOR1",318,0)
 ...S FOUND=1
"RTN","AHMLDOR1",319,0)
 ...S CASE=$P(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),"^")
"RTN","AHMLDOR1",320,0)
 I FOUND D
"RTN","AHMLDOR1",321,0)
 .S RAIENS=""_RACNI_","_RADTI_","_RADFN_","
"RTN","AHMLDOR1",322,0)
 .S RAFDA(70.03,RAIENS,3)="CANCELLED"
"RTN","AHMLDOR1",323,0)
 .D FILE^DIE("KSE","RAFDA","RAERR")
"RTN","AHMLDOR1",324,0)
 .K RAIENS,RAFDA
"RTN","AHMLDOR1",325,0)
 .S RAIENS="+1,"_RACNI_","_RADTI_","_RADFN_","
"RTN","AHMLDOR1",326,0)
 .S RAFDA(70.05,RAIENS,.01)=NOW
"RTN","AHMLDOR1",327,0)
 .D UPDATE^DIE(,"RAFDA","RAIEN","RAERR")
"RTN","AHMLDOR1",328,0)
 .K RAIENS,RAFDA
"RTN","AHMLDOR1",329,0)
 .S RAIENS=RAIEN(1)_","_RACNI_","_RADTI_","_RADFN_","
"RTN","AHMLDOR1",330,0)
 .S RAFDA(70.05,RAIENS,2)=3
"RTN","AHMLDOR1",331,0)
 .S RAFDA(70.05,RAIENS,3)=RAPROV
"RTN","AHMLDOR1",332,0)
 .D FILE^DIE(,"RAFDA","RAERR")
"RTN","AHMLDOR1",333,0)
 .K RAFDA,RAIENS,RAIEN
"RTN","AHMLDOR1",334,0)
 .S RAIENS="+1,"_RACNI_","_RADTI_","_RADFN_","
"RTN","AHMLDOR1",335,0)
 .S RAFDA(70.07,RAIENS,.01)=NOW
"RTN","AHMLDOR1",336,0)
 .D UPDATE^DIE("E","RAFDA","RAIEN","RAMSG")
"RTN","AHMLDOR1",337,0)
 .K RAIENS,RAFDA
"RTN","AHMLDOR1",338,0)
 .S RAIENS=RAIEN(1)_","_RACNI_","_RADTI_","_RADFN_","
"RTN","AHMLDOR1",339,0)
 .S RAFDA(70.07,RAIENS,2)="X"
"RTN","AHMLDOR1",340,0)
 .S RAFDA(70.07,RAIENS,3)=RAPROV
"RTN","AHMLDOR1",341,0)
 .S RAFDA(70.07,RAIENS,4)=$G(TECH)
"RTN","AHMLDOR1",342,0)
 .D FILE^DIE(,"RAFDA","RAERR")
"RTN","AHMLDOR1",343,0)
 S AHOUT(1)=ORID_"^RS"
"RTN","AHMLDOR1",344,0)
 Q
"RTN","AHMLDOR1",345,0)
 ;
"RTN","AHMLDOR1",346,0)
PRGSET ;Set pregnancy flag in RAO(75.1 and OR(100
"RTN","AHMLDOR1",347,0)
 ;This is only done on an update, changing an existing pregnancy status
"RTN","AHMLDOR1",348,0)
 K PRGDONE,PRGSEQ,LSTSEQ,PRGTEXT,PRGTEXT1,PRGTEXT2,RADFDA
"RTN","AHMLDOR1",349,0)
 S PRGSEQ=0,PRGDONE=0  ;pregnancy sequence
"RTN","AHMLDOR1",350,0)
 F  S PRGSEQ=$O(^OR(100,ORIEN,4.5,PRGSEQ)) Q:PRGSEQ'=+PRGSEQ  D  Q:PRGDONE
"RTN","AHMLDOR1",351,0)
 . I ^OR(100,ORIEN,4.5,PRGSEQ,0)["PREGNANT" S PRGDONE=1
"RTN","AHMLDOR1",352,0)
 . S LSTSEQ=PRGSEQ
"RTN","AHMLDOR1",353,0)
 N ORDIALOG
"RTN","AHMLDOR1",354,0)
 S PRGFLG=$TR(PRGFLG,"nyu","NYU")
"RTN","AHMLDOR1",355,0)
 D GETDLG^ORCD(1)
"RTN","AHMLDOR1",356,0)
 S PRGTEXT1=$P(ORDIALOG("B","PREGNANT"),"^",2)
"RTN","AHMLDOR1",357,0)
 S PRGTEXT2=$P(ORDIALOG(PRGTEXT1),"^")
"RTN","AHMLDOR1",358,0)
 S PRGTEXT=PRGTEXT2_"^"_PRGTEXT1_"^1^PREGNANT"
"RTN","AHMLDOR1",359,0)
 K ORDIALOG
"RTN","AHMLDOR1",360,0)
 I PRGDONE=0 D  ;IF NO PREGNANCY STATUS HAS BEEN STORED
"RTN","AHMLDOR1",361,0)
 . N RAIEN,RADFDA,RADFILE
"RTN","AHMLDOR1",362,0)
 . S RADFILE=100.045,RAIEN=ORIEN_","
"RTN","AHMLDOR1",363,0)
 . S RADFDA(1,RADFILE,"+1,"_RAIEN,.01)=PRGTEXT2
"RTN","AHMLDOR1",364,0)
 . S RADFDA(1,RADFILE,"+1,"_RAIEN,.02)=PRGTEXT1
"RTN","AHMLDOR1",365,0)
 . S RADFDA(1,RADFILE,"+1,"_RAIEN,.03)="1"
"RTN","AHMLDOR1",366,0)
 . S RADFDA(1,RADFILE,"+1,"_RAIEN,.04)="PREGNANT"
"RTN","AHMLDOR1",367,0)
 . S RADFDA(1,RADFILE,"+1,"_RAIEN,1)=PRGFLG
"RTN","AHMLDOR1",368,0)
 . D UPDATE^DIE("","RADFDA(1)","","ERRMSG") K RADFDA,RADFILE,RAIEN
"RTN","AHMLDOR1",369,0)
 I PRGDONE=1 D  ;IF MODIFYING A PREGNANCY STATUS
"RTN","AHMLDOR1",370,0)
 . N RAIEN,RADFDA,RADFILE
"RTN","AHMLDOR1",371,0)
 . S RADFILE=100.045,RAIEN=LSTSEQ_","_ORIEN_","
"RTN","AHMLDOR1",372,0)
 . S RADFDA(RADFILE,RAIEN,1)=PRGFLG
"RTN","AHMLDOR1",373,0)
 . D FILE^DIE("","RADFDA","ERRMSG") K RADFDA,RADFILE,RAIEN
"RTN","AHMLDOR1",374,0)
 S RAOIEN=+$G(^OR(100,ORIEN,4)) ; pointer to RAO(75.1
"RTN","AHMLDOR1",375,0)
 S RADFDA(75.1,RAOIEN_",",13)=RADARRY("PRGFLG")     ; preg flag ; rhl 20100927
"RTN","AHMLDOR1",376,0)
 D UPDATE^DIE("S","RADFDA","","ERRMSG")
"RTN","AHMLDOR1",377,0)
 Q
"RTN","AHMLDOR1",378,0)
 ;
"RTN","AHMLDOR1",379,0)
END ;
"RTN","AHMLDOR1",380,0)
 K CATEG,DUZNME,EXMSTA,II,LCASE,NWSTATUS,PMOD,PRIDGC,RACNI,RADARRY
"RTN","AHMLDOR1",381,0)
 K RAPRVNME,RD1,REQDT,SECDGC,SERVICE,SEX,STOP,TCM,FILMAMT
"RTN","AHMLDOR1",382,0)
 K FILMSIZE,HLMA,HLMTIEN,OBXCNT,ORDOB,ORNME,ORSSN,ORVP,ORVPNME
"RTN","AHMLDOR1",383,0)
 K PRICAM,PROCMOD,RAMSG,SSN,TECH,TYPE,XX
"RTN","AHMLDOR1",384,0)
 Q
"RTN","AHMLDOR1",385,0)
 ;
"RTN","AHMLDOR2")
0^11^B103855454
"RTN","AHMLDOR2",1,0)
AHMLDOR2 ;LEIDOS/TCK- REMOTE ORDERING - Radiology - PARSER ; 2/9/17 1:57pm
"RTN","AHMLDOR2",2,0)
 ;;1.0;Radiology Orders Portability;**1**;April 1, 2016;Build 53
"RTN","AHMLDOR2",3,0)
 ; Reference to NOW^%DTC supported by IA #10000
"RTN","AHMLDOR2",4,0)
 ; Reference to ^OR(100 supported by IA #5196
"RTN","AHMLDOR2",5,0)
 ; Reference to ^RAMIS(71 supported by IA #5607
"RTN","AHMLDOR2",6,0)
 ; Reference to ^RADPT( supported by IA #5602
"RTN","AHMLDOR2",7,0)
 ; Reference to ^RAO(75.1 supported by IA #5604
"RTN","AHMLDOR2",8,0)
 ; Reference to ^DPT( supported by IA #10035
"RTN","AHMLDOR2",9,0)
 ; Reference to ^VA(200 supported by IA #10060
"RTN","AHMLDOR2",10,0)
 ; Reference to ^RA(79.1 supported by IA #5610
"RTN","AHMLDOR2",11,0)
 ; Reference to CN^RAREG1 supported by IA #5479
"RTN","AHMLDOR2",12,0)
 ; Reference to HL7TFM^XLFDT supported by IA #10103
"RTN","AHMLDOR2",13,0)
 ; Reference to ^RA(72 supported by IA #5606
"RTN","AHMLDOR2",14,0)
 ;
"RTN","AHMLDOR2",15,0)
 ; updated 20100908
"RTN","AHMLDOR2",16,0)
 ; updated 20110509 dje: document IAs, code cleanup
"RTN","AHMLDOR2",17,0)
 ;
"RTN","AHMLDOR2",18,0)
 ; gsn  - convert to RD1 type delimiters.
"RTN","AHMLDOR2",19,0)
 ; 4839 - add Impression txt for filing seperately from report txt
"RTN","AHMLDOR2",20,0)
 ;        also had to rework amendment text logic here and in rtn
"RTN","AHMLDOR2",21,0)
 ;        MLDOR2.
"RTN","AHMLDOR2",22,0)
 ; 5265 - Add the "AE xref after we get case number so other processes
"RTN","AHMLDOR2",23,0)
 ;        also calling CN^RARE1, will see the case number is in use.
"RTN","AHMLDOR2",24,0)
 ;
"RTN","AHMLDOR2",25,0)
 Q
"RTN","AHMLDOR2",26,0)
 ;
"RTN","AHMLDOR2",27,0)
EN(RAMSG) ;
"RTN","AHMLDOR2",28,0)
 N XX,OBXCNT,RCNT,STOP
"RTN","AHMLDOR2",29,0)
 K PRGFLG S PRGFLG=""
"RTN","AHMLDOR2",30,0)
 ;
"RTN","AHMLDOR2",31,0)
 ;   process HL7 segments:
"RTN","AHMLDOR2",32,0)
PID ;
"RTN","AHMLDOR2",33,0)
 Q:'$D(RAMSG)
"RTN","AHMLDOR2",34,0)
 N IDX,DOB,SEG
"RTN","AHMLDOR2",35,0)
 S (IDX,DFN)=""
"RTN","AHMLDOR2",36,0)
 F  S IDX=$O(RAMSG(IDX)) Q:IDX=""  D
"RTN","AHMLDOR2",37,0)
 .S SEG=$P(RAMSG(IDX),"|")
"RTN","AHMLDOR2",38,0)
 .Q:SEG'="PID"
"RTN","AHMLDOR2",39,0)
 .S XX=HLARY("PID",1),DFN=$P(XX,RD1,2)
"RTN","AHMLDOR2",40,0)
 .I DFN["-" S DFN=+$P(DFN,"-",2),DFN=+DFN
"RTN","AHMLDOR2",41,0)
 .I $G(DFN)>0 S DOB=$$GET1^DIQ(2,DFN,.03,"I")
"RTN","AHMLDOR2",42,0)
 .S $P(RAMSG(IDX),"|",8)=DOB
"RTN","AHMLDOR2",43,0)
 .S SEX=$$GET1^DIQ(2,DFN,.02,"I")
"RTN","AHMLDOR2",44,0)
 S RADFN=DFN
"RTN","AHMLDOR2",45,0)
 ;
"RTN","AHMLDOR2",46,0)
PV1 ;
"RTN","AHMLDOR2",47,0)
 S XX=$G(HLARY("PV1",1)) D  ; rhl 20100927
"RTN","AHMLDOR2",48,0)
 . S XX="NO"
"RTN","AHMLDOR2",49,0)
 . S PRGFLG=$P(XX,RD1,15),PRGFLG=$E(PRGFLG,1),PRGFLG=$TR(PRGFLG,"YNU","ynu")
"RTN","AHMLDOR2",50,0)
 . I PRGFLG'="y",PRGFLG'="n",PRGFLG'="u" S PRGFLG=""
"RTN","AHMLDOR2",51,0)
 ;
"RTN","AHMLDOR2",52,0)
ORC ;
"RTN","AHMLDOR2",53,0)
 I $D(HLARY("ORC")) D
"RTN","AHMLDOR2",54,0)
 .S XX=HLARY("ORC",1),EXMDT=$P(XX,RD1,9)
"RTN","AHMLDOR2",55,0)
 .S:'EXMDT EXMDT=$P(XX,"^",14) I 'EXMDT D NOW^%DTC S EXMDT=%
"RTN","AHMLDOR2",56,0)
 .S EXMDT=$$HLD(EXMDT),REQDT=EXMDT
"RTN","AHMLDOR2",57,0)
 .S EXMSTA=$P($P(XX,"|",17),"^")
"RTN","AHMLDOR2",58,0)
 .S CATEG=$P($P(XX,"|",17),"^",2)
"RTN","AHMLDOR2",59,0)
 .S WARD=$P($P(XX,"|",17),"^",3)
"RTN","AHMLDOR2",60,0)
 .S SERVICE=$P($P(XX,"|",17),"^",4)
"RTN","AHMLDOR2",61,0)
 .S OR=$P(XX,2),ST=$$GET1^DIQ(100,OR,5,"I")
"RTN","AHMLDOR2",62,0)
 .I ST=5 S RAONWSTA=6
"RTN","AHMLDOR2",63,0)
 .I ST=6 S RAONWSTA=2
"RTN","AHMLDOR2",64,0)
 .S USER=$P(XX,"|",10),USER=$P(USER,"^",2,3),USER=$TR(USER,"^",",")
"RTN","AHMLDOR2",65,0)
 .S RADARRY("USER")=$G(USER)
"RTN","AHMLDOR2",66,0)
OBR ;
"RTN","AHMLDOR2",67,0)
 K ORIEN,IMGLOC,PRISTF,PROC,REQPRV,RPTSTA,RPTDT,TRNSCP,VRFDT,ITRLOC,VRFPHY
"RTN","AHMLDOR2",68,0)
 S ORIEN="",IMGLOC="",ITRLOC="",VRFPHYN=""
"RTN","AHMLDOR2",69,0)
 N %
"RTN","AHMLDOR2",70,0)
 S XX=HLARY("OBR",1),IMGLOC=+$P($P(XX,RD1,21),"`",2),PROC=+$P($P(XX,RD1,4),"^",4),REQPRV=$P(XX,RD1,16),PRISTF=0,VRFPHY=$P(XX,RD1,32)
"RTN","AHMLDOR2",71,0)
 S PRVNM=$P(REQPRV,"^",2,3) I PRVNM["^" S PRVNM=$TR(PRVNM,"^",",")
"RTN","AHMLDOR2",72,0)
 I PRVNM'="",$D(^VA(200,"B",PRVNM)) D
"RTN","AHMLDOR2",73,0)
 .S REQPRV="",REQPRV=$O(^VA(200,"B",PRVNM,REQPRV))
"RTN","AHMLDOR2",74,0)
 I PRVNM=""!('$D(^VA(200,"B",PRVNM))) D PROXY(.REQPRV,.PRVNM)
"RTN","AHMLDOR2",75,0)
 I VRFPHY="" S VRFPHY=0
"RTN","AHMLDOR2",76,0)
 D PROXY(.VRFPHY,.VRFPHYN)
"RTN","AHMLDOR2",77,0)
 S USER=$P(XX,"|",35),USER=$P(USER,"^",2,3),USER=$TR(USER,"^",",")
"RTN","AHMLDOR2",78,0)
 S ITRLOC=+$P($P(XX,RD1,21),"`",2)
"RTN","AHMLDOR2",79,0)
 I $G(EXMDT)'>0 D
"RTN","AHMLDOR2",80,0)
 .S EXMDT=$P(XX,RD1,7)
"RTN","AHMLDOR2",81,0)
 .S:'EXMDT EXMDT=$P(XX,"^",14)
"RTN","AHMLDOR2",82,0)
 .I 'EXMDT D NOW^%DTC S EXMDT=%
"RTN","AHMLDOR2",83,0)
 .S EXMDT=$$HLD(EXMDT),REQDT=EXMDT
"RTN","AHMLDOR2",84,0)
 S RPTSTA=$P(XX,RD1,25),RPTDT=$$HLD($P(XX,RD1,22)),TRNSCP=+$P(XX,RD1,35)
"RTN","AHMLDOR2",85,0)
 S VRFDT=$P(XX,RD1,22),VRFDT=$$HLD($P(XX,RD1,22)),ORIEN=+$P(XX,RD1,2)
"RTN","AHMLDOR2",86,0)
 I RPTSTA="F" S RPTSTA="V"  ;BSL;Fix to allow results viewing
"RTN","AHMLDOR2",87,0)
 S RADARRY("RPTSTA")=RPTSTA
"RTN","AHMLDOR2",88,0)
 S RADARRY("USER")=$G(USER)
"RTN","AHMLDOR2",89,0)
 ;
"RTN","AHMLDOR2",90,0)
 I $G(NWSTATUS)'="",$G(PROC) S EXSTAT=$$GETSTA(PROC,NWSTATUS) ; rhl 20100929
"RTN","AHMLDOR2",91,0)
 S RADARRY("EXSTAT")=$G(EXSTAT)
"RTN","AHMLDOR2",92,0)
 ;
"RTN","AHMLDOR2",93,0)
OBX ; 
"RTN","AHMLDOR2",94,0)
 N HCNT,ICNT,RCNT,IMPBEG,RAAM,AMENDED,DELIM,RATMP,SKIP,TXT
"RTN","AHMLDOR2",95,0)
 S (IMPBEG,RAAM)=0
"RTN","AHMLDOR2",96,0)
 ;
"RTN","AHMLDOR2",97,0)
 ;4839:
"RTN","AHMLDOR2",98,0)
 S (RCNT,HCNT,ICNT)=1 ;init these counters when first OBX happens
"RTN","AHMLDOR2",99,0)
 ;
"RTN","AHMLDOR2",100,0)
 ;Loop thru HLARY and convert Report nodes, which qaulify, to
"RTN","AHMLDOR2",101,0)
 ;Impression nodes.
"RTN","AHMLDOR2",102,0)
 ;
"RTN","AHMLDOR2",103,0)
 F OBXCNT=0:0 S OBXCNT=$O(HLARY("OBX",OBXCNT)) Q:'OBXCNT  D
"RTN","AHMLDOR2",104,0)
 . S XX=HLARY("OBX",OBXCNT)
"RTN","AHMLDOR2",105,0)
 . Q:($P(XX,RD1,3)'["REPORT")&($P(XX,RD1,3)'["RESCODE")
"RTN","AHMLDOR2",106,0)
 . ;check for beginning of IMP txt
"RTN","AHMLDOR2",107,0)
 . S:$$UP^XLFSTR($P(XX,RD1,5))["IMPRESSION:" IMPBEG=1
"RTN","AHMLDOR2",108,0)
 . I $P(XX,RD1,3)["RESCODE" S IMPBEG=0   ;reset impbeg at Rescode line
"RTN","AHMLDOR2",109,0)
 . I IMPBEG D
"RTN","AHMLDOR2",110,0)
 .. S $P(XX,RD1,3)="I\IMPRESSION\L",HLARY("OBX",OBXCNT)=XX
"RTN","AHMLDOR2",111,0)
 ;
"RTN","AHMLDOR2",112,0)
 ;Now loop thru HLARY & determine type of text and call correct tag
"RTN","AHMLDOR2",113,0)
 ;
"RTN","AHMLDOR2",114,0)
 K OCXCNT,PRIDGC
"RTN","AHMLDOR2",115,0)
 S (PRIDGC,PRIFLG)=0
"RTN","AHMLDOR2",116,0)
 F OBXCNT=0:0 S OBXCNT=$O(HLARY("OBX",OBXCNT)) Q:'OBXCNT  D
"RTN","AHMLDOR2",117,0)
 . S XX=HLARY("OBX",OBXCNT)
"RTN","AHMLDOR2",118,0)
 . I $P(XX,RD1,3)["TECH" S RADARRY("TECH")=$P(XX,RD1,5) Q
"RTN","AHMLDOR2",119,0)
 . I $P(XX,RD1,3)["MODIFIERS" D OBXMOD Q
"RTN","AHMLDOR2",120,0)
 . I $P(XX,RD1,3)["DIAGNOSTIC" D OBXDGN Q
"RTN","AHMLDOR2",121,0)
 . I $P(XX,RD1,3)["REPORT" D OBXRPT Q
"RTN","AHMLDOR2",122,0)
 . I $P(XX,RD1,3)["HISTORY" D OBXHST Q
"RTN","AHMLDOR2",123,0)
 . I $P(XX,RD1,3)["IMPRESSION" D OBXIMP Q
"RTN","AHMLDOR2",124,0)
 ;
"RTN","AHMLDOR2",125,0)
 ;4839:
"RTN","AHMLDOR2",126,0)
 ;determine the last update sent (RAAM) just sent via DOD HL7 msg
"RTN","AHMLDOR2",127,0)
 ;as DOD sends ALL text, the orig text + all amendments to date.
"RTN","AHMLDOR2",128,0)
 ;  RAAM=1 is an orig final report, 2 or more are amendments
"RTN","AHMLDOR2",129,0)
 ;
"RTN","AHMLDOR2",130,0)
 I $D(WPRT) S RATMP=$O(WPRT(999),-1) S:RATMP>RAAM RAAM=RATMP
"RTN","AHMLDOR2",131,0)
 I $D(WPIT) S RATMP=$O(WPIT(999),-1) S:RATMP>RAAM RAAM=RATMP
"RTN","AHMLDOR2",132,0)
 I $D(WPACH) S RATMP=$O(WPACH(999),-1) S:RATMP>RAAM RAAM=RATMP
"RTN","AHMLDOR2",133,0)
 ;
"RTN","AHMLDOR2",134,0)
 ;now init report & imp text arrays only if they had amended text
"RTN","AHMLDOR2",135,0)
 ;that was just sent, else kill that specific array to stop its update
"RTN","AHMLDOR2",136,0)
 I $D(WPRT(RAAM)) M TMP=WPRT(RAAM) K WPRT M WPRT=TMP K TMP
"RTN","AHMLDOR2",137,0)
 E  K WPRT
"RTN","AHMLDOR2",138,0)
 I $D(WPIT(RAAM)) M TMP=WPIT(RAAM) K WPIT M WPIT=TMP K TMP
"RTN","AHMLDOR2",139,0)
 E  K WPIT
"RTN","AHMLDOR2",140,0)
 I $D(WPACH(RAAM)) M TMP=WPACH(RAAM) K WPACH M WPACH=TMP K TMP
"RTN","AHMLDOR2",141,0)
 E  K WPACH
"RTN","AHMLDOR2",142,0)
 Q
"RTN","AHMLDOR2",143,0)
 ;====================================================================
"RTN","AHMLDOR2",144,0)
 ;
"RTN","AHMLDOR2",145,0)
PROXY(VAL,VAL1) ;
"RTN","AHMLDOR2",146,0)
 S VAL1="PROXY,PROVIDER"
"RTN","AHMLDOR2",147,0)
 I $D(^VA(200,"B",VAL1)) S VAL="",VAL=$O(^VA(200,"B",VAL1,VAL))
"RTN","AHMLDOR2",148,0)
 I '$D(^VA(200,"B",VAL1)) S VAL=0
"RTN","AHMLDOR2",149,0)
 Q
"RTN","AHMLDOR2",150,0)
 ;
"RTN","AHMLDOR2",151,0)
OBXMOD ; PROCEDURE MODIFIERS
"RTN","AHMLDOR2",152,0)
 S CNT=1
"RTN","AHMLDOR2",153,0)
 I $D(PMOD) S CNT=999,CNT=$O(PMOD(CNT),-1),CNT=CNT+1
"RTN","AHMLDOR2",154,0)
 S PMOD(CNT)=$P(XX,RD1,5)
"RTN","AHMLDOR2",155,0)
 S RAAM=$G(RAAM)+1
"RTN","AHMLDOR2",156,0)
 S (RCNT,HCNT,ICNT)=1
"RTN","AHMLDOR2",157,0)
 Q
"RTN","AHMLDOR2",158,0)
 ;
"RTN","AHMLDOR2",159,0)
OBXDGN ; DIAGNOSIC CODE always Precedes the Report text. also contains diagnosis
"RTN","AHMLDOR2",160,0)
 ;
"RTN","AHMLDOR2",161,0)
 S AMENDED=$S($P(XX,RD1,11)="C":1,1:0)
"RTN","AHMLDOR2",162,0)
 I PRIFLG D
"RTN","AHMLDOR2",163,0)
 .I $D(SECDGC) S CNT=99,CNT=$O(SECDGC(CNT),-1),CNT=CNT+1,SECDGC(CNT)=+$P(XX,RD1,5)
"RTN","AHMLDOR2",164,0)
 .I '$D(SECDGC) S CNT=1,SECDGC(CNT)=+$P(XX,RD1,5)
"RTN","AHMLDOR2",165,0)
 I 'PRIFLG S PRIDGC=+$P(XX,RD1,5),PRIFLG=1
"RTN","AHMLDOR2",166,0)
 ;increment Amendments,1 = ORIG, 2 - n = Amendments
"RTN","AHMLDOR2",167,0)
 S RAAM=RAAM+1
"RTN","AHMLDOR2",168,0)
 ;re-init when RESCODE happens, covers each OBX result so orig result
"RTN","AHMLDOR2",169,0)
 ;and multiple amendment results kept separate.
"RTN","AHMLDOR2",170,0)
 S (RCNT,HCNT,ICNT)=1
"RTN","AHMLDOR2",171,0)
 Q
"RTN","AHMLDOR2",172,0)
 ;
"RTN","AHMLDOR2",173,0)
OBXRPT ; report text
"RTN","AHMLDOR2",174,0)
 I $P(XX,RD1,3)'["REPORT" Q
"RTN","AHMLDOR2",175,0)
 I '$D(WPRT) S RAAM=1
"RTN","AHMLDOR2",176,0)
 I $D(WPRT) S RAAM=99999,RAAM=$O(WPRT(RAAM),-1)
"RTN","AHMLDOR2",177,0)
 S WPRT(RAAM,"WP",RCNT)=$P(XX,RD1,5)
"RTN","AHMLDOR2",178,0)
 S RCNT=RCNT+1
"RTN","AHMLDOR2",179,0)
 Q
"RTN","AHMLDOR2",180,0)
 ;
"RTN","AHMLDOR2",181,0)
OBXIMP ; impression text
"RTN","AHMLDOR2",182,0)
 I $P(XX,RD1,3)'["IMPRESSION" Q
"RTN","AHMLDOR2",183,0)
 S TXT=$P(XX,RD1,5)
"RTN","AHMLDOR2",184,0)
 S SKIP=0
"RTN","AHMLDOR2",185,0)
 I ICNT=1 D
"RTN","AHMLDOR2",186,0)
 . S DELIM=$S(TXT["IMPRESSION:":"IMPRESSION:",TXT["Impression:":"Impression:",1:"")
"RTN","AHMLDOR2",187,0)
 . I DELIM]"" S TXT=$P(TXT,DELIM,2) I $E(TXT,1)=" " S TXT=$E(TXT,2,999)
"RTN","AHMLDOR2",188,0)
 . S:TXT="" SKIP=1    ;skip hdr only line
"RTN","AHMLDOR2",189,0)
 Q:SKIP
"RTN","AHMLDOR2",190,0)
 I '$D(WPIT) S RAAM=1
"RTN","AHMLDOR2",191,0)
 I $D(WPIT) S RAAM=99999,RAAM=$O(WPIT(RAAM),-1)
"RTN","AHMLDOR2",192,0)
 S WPIT(RAAM,"WP",ICNT)=TXT
"RTN","AHMLDOR2",193,0)
 S ICNT=ICNT+1
"RTN","AHMLDOR2",194,0)
 Q 
"RTN","AHMLDOR2",195,0)
 ;
"RTN","AHMLDOR2",196,0)
OBXHST ; additional clinical history text
"RTN","AHMLDOR2",197,0)
 I $P(XX,RD1,3)'["HISTORY" Q
"RTN","AHMLDOR2",198,0)
 I '$D(WPACH) S RAAM=1
"RTN","AHMLDOR2",199,0)
 I $D(WPACH) S RAAM=99999,RAAM=$O(WPACH(RAAM),-1)
"RTN","AHMLDOR2",200,0)
 S WPACH(RAAM,"WP",HCNT)=$P(XX,RD1,5)
"RTN","AHMLDOR2",201,0)
 S HCNT=HCNT+1
"RTN","AHMLDOR2",202,0)
 Q
"RTN","AHMLDOR2",203,0)
 ;
"RTN","AHMLDOR2",204,0)
 ;=======================================================
"RTN","AHMLDOR2",205,0)
VARS ; check variables for HL7 -- generate varibles
"RTN","AHMLDOR2",206,0)
 N X13
"RTN","AHMLDOR2",207,0)
 K IMGTYP,RADFN,RAOIEN
"RTN","AHMLDOR2",208,0)
 S IMGTYP=""
"RTN","AHMLDOR2",209,0)
 ;BL;IA compliance change
"RTN","AHMLDOR2",210,0)
 S RAOIEN=$$GET1^DIQ(100,ORIEN,33,"I")
"RTN","AHMLDOR2",211,0)
 I $G(RAOIEN)'>0 S LROK=0,AHOUT(1)="-1^NO RADIOLOGY ORDER NUMBER FOUND",MSG="ERR^NO RADIOLOGY ORDER NUMBER FOUND" D ERR Q
"RTN","AHMLDOR2",212,0)
 S IMGTYP=$P($G(^RAMIS(71,PROC,0)),"^",12)
"RTN","AHMLDOR2",213,0)
 ;BL;IA compliance change
"RTN","AHMLDOR2",214,0)
 S RADFN=DFN
"RTN","AHMLDOR2",215,0)
 I '$G(RADTE) S RADTE=$P(^RADPT(DFN,"DT",RADTI,0),"^")
"RTN","AHMLDOR2",216,0)
 I '$G(CASE) D SCASE
"RTN","AHMLDOR2",217,0)
 I '$G(LCASE) S LCASE=$E(RADTE,4,5)_$E(RADTE,6,7)_$E(RADTE,2,3)_"-"_CASE
"RTN","AHMLDOR2",218,0)
 ;  check pregnancy flag precedence: Y>U>N>"" ; rhl 20100927
"RTN","AHMLDOR2",219,0)
 ;BL;IA compliance change
"RTN","AHMLDOR2",220,0)
 I SEX="F" D
"RTN","AHMLDOR2",221,0)
 .S X13=$$GET1^DIQ(75.1,RAOIEN,13,"I")
"RTN","AHMLDOR2",222,0)
 .I PRGFLG="",X13="" S PRGFLG="u"
"RTN","AHMLDOR2",223,0)
 .I PRGFLG="",X13'="" S PRGFLG=X13
"RTN","AHMLDOR2",224,0)
 ;
"RTN","AHMLDOR2",225,0)
 Q
"RTN","AHMLDOR2",226,0)
 ;=========================================================
"RTN","AHMLDOR2",227,0)
CHK1 ; check for result variables
"RTN","AHMLDOR2",228,0)
 ; check patient DFN & SSN
"RTN","AHMLDOR2",229,0)
 ; verify providers
"RTN","AHMLDOR2",230,0)
 ; check providers: REQPRV, PRISTF, TRNSCP
"RTN","AHMLDOR2",231,0)
 K II,LROK,MSG,TCNT,CHKLOC,CHKPROC,CHKPRIDGC
"RTN","AHMLDOR2",232,0)
 S CHKLOC="",CHKPROC="",CHKPRIDGC=""
"RTN","AHMLDOR2",233,0)
 S TCNT=RACNT
"RTN","AHMLDOR2",234,0)
 S II="",LROK=1,MSG=""
"RTN","AHMLDOR2",235,0)
 I $G(PRISTF)="" S PRISTF=0
"RTN","AHMLDOR2",236,0)
 F II="REQPRV","TRNSCP","IMGLOC" S:@II=0 @II=""
"RTN","AHMLDOR2",237,0)
 F II="DFN","PROC","REQPRV","REQDT","PRISTF","EXMDT","RPTSTA","RPTDT","VRFDT","PRIDGC" D  ;
"RTN","AHMLDOR2",238,0)
 . Q:@II'=""
"RTN","AHMLDOR2",239,0)
 . S RACNT=RACNT+1
"RTN","AHMLDOR2",240,0)
 . S AHOUT(RACNT)="ERR^REQUIRED FIELD NOT DEFINED "_II
"RTN","AHMLDOR2",241,0)
 . S LROK=0
"RTN","AHMLDOR2",242,0)
 Q:'LROK
"RTN","AHMLDOR2",243,0)
 S RACNT=1
"RTN","AHMLDOR2",244,0)
 ;
"RTN","AHMLDOR2",245,0)
 I $G(IMGLOC)="" S MSG="ERR^NO IMAGE LOCATION SPECIFIED " D ERR Q
"RTN","AHMLDOR2",246,0)
 I $$GET1^DIQ(2,DFN_",",.01,"I")="" S MSG="ERR^DFN "_DFN_" NOT IN PATIENT FILE " D ERR Q
"RTN","AHMLDOR2",247,0)
 ;Use fileman calls to check for global references (removing $D)
"RTN","AHMLDOR2",248,0)
 S CHKLOC=$$GET1^DIQ(79.1,IMGLOC,.01,"I")
"RTN","AHMLDOR2",249,0)
 S CHKPROC=$$GET1^DIQ(71,PROC,.01,"I")
"RTN","AHMLDOR2",250,0)
 S CHKPRIDGC=$$GET1^DIQ(78.3,PRIDGC,.01,"I")
"RTN","AHMLDOR2",251,0)
 I '$D(CHKLOC) S MSG="ERR^IMAGE LOCATION "_IMGLOC_" NOT IN IMG LOCATION FILE " D ERR Q
"RTN","AHMLDOR2",252,0)
 I '$D(CHKPROC) S MSG="ERR^PROCEDURE "_PROC_" NOT IN RAD PROC FILE " D ERR Q
"RTN","AHMLDOR2",253,0)
 S RACNT=TCNT
"RTN","AHMLDOR2",254,0)
 ;
"RTN","AHMLDOR2",255,0)
 Q
"RTN","AHMLDOR2",256,0)
 ;
"RTN","AHMLDOR2",257,0)
CHK2 ; check for registration variables
"RTN","AHMLDOR2",258,0)
 ; check patient DFN & SSN
"RTN","AHMLDOR2",259,0)
 ; verify providers
"RTN","AHMLDOR2",260,0)
 ; check providers: REQPRV
"RTN","AHMLDOR2",261,0)
 K CHKLOC,CHKPROC
"RTN","AHMLDOR2",262,0)
 S CHKLOC="",CHKPROC=""
"RTN","AHMLDOR2",263,0)
 S II="",LROK=1
"RTN","AHMLDOR2",264,0)
 I $G(REQDT)>0 S EXMDT=REQDT
"RTN","AHMLDOR2",265,0)
 I $G(PRISTF)="" S PRISTF=0
"RTN","AHMLDOR2",266,0)
 F II="REQPRV","TRNSCP","IMGLOC" S:@II=0 @II=""
"RTN","AHMLDOR2",267,0)
 F II="DFN","PROC","REQPRV","REQDT","EXMDT" D  ;
"RTN","AHMLDOR2",268,0)
 . Q:@II'=""
"RTN","AHMLDOR2",269,0)
 . S RACNT=RACNT+1,AHOUT(RACNT)="ERR^REQUIRED FIELD NOT DEFINED "_II,LROK=0
"RTN","AHMLDOR2",270,0)
 Q:'LROK
"RTN","AHMLDOR2",271,0)
 ;
"RTN","AHMLDOR2",272,0)
 I $$GET1^DIQ(2,DFN_",",.01,"I")="" S MSG="ERR^DFN "_DFN_" NOT IN PATIENT FILE " D ERR Q
"RTN","AHMLDOR2",273,0)
 S CHKLOC=$$GET1^DIQ(79.1,IMGLOC,.01,"I")
"RTN","AHMLDOR2",274,0)
 S CHKPROC=$$GET1^DIQ(71,PROC,.01,"I")
"RTN","AHMLDOR2",275,0)
 I $G(IMGLOC),'$D(CHKLOC) S MSG="ERR^IMAGE LOCATION "_IMGLOC_" NOT IN IMG LOCATION FILE " D ERR Q
"RTN","AHMLDOR2",276,0)
 I '$D(CHKPROC) S MSG="ERR^PROCEDURE "_PROC_" NOT IN RAD PROC FILE " D ERR Q
"RTN","AHMLDOR2",277,0)
 I $$GET1^DIQ(200,REQPRV_",",.01,"I")="" S MSG="ERR^REQUESTING PROVIDER "_REQPRV_" NOT IN NEW PERSON FILE " D ERR Q
"RTN","AHMLDOR2",278,0)
 ;
"RTN","AHMLDOR2",279,0)
 Q
"RTN","AHMLDOR2",280,0)
 ;
"RTN","AHMLDOR2",281,0)
SRADTI ; get RADTE & RADTI
"RTN","AHMLDOR2",282,0)
 ; input EXAMDT, Exam Date/Time in HL7 format
"RTN","AHMLDOR2",283,0)
 K RADTE,RADTI
"RTN","AHMLDOR2",284,0)
 S RADTE=EXMDT
"RTN","AHMLDOR2",285,0)
 ; RADTI is 9's complement of FM Internal D/T and used as 3rd subscript in 70.02, 70.03, etc.
"RTN","AHMLDOR2",286,0)
 S RADTI=9999999.9999-RADTE ; ^RADPT(RADFN,"DT",RADTI, . . .
"RTN","AHMLDOR2",287,0)
 ;BL;Adding code to ensure only 1 test per RADTI;JIRA 1822
"RTN","AHMLDOR2",288,0)
 ;check for existing RADTI
"RTN","AHMLDOR2",289,0)
CKRADTI ;begin loop for RADTI check (need a new RADTI)
"RTN","AHMLDOR2",290,0)
 K CHKRADTI
"RTN","AHMLDOR2",291,0)
 S CHKRADTI=$$GET1^DIQ(70.02,RADTI_","_DFN,.01,"I")
"RTN","AHMLDOR2",292,0)
 I CHKRADTI'="" D INCTI
"RTN","AHMLDOR2",293,0)
 Q
"RTN","AHMLDOR2",294,0)
INCTI ;RADTI exists increment X2 
"RTN","AHMLDOR2",295,0)
 S RADTE=$$FMADD^XLFDT(RADTE,,,+1)
"RTN","AHMLDOR2",296,0)
 S RADTI=9999999.9999-RADTE
"RTN","AHMLDOR2",297,0)
 D CKRADTI
"RTN","AHMLDOR2",298,0)
 Q
"RTN","AHMLDOR2",299,0)
SCASE ; get case#
"RTN","AHMLDOR2",300,0)
 ; RADTE & RADTI must be defined.
"RTN","AHMLDOR2",301,0)
 N RATYPE,RASET,RAX
"RTN","AHMLDOR2",302,0)
 S RATYPE=1,RASET=0
"RTN","AHMLDOR2",303,0)
 K CASE,LCASE
"RTN","AHMLDOR2",304,0)
 S CASE="",LCASE=""
"RTN","AHMLDOR2",305,0)
 D CN^RAREG1 ; create Case#  ;  need agreement
"RTN","AHMLDOR2",306,0)
 ;5265 - build temp Case# xref that the API, CN^RAREG1, uses to get
"RTN","AHMLDOR2",307,0)
 ;       the next available Case number. Both ORP & Legacy use this.
"RTN","AHMLDOR2",308,0)
 ;       Further down in our process, MLDOR2, files are stored, which
"RTN","AHMLDOR2",309,0)
 ;       includes creating the real AE xref.  Then kill temp xref.
"RTN","AHMLDOR2",310,0)
 S ^RADPT("AE",X,$J)=""       ;temp xref  5265
"RTN","AHMLDOR2",311,0)
 S CASE=X
"RTN","AHMLDOR2",312,0)
 ;
"RTN","AHMLDOR2",313,0)
 S LCASE=$E(RADTE,4,5)_$E(RADTE,6,7)_$E(RADTE,2,3)_"-"_CASE
"RTN","AHMLDOR2",314,0)
 I $D(^RADPT("ADC",LCASE)) S LROK=0,AHOUT(1)="-1^CASE NUMBER ALREADY IN USE"
"RTN","AHMLDOR2",315,0)
 Q
"RTN","AHMLDOR2",316,0)
HLD(XD) ; convert HL7 date to FM date
"RTN","AHMLDOR2",317,0)
 Q:$G(XD)="" ""
"RTN","AHMLDOR2",318,0)
 Q $$HL7TFM^XLFDT(XD)
"RTN","AHMLDOR2",319,0)
 ;
"RTN","AHMLDOR2",320,0)
ERR ;
"RTN","AHMLDOR2",321,0)
 S RACNT=RACNT+1,AHOUT(RACNT)="ERR^"_MSG,LROK=0
"RTN","AHMLDOR2",322,0)
 Q
"RTN","AHMLDOR2",323,0)
GETSTA(PROC,STATUS) ; get status (EXSTAT) for RADPT ; rhl 20100929 - new subrtn
"RTN","AHMLDOR2",324,0)
 N IMGTYP,XIEN,X7,XSTAT
"RTN","AHMLDOR2",325,0)
 S EXMSTA=""
"RTN","AHMLDOR2",326,0)
 ;BL;IA compliance change
"RTN","AHMLDOR2",327,0)
 S IMGTYP=$$GET1^DIQ(71,PROC,12,"I") I IMGTYP="" Q ""
"RTN","AHMLDOR2",328,0)
 ;
"RTN","AHMLDOR2",329,0)
 S XSTAT=""
"RTN","AHMLDOR2",330,0)
 F  S XSTAT=$O(^RA(72,"B",XSTAT)) Q:XSTAT=""  D  Q:EXMSTA
"RTN","AHMLDOR2",331,0)
 . Q:XSTAT'[STATUS
"RTN","AHMLDOR2",332,0)
 . S XIEN=0 FOR  S XIEN=$O(^RA(72,"B",STATUS,XIEN)) Q:'XIEN  D  Q:EXMSTA
"RTN","AHMLDOR2",333,0)
 . . ;BL;IA compliance change
"RTN","AHMLDOR2",334,0)
 . . S X7=$$GET1^DIQ(72,XIEN,7,"I")
"RTN","AHMLDOR2",335,0)
 . . I X7=IMGTYP S EXMSTA=XIEN
"RTN","AHMLDOR2",336,0)
 ;
"RTN","AHMLDOR2",337,0)
 Q EXMSTA
"RTN","AHMLDOR2",338,0)
 ;
"RTN","AHMLDOR2",339,0)
ENDQ ;
"RTN","AHMLDOR2",340,0)
 K RATEMP,CATEG,CNT,EXMSTA,EXSTAT,HLARY,OR,PMOD,PRIFLG,PRVNM,RACNT
"RTN","AHMLDOR2",341,0)
 K RADARRY,RAONWSTA,AHOUT,RD1,REQDT,SECDGC,SERVICE,SEX,ST,USER
"RTN","AHMLDOR2",342,0)
 K NWSTATUS,VRFPHY,WARD,WPACH,WPRT,WRPT,EXMDT,VRFPHYN,DFN,X
"RTN","AHMLDOR2",343,0)
 Q
"RTN","AHMLDOR3")
0^12^B194698454
"RTN","AHMLDOR3",1,0)
AHMLDOR3 ;LEIDOS/TCK- Remote Ordering - Radiology - Filer ; 2/9/17 2:03pm
"RTN","AHMLDOR3",2,0)
 ;;1.0;Radiology Orders Portability;**1**;March 1, 2016;Build 53
"RTN","AHMLDOR3",3,0)
 ; Reference to ^RADPT( supported by IA #5602
"RTN","AHMLDOR3",4,0)
 ; Reference to NOW^%DTC supported by IA #10000
"RTN","AHMLDOR3",5,0)
 ; Reference to ^RAO(75.1 supported by IA #5604
"RTN","AHMLDOR3",6,0)
 ; Reference to ^OR(100 supported by IA #5196
"RTN","AHMLDOR3",7,0)
 ; Reference to GETDLG^ORCD supported by IA #5493
"RTN","AHMLDOR3",8,0)
 ; Reference to ^RARPT(74 supported by IA #5605
"RTN","AHMLDOR3",9,0)
 ; Reference to NOW^XLFDT supported by IA #10103
"RTN","AHMLDOR3",10,0)
 ; Reference to X7005^RADD3 supported by IA #5661
"RTN","AHMLDOR3",11,0)
 ; Reference to FIELD^DID supported by IA #2052
"RTN","AHMLDOR3",12,0)
 ;
"RTN","AHMLDOR3",13,0)
 ; updated:  20100908
"RTN","AHMLDOR3",14,0)
 ; 4839 - changed Amended Impression & Report text label hdrs.
"RTN","AHMLDOR3",15,0)
 ;        added 3 subhdr lines. File into subfile 74.06 old
"RTN","AHMLDOR3",16,0)
 ;        text data to trigger the AMENDED report headings.
"RTN","AHMLDOR3",17,0)
 ; 4833 - Encrypted Esig now saved, defined as Verifing Doctor.
"RTN","AHMLDOR3",18,0)
 ; 4076 - init Principal Clinic from Requesting Loc
"RTN","AHMLDOR3",19,0)
 ; 5329 - Send Abnormal diag Provider Alert, if needed
"RTN","AHMLDOR3",20,0)
 Q
"RTN","AHMLDOR3",21,0)
 ;
"RTN","AHMLDOR3",22,0)
 ; NOTES:
"RTN","AHMLDOR3",23,0)
 ; RADTE = Examination date/time in FM format truncated to maximum of 4 decimal places.
"RTN","AHMLDOR3",24,0)
 ; RADTI = 9'S complement of RADTE (9999999.9999-RADTE) used as subscript in ^RADPT( to force chronological order.
"RTN","AHMLDOR3",25,0)
 ; CASE = case# a 'Unique' number given to an exam when it is registered (generated by CN^RAREG1) ; AKA short case#
"RTN","AHMLDOR3",26,0)
 ; LCASE = long case# ; LCASE=$E(RADTE,4,5)_$E(RADTE,6,7)_$E(RADTE,2,3)_"-"_CASE
"RTN","AHMLDOR3",27,0)
 ;
"RTN","AHMLDOR3",28,0)
 ;      3 files are affected by Radiology Registration and Resulting:
"RTN","AHMLDOR3",29,0)
 ; ^RADPT(     #70    -- RAD/NUC MED PATIENT FILE
"RTN","AHMLDOR3",30,0)
 ; ^RARPT(     #74    -- RAD/NUC MED REPORTS FILE
"RTN","AHMLDOR3",31,0)
 ; ^RAO(75.1   #75.1  -- RAD/NUC MED ORDERS FILE
"RTN","AHMLDOR3",32,0)
 ;
"RTN","AHMLDOR3",33,0)
 ;====================================================================
"RTN","AHMLDOR3",34,0)
EN ;
"RTN","AHMLDOR3",35,0)
 ;
"RTN","AHMLDOR3",36,0)
 ;
"RTN","AHMLDOR3",37,0)
 Q
"RTN","AHMLDOR3",38,0)
PAT(RADARRY) ; create patient entry in RADPT
"RTN","AHMLDOR3",39,0)
 K DR,DA,DIE,LROK,DLAYGO
"RTN","AHMLDOR3",40,0)
 I $G(RADFN)'>0,$G(DFN)>0 S RADFN=DFN
"RTN","AHMLDOR3",41,0)
 S LROK=1
"RTN","AHMLDOR3",42,0)
 Q:$D(^RADPT(RADFN))
"RTN","AHMLDOR3",43,0)
 N XX,Y,DINUM,DIC,DLAYGO
"RTN","AHMLDOR3",44,0)
 ;
"RTN","AHMLDOR3",45,0)
 S LROK=1
"RTN","AHMLDOR3",46,0)
 S XX=RADFN,DINUM=RADFN,DIC(0)="L",DIC="^RADPT(",DLAYGO=2
"RTN","AHMLDOR3",47,0)
 K RADFN
"RTN","AHMLDOR3",48,0)
 S RADFN=XX
"RTN","AHMLDOR3",49,0)
 D FILE^DICN
"RTN","AHMLDOR3",50,0)
 I RADFN'=+Y S LROK=0,AHOUT(1)="-1^COULD NOT CREATE RECORD IN RADPT" Q
"RTN","AHMLDOR3",51,0)
 ;
"RTN","AHMLDOR3",52,0)
 S DR=".06////"_DUZ
"RTN","AHMLDOR3",53,0)
 S DA=RADFN,DIE=70 K Y D ^DIE
"RTN","AHMLDOR3",54,0)
 ;
"RTN","AHMLDOR3",55,0)
 Q
"RTN","AHMLDOR3",56,0)
 ;========================================================== 
"RTN","AHMLDOR3",57,0)
REG(RADARRY) ; register exam in RADPT (#70)  & RAO(75.1  (#75.1)
"RTN","AHMLDOR3",58,0)
 ; Input:
"RTN","AHMLDOR3",59,0)
 ;
"RTN","AHMLDOR3",60,0)
 N RADFDA,RAIEN,ERRMSG,NOW,REQSTA,RAONWSTA,%,DT1
"RTN","AHMLDOR3",61,0)
 D NOW^%DTC S NOW=%
"RTN","AHMLDOR3",62,0)
 S RADARRY("REQSTA")=6,RADARRY("RAONWSTA")="6"
"RTN","AHMLDOR3",63,0)
 ;
"RTN","AHMLDOR3",64,0)
 ;    file #70.02:    Registered Exams
"RTN","AHMLDOR3",65,0)
 S DT1=RADTI
"RTN","AHMLDOR3",66,0)
 K DFN
"RTN","AHMLDOR3",67,0)
 S DFN=RADFN
"RTN","AHMLDOR3",68,0)
 S RAIEN(1)=DT1
"RTN","AHMLDOR3",69,0)
 S RADFDA(70.02,"+1,"_RADFN_",",.01)=RADTE      ; exam date/time
"RTN","AHMLDOR3",70,0)
 S RADFDA(70.02,"+1,"_RADFN_",",2)=RADARRY("IMGTYP")   ; type of image=>79.2
"RTN","AHMLDOR3",71,0)
 S RADFDA(70.02,"+1,"_RADFN_",",3)=RADARRY("HOSDIV")   ; hospital division=>79
"RTN","AHMLDOR3",72,0)
 S RADFDA(70.02,"+1,"_RADFN_",",4)=RADARRY("IMGLOC")   ; imaging location=>79.1
"RTN","AHMLDOR3",73,0)
 ;
"RTN","AHMLDOR3",74,0)
 D UPDATE^DIE("S","RADFDA","RAIEN","ERRMSG")
"RTN","AHMLDOR3",75,0)
 I $G(DIERR) D ERR
"RTN","AHMLDOR3",76,0)
 ;    file #70.03:    Examinations
"RTN","AHMLDOR3",77,0)
 K RADFDA,ERRMSG
"RTN","AHMLDOR3",78,0)
 S RADFDA(70.03,"+2,"_RADTI_","_RADFN_",",.01)=RADARRY("CASE")   ; case#
"RTN","AHMLDOR3",79,0)
 S RADFDA(70.03,"+2,"_RADTI_","_RADFN_",",2)=RADARRY("PROC")     ; procedure=>71
"RTN","AHMLDOR3",80,0)
 S RADFDA(70.03,"+2,"_RADTI_","_RADFN_",",3)=RADARRY("EXSTAT")   ; exam status=>72
"RTN","AHMLDOR3",81,0)
 S RADFDA(70.03,"+2,"_RADTI_","_RADFN_",",4)=RADARRY("EXCAT")    ; category of exam:codes
"RTN","AHMLDOR3",82,0)
 S RADFDA(70.03,"+2,"_RADTI_","_RADFN_",",6)=RADARRY("WARD")     ; ward=>42
"RTN","AHMLDOR3",83,0)
 S RADFDA(70.03,"+2,"_RADTI_","_RADFN_",",7)=RADARRY("SERVC")    ; service=>49
"RTN","AHMLDOR3",84,0)
 S RADFDA(70.03,"+2,"_RADTI_","_RADFN_",",8)=RADARRY("REQLOC")  ;4076 dupe in Reqloc ptr=>44
"RTN","AHMLDOR3",85,0)
 S RADFDA(70.03,"+2,"_RADTI_","_RADFN_",",11)=RADARRY("RAOIEN")  ; imaging order=>75.1
"RTN","AHMLDOR3",86,0)
 S RADFDA(70.03,"+2,"_RADTI_","_RADFN_",",14)=RADARRY("REQPRV")  ; requesting provider=>200
"RTN","AHMLDOR3",87,0)
 S RADFDA(70.03,"+2,"_RADTI_","_RADFN_",",19)=RADARRY("BED")     ; bedsection=>42.4
"RTN","AHMLDOR3",88,0)
 S RADFDA(70.03,"+2,"_RADTI_","_RADFN_",",21)=RADARRY("REQDT")   ; request date
"RTN","AHMLDOR3",89,0)
 S RADFDA(70.03,"+2,"_RADTI_","_RADFN_",",22)=RADARRY("REQLOC")  ; request location=>44
"RTN","AHMLDOR3",90,0)
 S RADFDA(70.03,"+2,"_RADTI_","_RADFN_",",26)=RADARRY("CRDMTH")  ; credit method: codes
"RTN","AHMLDOR3",91,0)
 ;
"RTN","AHMLDOR3",92,0)
 D UPDATE^DIE("S","RADFDA","","ERRMSG")
"RTN","AHMLDOR3",93,0)
 I $G(DIERR) D ERR
"RTN","AHMLDOR3",94,0)
 ;
"RTN","AHMLDOR3",95,0)
 ;   get DA2
"RTN","AHMLDOR3",96,0)
 N RAOIEN S RAOIEN=RADARRY("RAOIEN") ; 20110329
"RTN","AHMLDOR3",97,0)
 N DA2,FOUND S FOUND=0 ; 20110329
"RTN","AHMLDOR3",98,0)
 S DA2=0,DA2=$O(^RADPT(RADFN,"DT",RADTI,"P",DA2)) Q:FOUND  ; 20110329
"RTN","AHMLDOR3",99,0)
 Q:'DA2
"RTN","AHMLDOR3",100,0)
 I $P(^RADPT(RADFN,"DT",RADTI,"P",DA2,0),"^",11)=RAOIEN S FOUND=1 ; 20110329
"RTN","AHMLDOR3",101,0)
 I 'FOUND S DA2=0 ; 20110329
"RTN","AHMLDOR3",102,0)
 ;
"RTN","AHMLDOR3",103,0)
 ;Need to update 70.05 exam status change history
"RTN","AHMLDOR3",104,0)
 I $G(DA2) D  ; 20110329
"RTN","AHMLDOR3",105,0)
 . K RADFDA,ERRMSG
"RTN","AHMLDOR3",106,0)
 . ;D A7007^RADD3(RADFN,RADTI,DA2,RADARRY("DUZ"),$G(RADARRY("TECH")))
"RTN","AHMLDOR3",107,0)
 . S RADFDA(70.07,"+1,"_DA2_","_RADTI_","_RADFN_",",.01)=$$NOW^XLFDT
"RTN","AHMLDOR3",108,0)
 . S RADFDA(70.07,"+1,"_DA2_","_RADTI_","_RADFN_",",2)="E"
"RTN","AHMLDOR3",109,0)
 . S RADFDA(70.07,"+1,"_DA2_","_RADTI_","_RADFN_",",3)=$G(RADARRY("DUZ"))
"RTN","AHMLDOR3",110,0)
 . S RADFDA(70.07,"+1,"_DA2_","_RADTI_","_RADFN_",",4)=$G(RADARRY("TECH"))
"RTN","AHMLDOR3",111,0)
 . D UPDATE^DIE("S","RADFDA","","ERRMSG") K RADFDA,ERRMSG
"RTN","AHMLDOR3",112,0)
 . S EXSTAT=RADARRY("EXSTAT")
"RTN","AHMLDOR3",113,0)
 . D X7005^RADD3(RADFN,RADTI,DA2,1,"",EXSTAT,RADARRY("DUZ"))
"RTN","AHMLDOR3",114,0)
 . I $G(DIERR) D ERR
"RTN","AHMLDOR3",115,0)
 ;    log activity in RAO(75.1
"RTN","AHMLDOR3",116,0)
 K RADFDA,ERRMSG
"RTN","AHMLDOR3",117,0)
 S RADFDA(75.1,RAOIEN_",",5)=RADARRY("REQSTA")      ; request status:codes
"RTN","AHMLDOR3",118,0)
 I SEX="F" S RADFDA(75.1,RAOIEN_",",13)=RADARRY("PRGFLG")     ; preg flag ; rhl 20100927
"RTN","AHMLDOR3",119,0)
 S RADFDA(75.1,RAOIEN_",",18)=RADARRY("NOW")     ; last activity d/t
"RTN","AHMLDOR3",120,0)
 S RADFDA(75.12,"+1,"_RAOIEN_",",.01)=RADARRY("NOW")   ; status change d/t
"RTN","AHMLDOR3",121,0)
 S RADFDA(75.12,"+1,"_RAOIEN_",",2)=RADARRY("RAONWSTA")    ; new status:codes
"RTN","AHMLDOR3",122,0)
 ;S RADFDA(75.12,"+1,"_RAOIEN_",",3)=RADARRY("VRFPHY")  ; computer user=>200
"RTN","AHMLDOR3",123,0)
 ;
"RTN","AHMLDOR3",124,0)
 D UPDATE^DIE("S","RADFDA","","ERRMSG")
"RTN","AHMLDOR3",125,0)
 I $G(DIERR) D ERR
"RTN","AHMLDOR3",126,0)
 ;
"RTN","AHMLDOR3",127,0)
 ;Pregnancy update in 100 file 4.5 node (Dialogue)
"RTN","AHMLDOR3",128,0)
 ;convert from lower case to upper case
"RTN","AHMLDOR3",129,0)
 ;First check to see if Rad status is set in OR(100 file
"RTN","AHMLDOR3",130,0)
 K PRGSEQ,PRGDONE,LSTSEQ,PRGSEQ,LSTSEQ,PRGTEXT1,PRGTEXT2,PRGTEXT
"RTN","AHMLDOR3",131,0)
 S PRGSEQ=5,PRGDONE=0  ;Never going to have less than a 6 for pregnancy sequence
"RTN","AHMLDOR3",132,0)
 S ORIEN=$G(RADARRY("ORIEN"))
"RTN","AHMLDOR3",133,0)
 I $G(SEX)="F" D
"RTN","AHMLDOR3",134,0)
 . F  S PRGSEQ=$O(^OR(100,ORIEN,4.5,PRGSEQ)) Q:PRGSEQ'=+PRGSEQ  D
"RTN","AHMLDOR3",135,0)
 . . I ^OR(100,ORIEN,4.5,PRGSEQ,0)["PREGNANT" S PRGDONE=1
"RTN","AHMLDOR3",136,0)
 . . S LSTSEQ=PRGSEQ
"RTN","AHMLDOR3",137,0)
 . I PRGDONE=0 D
"RTN","AHMLDOR3",138,0)
 . . N ORDIALOG
"RTN","AHMLDOR3",139,0)
 . . K PRGFLG
"RTN","AHMLDOR3",140,0)
 . . S PRGFLG=RADARRY("PRGFLG")
"RTN","AHMLDOR3",141,0)
 . . S PRGFLG=$TR(PRGFLG,"nyu","NYU")
"RTN","AHMLDOR3",142,0)
 . . D GETDLG^ORCD(1)
"RTN","AHMLDOR3",143,0)
 . . S PRGTEXT1=$P(ORDIALOG("B","PREGNANT"),"^",2)
"RTN","AHMLDOR3",144,0)
 . . S PRGTEXT2=$P(ORDIALOG(PRGTEXT1),"^")
"RTN","AHMLDOR3",145,0)
 . . K ORDIALOG
"RTN","AHMLDOR3",146,0)
 . . N RAIEN,RADFDA,RADFILE
"RTN","AHMLDOR3",147,0)
 . . S RADFILE=100.045,RAIEN=ORIEN_","
"RTN","AHMLDOR3",148,0)
 . . S RADFDA(1,RADFILE,"+1,"_RAIEN,.01)=PRGTEXT2
"RTN","AHMLDOR3",149,0)
 . . S RADFDA(1,RADFILE,"+1,"_RAIEN,.02)=PRGTEXT1
"RTN","AHMLDOR3",150,0)
 . . S RADFDA(1,RADFILE,"+1,"_RAIEN,.03)="1"
"RTN","AHMLDOR3",151,0)
 . . S RADFDA(1,RADFILE,"+1,"_RAIEN,.04)="PREGNANT"
"RTN","AHMLDOR3",152,0)
 . . S RADFDA(1,RADFILE,"+1,"_RAIEN,1)=PRGFLG
"RTN","AHMLDOR3",153,0)
 . . D UPDATE^DIE("S","RADFDA(1)","","ERRMSG") K RADFDA,RADFILE,RAIEN
"RTN","AHMLDOR3",154,0)
 ;
"RTN","AHMLDOR3",155,0)
REGQ ; 
"RTN","AHMLDOR3",156,0)
 K CNT,EXSTAT,II,IDX,PROCMOD1,PROCMOD2,RADARRY,AHOUT,SEX
"RTN","AHMLDOR3",157,0)
 Q
"RTN","AHMLDOR3",158,0)
 ;==========================================================
"RTN","AHMLDOR3",159,0)
 ;
"RTN","AHMLDOR3",160,0)
FLEMOD(PMOD) ;
"RTN","AHMLDOR3",161,0)
 Q:'$D(PMOD)
"RTN","AHMLDOR3",162,0)
 S IDX="" F  S IDX=$O(PMOD(IDX)) Q:IDX=""  D
"RTN","AHMLDOR3",163,0)
 .Q:$G(PMOD(IDX))=""
"RTN","AHMLDOR3",164,0)
 .S MOD=PMOD(IDX) K PMOD(IDX)
"RTN","AHMLDOR3",165,0)
 .S RADARRY("PROCMOD")=MOD
"RTN","AHMLDOR3",166,0)
 .S RADFDA(70.1,"+1,"_DA2_","_RADTI_","_RADFN_",",.01)=RADARRY("PROCMOD")
"RTN","AHMLDOR3",167,0)
 .D UPDATE^DIE("S","RADFDA","","ERRMSG")
"RTN","AHMLDOR3",168,0)
 .S ORIEN=$G(RADARRY("ORIEN"))
"RTN","AHMLDOR3",169,0)
 .Q:$$CHKMOD(ORIEN,MOD)
"RTN","AHMLDOR3",170,0)
 .N ORDIALOG
"RTN","AHMLDOR3",171,0)
 .K PROCMOD
"RTN","AHMLDOR3",172,0)
 .S PROCMOD=RADARRY("PROCMOD")
"RTN","AHMLDOR3",173,0)
 .D GETDLG^ORCD(1)
"RTN","AHMLDOR3",174,0)
 .S PROCMOD1=$P(ORDIALOG("B","PROCEDURE MODIFIER"),"^",2)
"RTN","AHMLDOR3",175,0)
 .S PROCMOD2=$P(ORDIALOG(PROCMOD1),"^")
"RTN","AHMLDOR3",176,0)
 .S II=$O(^OR(100,ORIEN,4.5,"ID","MODIFIER",999),-1)
"RTN","AHMLDOR3",177,0)
 .S II=$G(II)+1
"RTN","AHMLDOR3",178,0)
 .K ORDIALOG
"RTN","AHMLDOR3",179,0)
 .N RAIEN,RADFDA,RADFILE
"RTN","AHMLDOR3",180,0)
 .S RADFILE=100.045,RAIEN=ORIEN_","
"RTN","AHMLDOR3",181,0)
 .S RADFDA(1,RADFILE,"+1,"_RAIEN,.01)=PROCMOD2
"RTN","AHMLDOR3",182,0)
 .S RADFDA(1,RADFILE,"+1,"_RAIEN,.02)=PROCMOD1
"RTN","AHMLDOR3",183,0)
 .S RADFDA(1,RADFILE,"+1,"_RAIEN,.03)=$G(II)
"RTN","AHMLDOR3",184,0)
 .S RADFDA(1,RADFILE,"+1,"_RAIEN,.04)="MODIFIER"
"RTN","AHMLDOR3",185,0)
 .S RADFDA(1,RADFILE,"+1,"_RAIEN,1)=RADARRY("PROCMOD")
"RTN","AHMLDOR3",186,0)
 .D UPDATE^DIE("S","RADFDA(1)","","ERRMSG") K RADFDA,RADFILE,RAIEN
"RTN","AHMLDOR3",187,0)
 Q
"RTN","AHMLDOR3",188,0)
 ;
"RTN","AHMLDOR3",189,0)
CHKMOD(ORIEN,MOD) ;
"RTN","AHMLDOR3",190,0)
 N NN
"RTN","AHMLDOR3",191,0)
 S FOUND=0,NN=""
"RTN","AHMLDOR3",192,0)
 Q:'$D(^OR(100,ORIEN,4.5,"ID","MODIFIER"))
"RTN","AHMLDOR3",193,0)
 F  S NN=$O(^OR(100,ORIEN,4.5,"ID","MODIFIER",NN)) Q:NN=""  D  Q:FOUND
"RTN","AHMLDOR3",194,0)
 .Q:$P(^OR(100,ORIEN,4.5,NN,0),"^",4)'["MOD"
"RTN","AHMLDOR3",195,0)
 .Q:'$D(^OR(100,ORIEN,4.5,NN,1))
"RTN","AHMLDOR3",196,0)
 .I MOD=^OR(100,ORIEN,4.5,NN,1) S FOUND=1
"RTN","AHMLDOR3",197,0)
 Q FOUND
"RTN","AHMLDOR3",198,0)
 ;
"RTN","AHMLDOR3",199,0)
RPT(RADARRY) ; file results in RADPT (#70), RARPT (#74)
"RTN","AHMLDOR3",200,0)
 ; Input: CASE, RAOIEN, ORIEN
"RTN","AHMLDOR3",201,0)
 N RADTI,DA2,NOW,ACTION,ERROR
"RTN","AHMLDOR3",202,0)
 D NOW^%DTC S NOW=%
"RTN","AHMLDOR3",203,0)
 S RADARRY("RPTSTA")="V",ERROR=0
"RTN","AHMLDOR3",204,0)
 ; Input:
"RTN","AHMLDOR3",205,0)
 ;
"RTN","AHMLDOR3",206,0)
 ;
"RTN","AHMLDOR3",207,0)
 ;bsl; add code for amending results
"RTN","AHMLDOR3",208,0)
 ;Must check to see if results have already been filed
"RTN","AHMLDOR3",209,0)
 K AMEND,EXRSLT
"RTN","AHMLDOR3",210,0)
 D GETDPT I 'LROK S AHOUT(1)="-1^COULD NOT FIND RECORD TO POST RESULTS" Q
"RTN","AHMLDOR3",211,0)
 S EXRSLT=^RADPT(RADFN,"DT",RADTI,"P",DA2,0)
"RTN","AHMLDOR3",212,0)
 S RPTIEN=+$P(EXRSLT,"^",17)     ;convert to number
"RTN","AHMLDOR3",213,0)
 ;
"RTN","AHMLDOR3",214,0)
 ;* Report amendment process, Do IF ien non 0 and then quit filer *
"RTN","AHMLDOR3",215,0)
RPTIEN ;
"RTN","AHMLDOR3",216,0)
 I RPTIEN D  Q
"RTN","AHMLDOR3",217,0)
 . N II
"RTN","AHMLDOR3",218,0)
 . D RPTERR    ;4839-save prev text fields first/Error Reports subfile
"RTN","AHMLDOR3",219,0)
 . ;
"RTN","AHMLDOR3",220,0)
 . ;4839:
"RTN","AHMLDOR3",221,0)
 . ;save incoming text fields to RARPT file #74
"RTN","AHMLDOR3",222,0)
 . ;        Impression amended text
"RTN","AHMLDOR3",223,0)
 . I $D(WPIT("WP")) D
"RTN","AHMLDOR3",224,0)
 . . S AMEND("WP",1)=""
"RTN","AHMLDOR3",225,0)
 . . S AMEND("WP",2)="***Addendum Below***"
"RTN","AHMLDOR3",226,0)
 . . ;insert blank if needed
"RTN","AHMLDOR3",227,0)
 . . S II=$O(WPIT("WP",0))
"RTN","AHMLDOR3",228,0)
 . . S:$G(WPIT("WP",II))]"" AMEND("WP",3)=""
"RTN","AHMLDOR3",229,0)
 . . D WP^DIE(74,RPTIEN_",",300,"A","AMEND(""WP"")","ERRMSG")
"RTN","AHMLDOR3",230,0)
 . . D WP^DIE(74,RPTIEN_",",300,"A","WPIT(""WP"")","ERRMSG")
"RTN","AHMLDOR3",231,0)
 . . K AMEND("WP")
"RTN","AHMLDOR3",232,0)
 . ;        Report amended text
"RTN","AHMLDOR3",233,0)
 . I $D(WPRT("WP")) D
"RTN","AHMLDOR3",234,0)
 . . S AMEND("WP",1)=""
"RTN","AHMLDOR3",235,0)
 . . S AMEND("WP",2)="***Addendum Below***"
"RTN","AHMLDOR3",236,0)
 . . ;insert blank if needed
"RTN","AHMLDOR3",237,0)
 . . S II=$O(WPRT("WP",0))
"RTN","AHMLDOR3",238,0)
 . . S:$G(WPRT("WP",II))]"" AMEND("WP",3)=""
"RTN","AHMLDOR3",239,0)
 . . D WP^DIE(74,RPTIEN_",",200,"A","AMEND(""WP"")","ERRMSG")
"RTN","AHMLDOR3",240,0)
 . . D WP^DIE(74,RPTIEN_",",200,"A","WPRT(""WP"")","ERRMSG")
"RTN","AHMLDOR3",241,0)
 . ;update Report DT & Verify DT & xref to show the amended DOD report
"RTN","AHMLDOR3",242,0)
 . ;time - 4839
"RTN","AHMLDOR3",243,0)
 . N OLDVTIM,VNOW
"RTN","AHMLDOR3",244,0)
 . S OLDVTIM=$P(^RARPT(RPTIEN,0),U,7),OLDVTIM=9999999.9999-OLDVTIM
"RTN","AHMLDOR3",245,0)
 . K ^RARPT("AA",OLDVTIM,RPTIEN)
"RTN","AHMLDOR3",246,0)
 . S VNOW=$E($$NOW^XLFDT,1,12)
"RTN","AHMLDOR3",247,0)
 . S $P(^RARPT(RPTIEN,0),U,7)=VNOW
"RTN","AHMLDOR3",248,0)
 . S $P(^RARPT(RPTIEN,0),U,8)=VNOW
"RTN","AHMLDOR3",249,0)
 . S ^RARPT("AA",9999999.9999-VNOW,RPTIEN)=""
"RTN","AHMLDOR3",250,0)
 . D END
"RTN","AHMLDOR3",251,0)
 ;* End of Report amendment process *
"RTN","AHMLDOR3",252,0)
 ;
"RTN","AHMLDOR3",253,0)
 ;** Filing of original reports below **
"RTN","AHMLDOR3",254,0)
 ;  file RARPT #74
"RTN","AHMLDOR3",255,0)
 K RPTIEN,DIE,DA,DR
"RTN","AHMLDOR3",256,0)
 N XX,DIC,DLAYGO
"RTN","AHMLDOR3",257,0)
 S XX=LCASE,DIC(0)="L",DIC="^RARPT(",DLAYGO=2
"RTN","AHMLDOR3",258,0)
 D FILE^DICN S RPTIEN=+Y ; create new report record file# 74
"RTN","AHMLDOR3",259,0)
 S RADARRY("RPTIEN")=RPTIEN
"RTN","AHMLDOR3",260,0)
 ;
"RTN","AHMLDOR3",261,0)
 K RADFDA,ERRMSG,LCASE
"RTN","AHMLDOR3",262,0)
 S RADFDA(74,RPTIEN_",",2)=RADARRY("RADFN")      ; patient=>2
"RTN","AHMLDOR3",263,0)
 S RADFDA(74,RPTIEN_",",3)=RADARRY("EXMDT")    ; exam dt
"RTN","AHMLDOR3",264,0)
 S RADFDA(74,RPTIEN_",",4)=RADARRY("CASE")     ; case#
"RTN","AHMLDOR3",265,0)
 S RADFDA(74,RPTIEN_",",5)=RADARRY("RPTSTA")   ; report status:codes
"RTN","AHMLDOR3",266,0)
 S RADFDA(74,RPTIEN_",",6)=RADARRY("RPTENTDT") ; date report entered
"RTN","AHMLDOR3",267,0)
 S RADFDA(74,RPTIEN_",",7)=RADARRY("VRFDT")    ; verified date
"RTN","AHMLDOR3",268,0)
 S RADFDA(74,RPTIEN_",",8)=RADARRY("RPTDT")    ; reported date
"RTN","AHMLDOR3",269,0)
 S RADFDA(74,RPTIEN_",",10)=RADARRY("ESCD")    ; electronic signature code
"RTN","AHMLDOR3",270,0)
 S RADFDA(74,RPTIEN_",",11)=RADARRY("TRNSCP")  ; transcriptionist=>200
"RTN","AHMLDOR3",271,0)
 S RADFDA(74,RPTIEN_",",17)=RADARRY("SCVBY")   ; status changed to verified by=>200
"RTN","AHMLDOR3",272,0)
 S RADFDA(74,RPTIEN_",",86)=RADARRY("ITRLOC")  ; interpreting imaging location=>79.1
"RTN","AHMLDOR3",273,0)
 ;
"RTN","AHMLDOR3",274,0)
 K FLAGS
"RTN","AHMLDOR3",275,0)
 S FLAGS=""
"RTN","AHMLDOR3",276,0)
 D FILE^DIE(FLAGS,"RADFDA","ERRMSG")
"RTN","AHMLDOR3",277,0)
 I $G(DIERR) D ERR
"RTN","AHMLDOR3",278,0)
 ;
"RTN","AHMLDOR3",279,0)
 K RADFDA,ERRMSG
"RTN","AHMLDOR3",280,0)
 S RADFDA(74.01,"+1,"_RPTIEN_",",.01)=RADARRY("NOW") ; log date
"RTN","AHMLDOR3",281,0)
 S RADFDA(74.01,"+1,"_RPTIEN_",",2)=RADARRY("ACTION")    ; type of action
"RTN","AHMLDOR3",282,0)
 S RADFDA(74.01,"+1,"_RPTIEN_",",3)=RADARRY("DUZ")       ; computer user
"RTN","AHMLDOR3",283,0)
 D UPDATE^DIE("S","RADFDA","","ERRMSG")
"RTN","AHMLDOR3",284,0)
 I $G(DIERR) D ERR
"RTN","AHMLDOR3",285,0)
 ;     file word processing data
"RTN","AHMLDOR3",286,0)
 I $D(WPACH("WP")) D WP^DIE(74,RPTIEN_",",400,"","WPACH(""WP"")","ERRMSG")  ; additional clinical history
"RTN","AHMLDOR3",287,0)
 I $D(WPIT("WP")) D WP^DIE(74,RPTIEN_",",300,"","WPIT(""WP"")","ERRMSG")     ; impression text
"RTN","AHMLDOR3",288,0)
 I $D(WPRT("WP")) D WP^DIE(74,RPTIEN_",",200,"","WPRT(""WP"")","ERRMSG")     ; report text
"RTN","AHMLDOR3",289,0)
 ;
"RTN","AHMLDOR3",290,0)
 ;  file results into RADPT( exminations
"RTN","AHMLDOR3",291,0)
 ;    file #70.03:
"RTN","AHMLDOR3",292,0)
 K RADFDA,ERRMSG,PROC
"RTN","AHMLDOR3",293,0)
 S FLAGS=""
"RTN","AHMLDOR3",294,0)
 ;BSL;Set exam status to complete
"RTN","AHMLDOR3",295,0)
 S RADARRY("EXSTAT")=$$GETSTA^AHMLDOR2(RADARRY("PROC"),"COMPLETE")
"RTN","AHMLDOR3",296,0)
 ;
"RTN","AHMLDOR3",297,0)
 S RADFDA(70.03,DA2_","_RADTI_","_RADFN_",",13)=RADARRY("PRIDGC")   ; primary diagnosis code=>74
"RTN","AHMLDOR3",298,0)
 S RADFDA(70.03,DA2_","_RADTI_","_RADFN_",",15)=RADARRY("PRISTF")   ; primary interpreting staff=>200
"RTN","AHMLDOR3",299,0)
 S RADFDA(70.03,DA2_","_RADTI_","_RADFN_",",17)=RADARRY("RPTIEN")   ; report text=>74
"RTN","AHMLDOR3",300,0)
 S RADFDA(70.03,DA2_","_RADTI_","_RADFN_",",3)=RADARRY("EXSTAT")  ;EXAM STATUS
"RTN","AHMLDOR3",301,0)
 S FLAGS=""
"RTN","AHMLDOR3",302,0)
 D FILE^DIE(FLAGS,"RADFDA","ERRMSG")
"RTN","AHMLDOR3",303,0)
 I $G(DIERR) D ERR
"RTN","AHMLDOR3",304,0)
 D X7005^RADD3(RADFN,RADTI,DA2,"","",RADARRY("EXSTAT"),$G(RADARRY("DUZ")))
"RTN","AHMLDOR3",305,0)
 D A7007^RADD3(RADFN,RADTI,DA2,RADARRY("DUZ"),$G(RADARRY("TECH")))
"RTN","AHMLDOR3",306,0)
 ;Update 100 File
"RTN","AHMLDOR3",307,0)
 ;BL;Modified to update status regardless of errors, response to JIRA 2048
"RTN","AHMLDOR3",308,0)
 ;file new proc mods if found
"RTN","AHMLDOR3",309,0)
 ;BL;IA compliance change
"RTN","AHMLDOR3",310,0)
 S ORIEN=RADARRY("ORIEN")
"RTN","AHMLDOR3",311,0)
 N NOW
"RTN","AHMLDOR3",312,0)
 S NOW=$$NOW^XLFDT,FLAGS=""
"RTN","AHMLDOR3",313,0)
 S RADFDA(100,ORIEN_",",22)=NOW
"RTN","AHMLDOR3",314,0)
 S RADFDA(100,ORIEN_",",5)=2
"RTN","AHMLDOR3",315,0)
 D FILE^DIE(FLAGS,"RADFDA","ERRMSG")
"RTN","AHMLDOR3",316,0)
 ;add remote user's name to the 8 node of file 100
"RTN","AHMLDOR3",317,0)
 I $D(^OR(100,ORIEN,8,1,.1)) D
"RTN","AHMLDOR3",318,0)
 .S CNT=$P(^OR(100,ORIEN,8,1,.1,0),"^",3)
"RTN","AHMLDOR3",319,0)
 .S CNT=CNT+1,$P(^OR(100,ORIEN,8,1,.1,0),"^",2,3)=CNT
"RTN","AHMLDOR3",320,0)
 .S ^OR(100,ORIEN,8,1,.1,CNT,0)="Verified By: "_RADARRY("USER")
"RTN","AHMLDOR3",321,0)
 I $G(DIERR) D ERR
"RTN","AHMLDOR3",322,0)
 ;UPDATE 75.1 with new status
"RTN","AHMLDOR3",323,0)
 S RADFDA(75.1,RAOIEN_",",5)=RADARRY("EXSTAT")
"RTN","AHMLDOR3",324,0)
 S RADFDA(75.1,RAOIEN_",",18)=RADARRY("NOW")
"RTN","AHMLDOR3",325,0)
 S RADFDA(75.12,"+1,"_RAOIEN_",",.01)=RADARRY("NOW")
"RTN","AHMLDOR3",326,0)
 S RADFDA(75.12,"+1,"_RAOIEN_",",2)=RADARRY("EXSTAT")
"RTN","AHMLDOR3",327,0)
 S RADFDA(75.12,"+1,"_RAOIEN_",",3)=RADARRY("REQPRV")
"RTN","AHMLDOR3",328,0)
 D UPDATE^DIE("S","RADFDA","","ERRMSG")
"RTN","AHMLDOR3",329,0)
 ;
"RTN","AHMLDOR3",330,0)
 ;BL;UPDATE IMAGING LOCATION WHEN RESULTS COME IN; ISSUE 1937
"RTN","AHMLDOR3",331,0)
 S RADFDA(70.02,"+1,"_RADFN_",",4)=RADARRY("IMGLOC")   ; imaging location=>79.1
"RTN","AHMLDOR3",332,0)
 S FLAGS=""
"RTN","AHMLDOR3",333,0)
 D FILE^DIE(FLAGS,"RADFDA","ERRMSG")
"RTN","AHMLDOR3",334,0)
 I $G(DIERR) D ERR
"RTN","AHMLDOR3",335,0)
 ;
"RTN","AHMLDOR3",336,0)
END ;Check if Abnormal Alert needed then, finish cleanup    ;5329
"RTN","AHMLDOR3",337,0)
 ;
"RTN","AHMLDOR3",338,0)
 ;setup variables for Abnormal alert testing & conditional call, ;5329
"RTN","AHMLDOR3",339,0)
 N RAAB,RACNI,RAEXAM0,RARPT
"RTN","AHMLDOR3",340,0)
 S RACNI=$O(^RADPT(RADFN,"DT",RADTI,"P","B",RADARRY("CASE"),0))
"RTN","AHMLDOR3",341,0)
 S RAEXAM0=$S($D(^RADPT(RADFN,"DT",RADTI,"P",RACNI,0)):^RADPT(RADFN,"DT",RADTI,"P",RACNI,0),1:0)
"RTN","AHMLDOR3",342,0)
 S RARPT=RPTIEN    ;Glb Var needed by OE3, file 74 ien
"RTN","AHMLDOR3",343,0)
 I $G(RADARRY("PRIDGC"))>0 D
"RTN","AHMLDOR3",344,0)
 .S RAAB=$S($P(^RA(78.3,+RADARRY("PRIDGC"),0),U,4)="y":1,1:0)
"RTN","AHMLDOR3",345,0)
 I $G(RAAB)>0 D OE3^RAUTL00(RADFN,RADTI,RACNI,RAEXAM0)
"RTN","AHMLDOR3",346,0)
 ;
"RTN","AHMLDOR3",347,0)
 ;cleanup
"RTN","AHMLDOR3",348,0)
 K RIEN,WPACH,WPIT,WPRT,XMSG,RAOIEN,RADTE,RADFDA,RACNT,PMOD,SECDGC,PRIDGC
"RTN","AHMLDOR3",349,0)
 ;
"RTN","AHMLDOR3",350,0)
RPTQ ;
"RTN","AHMLDOR3",351,0)
 Q
"RTN","AHMLDOR3",352,0)
 ;
"RTN","AHMLDOR3",353,0)
GETDPT ; get RADTI  and DA2 for a Case# & orien
"RTN","AHMLDOR3",354,0)
 N STOP
"RTN","AHMLDOR3",355,0)
 S RADTI=0,DA2="",STOP=0,LROK=0
"RTN","AHMLDOR3",356,0)
 F  S RADTI=$O(^RADPT(RADFN,"DT",RADTI)) Q:'RADTI  D  Q:STOP
"RTN","AHMLDOR3",357,0)
 . S DA2=0,DA2=$O(^RADPT(RADFN,"DT",RADTI,"P",DA2))
"RTN","AHMLDOR3",358,0)
 . I RADARRY("CASE")=+^RADPT(RADFN,"DT",RADTI,"P",DA2,0),$P(^RADPT(RADFN,"DT",RADTI,"P",DA2,0),"^",11)=RAOIEN S STOP=1,LROK=1
"RTN","AHMLDOR3",359,0)
 ; sub-sub files
"RTN","AHMLDOR3",360,0)
 Q:'$D(SECDGC)
"RTN","AHMLDOR3",361,0)
 F II=1:1 Q:'$D(SECDGC(II))  D  ; secondary diagnosis code=>78.3
"RTN","AHMLDOR3",362,0)
 .K RADFDA,ERRMSG
"RTN","AHMLDOR3",363,0)
 .S RADFDA(70.14,"+1,"_DA2_","_RADTI_","_RADFN_",",.01)=SECDGC(II)
"RTN","AHMLDOR3",364,0)
 .D UPDATE^DIE("S","RADFDA","","ERRMSG")
"RTN","AHMLDOR3",365,0)
 Q
"RTN","AHMLDOR3",366,0)
 ;
"RTN","AHMLDOR3",367,0)
ERR ; return errors from filer
"RTN","AHMLDOR3",368,0)
 S ERROR=1
"RTN","AHMLDOR3",369,0)
 N XO,XF,XL S XO="" F  S XO=$O(ERRMSG("DIERR",XO)) Q:'XO  D
"RTN","AHMLDOR3",370,0)
 . S XF=$G(ERRMSG("DIERR",XO,"PARAM","FIELD")),XL=$G(ERRMSG("DIERR",XO,"PARAM","FILE")) Q:((XF="")!(XL=""))
"RTN","AHMLDOR3",371,0)
 . S XF=$$DDLBL(XL,XF)
"RTN","AHMLDOR3",372,0)
 . S RACNT=RACNT+1,AHOUT(RACNT)=XF_": "_$G(XMSG("DIERR",XO,"TEXT",1))
"RTN","AHMLDOR3",373,0)
 ;
"RTN","AHMLDOR3",374,0)
 K DIERR,ERRMSG
"RTN","AHMLDOR3",375,0)
 Q
"RTN","AHMLDOR3",376,0)
 ;
"RTN","AHMLDOR3",377,0)
DDLBL(FILE,FLD) ; return field name. (This entry point copied from JVDG, since we're in a separate package.)
"RTN","AHMLDOR3",378,0)
 ; Input:
"RTN","AHMLDOR3",379,0)
 ;    FILE=file#
"RTN","AHMLDOR3",380,0)
 ;    FLD=Field number
"RTN","AHMLDOR3",381,0)
 ;  Returns
"RTN","AHMLDOR3",382,0)
 ;    field's Label
"RTN","AHMLDOR3",383,0)
 I $G(FILE)=""!($G(FLD)="") Q ""
"RTN","AHMLDOR3",384,0)
 N FDA
"RTN","AHMLDOR3",385,0)
 D FIELD^DID(FILE,FLD,"","LABEL","FDA","")
"RTN","AHMLDOR3",386,0)
 Q $G(FDA("LABEL"))
"RTN","AHMLDOR3",387,0)
 ;
"RTN","AHMLDOR3",388,0)
RPTERR ;Saves previous text fields to subfile #74.06 to trigger the Amended 
"RTN","AHMLDOR3",389,0)
 ;report headings.  4839.
"RTN","AHMLDOR3",390,0)
 ;
"RTN","AHMLDOR3",391,0)
 N QQ,CH,RT,IT,ECNT
"RTN","AHMLDOR3",392,0)
 M CH=^RARPT(RPTIEN,"H") K CH(0)
"RTN","AHMLDOR3",393,0)
 M RT=^RARPT(RPTIEN,"R") K RT(0)
"RTN","AHMLDOR3",394,0)
 M IT=^RARPT(RPTIEN,"I") K IT(0)
"RTN","AHMLDOR3",395,0)
 ;build Tmp report with old values for #74.06
"RTN","AHMLDOR3",396,0)
 S ECNT=1
"RTN","AHMLDOR3",397,0)
 S ^TMP($J,"RA AUTOE",ECNT)="** DOD incoming Radiology Results event **"
"RTN","AHMLDOR3",398,0)
 S ECNT=ECNT+1,^TMP($J,"RA AUTOE",ECNT)=""
"RTN","AHMLDOR3",399,0)
 I $D(CH) D
"RTN","AHMLDOR3",400,0)
 . S ECNT=ECNT+1,^TMP($J,"RA AUTOE",ECNT)="  Additional Clinical History:"
"RTN","AHMLDOR3",401,0)
 . F QQ=0:0 S QQ=$O(CH(QQ)) Q:'QQ  D
"RTN","AHMLDOR3",402,0)
 . . S ECNT=ECNT+1,^TMP($J,"RA AUTOE",ECNT)=CH(QQ,0)
"RTN","AHMLDOR3",403,0)
 I $D(RT) D
"RTN","AHMLDOR3",404,0)
 . S ECNT=ECNT+1,^TMP($J,"RA AUTOE",ECNT)="  Report:"
"RTN","AHMLDOR3",405,0)
 . F QQ=0:0 S QQ=$O(RT(QQ)) Q:'QQ  D
"RTN","AHMLDOR3",406,0)
 . . S ECNT=ECNT+1,^TMP($J,"RA AUTOE",ECNT)=RT(QQ,0)
"RTN","AHMLDOR3",407,0)
 I $D(IT) D
"RTN","AHMLDOR3",408,0)
 . S ECNT=ECNT+1,^TMP($J,"RA AUTOE",ECNT)="  Impression:"
"RTN","AHMLDOR3",409,0)
 . F QQ=0:0 S QQ=$O(IT(QQ)) Q:'QQ  D
"RTN","AHMLDOR3",410,0)
 . . S ECNT=ECNT+1,^TMP($J,"RA AUTOE",ECNT)=IT(QQ,0)
"RTN","AHMLDOR3",411,0)
 D EN1^RARTE3(RPTIEN)    ;call to legacy to file ERR nodes in TMP
"RTN","AHMLDOR3",412,0)
 Q
"RTN","AHMLDOR3",413,0)
 ;
"RTN","AHMLDOST")
0^16^B829370
"RTN","AHMLDOST",1,0)
AHMLDOST ;LEIDOS/TCK; REMOTE ORDERING; 12/14/15 6:09pm ; 1/5/17 8:10am
"RTN","AHMLDOST",2,0)
 ;;1.0;Remote orders;**1**;JAN 1, 2016;Build 53
"RTN","AHMLDOST",3,0)
 ;
"RTN","AHMLDOST",4,0)
 Q
"RTN","AHMLDOST",5,0)
EN ;
"RTN","AHMLDOST",6,0)
 N OK,X,X1,X2,Y,REF,CNT,%,DIR,DIV,DTOUT,DUOUT
"RTN","AHMLDOST",7,0)
 S REF="AHMLD",CNT=0
"RTN","AHMLDOST",8,0)
 S DIR(0)="PO^DIC(4,:AENM",DIR("A")="Select INSTITUTION "
"RTN","AHMLDOST",9,0)
 D ^DIR
"RTN","AHMLDOST",10,0)
 I $D(DTOUT)!($D(DUOUT)) Q
"RTN","AHMLDOST",11,0)
 S DIV=Y
"RTN","AHMLDOST",12,0)
 W !,DIV
"RTN","AHMLDOST",13,0)
 I '$D(^XTMP(REF)) D SETZERO(REF)
"RTN","AHMLDOST",14,0)
 Q:$G(DIV)'>0
"RTN","AHMLDOST",15,0)
 S CNT=$O(^XTMP(REF,999999),-1)
"RTN","AHMLDOST",16,0)
 S CNT=$G(CNT)+1
"RTN","AHMLDOST",17,0)
 S ^XTMP(REF,CNT)=DIV
"RTN","AHMLDOST",18,0)
 Q
"RTN","AHMLDOST",19,0)
 ;
"RTN","AHMLDOST",20,0)
SETZERO(REF) ;
"RTN","AHMLDOST",21,0)
 D NOW^%DTC S X1=$P(%,".",1),X2=90,Y=X1 D C^%DTC
"RTN","AHMLDOST",22,0)
 S ^XTMP(REF,0)=X_"^"_Y_"^"_"SPOKE INSTITUTIONS"
"RTN","AHMLDOST",23,0)
 Q
"VER")
8.0^22.0
**END**
**END**